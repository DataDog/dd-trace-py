# This AppSec sandbox runs a sample application protected
# with default security event rules.
#
# 1. Get an API key on:
#
#    https://dd.datad0g.com/organization-settings/api-keys
#
# 2. Export it with:
#
#    export DD_API_KEY=*******************************
#
# 3. Get the docker-compose file:
#
#    curl -o docker-compose.yml https://raw.githubusercontent.com/DataDog/dd-trace-py/nicolas.vivet/appsec-sandbox/docker-compose.appsec.yml
#
# 4. Run the sandbox (it takes a couple of minutes to build the first time):
#
#    docker-compose up
#
# 5. Access the application from the browser:
#
#    http://localhost:8080/
#
version: "3.9"
services:
    agent:
        image: datadog/agent-dev:master
        environment:
         - DD_APPSEC_ENABLED=true
         - DD_APM_NON_LOCAL_TRAFFIC=true
         - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
         - DD_SITE=datad0g.com
         - DD_ENV=appsec-sandbox
         - DD_API_KEY
    app:
        depends_on:
         - agent
        build:
            context: https://github.com/nizox/dd-trace-py.git#appsec
            dockerfile: Dockerfile.appsec
        ports:
         - "8080:80"
        volumes:
         - .:/sandbox
        environment:
         - DD_ENV=appsec-sandbox
         - DD_APPSEC_ENABLED=true
         - DD_PROFILING_ENABLED=true
         - DD_AGENT_HOST=agent
         - DD_TRACE_HEALTH_METRICS_ENABLED=true
         - DD_TRACE_DEBUG
         - DD_APPSEC_RULES
    baseline-generator:
        depends_on:
         - app
        image: peterevans/vegeta
        command:
         - sh
         - -c
         - |
           vegeta attack -rate 1/s -output /dev/null <<EOF
           GET http://app/
           GET http://app/favicon.ico
           POST http://app/anything
           GET http://app/status/500
           EOF
    attack-generator:
        depends_on:
         - app
        image: peterevans/vegeta
        command:
         - sh
         - -c
         - |
           vegeta attack -rate 1/10s -output /dev/null <<EOF
           POST http://app/post?username=<script>
           GET http://app/image/png
           User-Agent: Arachni/v1
           EOF
