stages:
  - test
  - report

variables:
  MICROBENCHMARKS_CI_IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/benchmarking-platform:dd-trace-py

.benchmarks:
  stage: test
  when: on_success
  tags: ["runner:apm-k8s-tweaked-metal"]
  image: $MICROBENCHMARKS_CI_IMAGE
  interruptible: true
  timeout: 1h
  needs: []
  script:
    - export REPORTS_DIR="$(pwd)/reports/" && (mkdir "${REPORTS_DIR}" || :)
    - export CMAKE_BUILD_PARALLEL_LEVEL=12
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/DataDog/".insteadOf "https://github.com/DataDog/"
    - git clone --branch dd-trace-py https://github.com/DataDog/benchmarking-platform /platform && cd /platform
    - ./steps/capture-hardware-software-info.sh
    - '([[ $SCENARIO =~ ^flask_* ]] && BP_SCENARIO=$SCENARIO bp-runner "$REPORTS_DIR/../.gitlab/benchmarks/bp-runner.yml" --debug -t) || (! [[ $SCENARIO =~ ^flask_* ]] && ./steps/run-benchmarks.sh)'
    - ./steps/analyze-results.sh
    - mkdir $REPORTS_DIR/$CI_JOB_ID && (mv $REPORTS_DIR/* $REPORTS_DIR/$CI_JOB_ID/ || :)
  artifacts:
    name: "reports"
    when: always
    paths:
      - reports/
    expire_in: 3 months
  variables:
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID # The ID of the current project. This ID is unique across all projects on the GitLab instance.
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME # "dd-trace-py"
    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME # The branch or tag name for which project is built.
    UPSTREAM_COMMIT_SHA: $CI_COMMIT_SHA # The commit revision the project is built for.
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: dd-trace-py
    FF_USE_LEGACY_KUBERNETES_EXECUTION_STRATEGY: "true"
    CARGO_NET_GIT_FETCH_WITH_CLI: "true" # use system git binary to pull git dependencies
    SCENARIO: "appsec_iast_aspects"

microbenchmarks:
  extends: .benchmarks
  parallel:
    matrix:
      - INDEX:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15

benchmarks-collect-artifacts:
  image: $MICROBENCHMARKS_CI_IMAGE
  tags: ["arch:amd64"]
  stage: report
  when: always
  script:
    - echo "Collected artifacts"
  except:
    - main
  artifacts:
    name: "reports"
    when: always
    paths:
      - reports/
    expire_in: 3 months
  variables:
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID # The ID of the current project. This ID is unique across all projects on the GitLab instance.
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME # "dd-trace-py"
    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME # The branch or tag name for which project is built.
    UPSTREAM_COMMIT_SHA: $CI_COMMIT_SHA # The commit revision the project is built for.
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: dd-trace-py
