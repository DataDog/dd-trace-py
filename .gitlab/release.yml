variables:
  PYPI_PUBLISH_IMAGE: registry.ddbuild.io/images/mirror/python:3.12.0

.release_base:
  stage: release
  only:
    # v2.10.0
    # v2.10.1
    # v2.10.0rc0
    # v2.10.0rc5
    - /^v[0-9]+\.[0-9]+\.[0-9]+(rc[0-9]+)?$/

.release_pypi:
  extends: .release_base
  image: ${PYPI_PUBLISH_IMAGE}
  tags: [ "arch:amd64" ]
  id_tokens:
    VAULT_ID_TOKEN:
      aud: "https://vault.us1.ddbuild.io"
  variables:
    TWINE_USERNAME: "__token__"
    TWINE_NON_INTERACTIVE: "1"
    VAULT_PATH_PREFIX: "kv/ci/${CI_PROJECT_NAME}/protected"
  before_script:
    - |
      wget -O - https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
      apt update && apt install vault
      export VAULT_TOKEN="$(vault write -field=token auth/jwt-gitlab/login role=${CI_PROJECT_NAME}/protected-tag jwt=$VAULT_ID_TOKEN)"
      export VAULT_ADDR=https://vault.us1.ddbuild.io
    - export TWINE_PASSWORD=$(vault kv get -field=${PYPI_REPOSITORY}_token "${VAULT_PATH_PREFIX}/ci")
    - python -m pip install twine
    - python -m twine check --strict pywheels/*
  script:
    - python -m twine upload --repository ${PYPI_REPOSITORY} pywheels/*
  artifacts:
    paths:
      - pywheels/*.whl
      - pywheels/*.tar.gz

# Can be used to validate uploading of artifacts
# release_pypi_test:
#   extends: .release_pypi
#   dependencies: [ "download_ddtrace_artifacts" ]
#   variables:
#     PYPI_REPOSITORY: testpypi

release_pypi_prod:
  extends: .release_pypi
  dependencies: [ "download_ddtrace_artifacts" ]
  variables:
    PYPI_REPOSITORY: pypi
