algoliasearch:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "algoliasearch"

asgi:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "asgi$"

bottle:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "bottle"

cherrypy:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "cherrypy"

dogpile_cache:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "dogpile_cache"

elasticsearch:
  extends: .test_base_riot_snapshot
  parallel: 17
  services:
    - !reference [.test_base_riot_snapshot, services]
    - !reference [.services, elasticsearch]
    - !reference [.services, opensearch]
  variables:
    SUITE_NAME: "elasticsearch"
    TEST_ELASTICSEARCH_HOST: "elasticsearch"
    TEST_OPENSEARCH_HOST: "opensearch"

falcon:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "falcon"

fastapi:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "fastapi"

flask:
  extends: .test_base_riot_snapshot
  parallel: 14
  services:
    - !reference [.test_base_riot_snapshot, services]
    - !reference [.services, memcached]
    - !reference [.services, redis]
  variables:
    SUITE_NAME: "flask"
    TEST_MEMCACHED_HOST: "memcached"
    TEST_REDIS_HOST: "redis"

urllib3:
  extends: .test_base_riot_snapshot
  services:
    - !reference [.test_base_riot_snapshot, services]
    - !reference [.services, httpbin_local]
  variables:
    SUITE_NAME: "urllib3"
    TEST_HTTPBIN_HOST: "httpbin-local"
    TEST_HTTPBIN_PORT: "8001"

kafka:
  extends: .test_base_riot_snapshot
  parallel: 4
  services:
    - !reference [.test_base_riot_snapshot, services]
    - !reference [.services, kafka]
  variables:
    SUITE_NAME: "kafka"
    TEST_KAFKA_HOST: "kafka"
    TEST_KAFKA_PORT: "29092"

aredis:
  extends: .test_base_riot_snapshot
  services:
    - !reference [.test_base_riot_snapshot, services]
    - !reference [.services, redis]
  variables:
    SUITE_NAME: "aredis$"

yaaredis:
  extends: .test_base_riot_snapshot
  services:
    - !reference [.test_base_riot_snapshot, services]
    - !reference [.services, redis]
  variables:
    SUITE_NAME: "yaaredis$"

redis:
  extends: .test_base_riot_snapshot
  services:
    - !reference [.test_base_riot_snapshot, services]
    - !reference [.services, redis]
    - !reference [.services, rediscluster]
  parallel: 5
  variables:
    SUITE_NAME: "^redis$"

rediscluster:
  extends: .test_base_riot_snapshot
  services:
    - !reference [.test_base_riot_snapshot, services]
    - !reference [.services, redis]
    - !reference [.services, rediscluster]
  variables:
    SUITE_NAME: "rediscluster"

rq:
  extends: .test_base_riot_snapshot
  services:
    - !reference [.test_base_riot_snapshot, services]
    - !reference [.services, redis]
  variables:
    SUITE_NAME: "rq"
  parallel: 2

gevent:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "gevent"

graphene:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "graphene"

graphql:
  extends: .test_base_riot_snapshot
  parallel: 6
  variables:
    SUITE_NAME: "graphql"

grpc:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "grpc"

gunicorn:
  extends: .test_base_riot_snapshot
  parallel: 12
  variables:
    SUITE_NAME: "gunicorn"

jinja2:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "jinja2"

mako:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "mako"

molten:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "molten"

pymongo:
  extends: .test_base_riot_snapshot
  services:
    - !reference [.test_base_riot_snapshot, services]
    - !reference [.services, mongo]
  variables:
    SUITE_NAME: "pymongo"

pynamodb:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "pynamodb"

pyodbc:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "pyodbc"

pyramid:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "pyramid"
  before_script:
    - !reference [.test_base_riot_snapshot, before_script]
    # This is because in the riotfile we specify a path to tests/contrib/pyramid/pserve_app
    # in the lockfile it gets replaced with the absolute path of /root/project/tests/.../pserve_app
    - ln -s "${CI_PROJECT_DIR}" "/root/project"

sanic:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "sanic"

snowflake:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "snowflake"

starlette:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "starlette"

structlog:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "structlog"

tornado:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "tornado"

unittest:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "unittest"

wsgi:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "wsgi"

loguru:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "loguru"

logbook:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: "logbook"

asynctest:
  extends: .test_base_riot
  variables:
    SUITE_NAME: 'asynctest$'

pytest_v2:
  extends: .test_base_riot_snapshot
  parallel: 10
  variables:
    SUITE_NAME: 'pytest_plugin_v2'

django_hosts:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: 'django_hosts$'

test_logging:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: 'test_logging'

stdlib:
  extends: .test_base_riot_snapshot
  variables:
    SUITE_NAME: 'asyncio$|sqlite3$|futures$|dbapi$|dbapi_async$'

subprocess:
  extends: .test_base_riot
  variables:
    SUITE_NAME: "subprocess"

opentracer:
  extends: .test_base_riot
  variables:
    SUITE_NAME: "opentracer"
