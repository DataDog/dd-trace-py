variables:
  PYPA_IMAGE_BASE: registry.ddbuild.io/images/mirror/pypa
  PYPA_IMAGE_TAG: 2024-08-12-7fde9b1
  PYPA_DEFAULT_IMAGE: "${PYPA_IMAGE_BASE}/manylinux2014_x86_64:${PYPA_IMAGE_TAG}"


build_ddtrace_sdist:
  image: "${PYPA_DEFAULT_IMAGE}"
  tags: [ "arch:amd64" ]
  stage: package
  script:
    - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y
    - export PATH=$HOME/.cargo/bin:$PATH
    - python3.12 -m build . --sdist --outdir wheelhouse/
  artifacts:
    paths:
      - wheelhouse/

build_ddtrace_linux:
  image: "${PYPA_IMAGE_BASE}/${PLATFORM}_${ARCH}:${PYPA_IMAGE_TAG}"
  tags: [ "${RUNNER}" ]
  stage: package
  parallel:
    matrix:
      # CIBW_MUSLLINUX_I686_IMAGE: ghcr.io/datadog/dd-trace-py/pypa_musllinux_1_2_i686:latest
      - PLATFORM: [ "manylinux2014", "musllinux_1_2" ]
        PYTHON_TAG: ["cp37-cp37m", "cp38-cp38", "cp39-cp39", "cp310-cp310", "cp311-cp311", "cp312-cp312" ]
        ARCH: ["x86_64"]
        RUNNER: "arch:amd64"
      - PLATFORM: [ "manylinux2014" ]
        PYTHON_TAG: ["cp37-cp37m", "cp38-cp38", "cp39-cp39", "cp310-cp310", "cp311-cp311", "cp312-cp312" ]
        ARCH: ["i686"]
        RUNNER: "runner:docker"
      - PLATFORM: [ "manylinux2014", "musllinux_1_2" ]
        PYTHON_TAG: ["cp37-cp37m", "cp38-cp38", "cp39-cp39", "cp310-cp310", "cp311-cp311", "cp312-cp312" ]
        ARCH: ["aarch64"]
        RUNNER: "arch:arm64"
  variables:
    CMAKE_BUILD_PARALLEL_LEVEL: 24
    PATH: "/root/.cargo/bin:/opt/rh/devtoolset-10/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  before_script:
    # Install rust
    - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y
    - rustc --version
    # Check Python dependency versions
    - /opt/python/${PYTHON_TAG}/bin/python --version
    - /opt/python/${PYTHON_TAG}/bin/python -m build --version
  script:
    # Build the wheel
    - /opt/python/${PYTHON_TAG}/bin/python -m build --wheel --outdir wheelhouse/
    # Repair the wheel
    - ./.gitlab/repair_wheel_linux.sh wheelhouse/
    # Download wheel dependencies
    - .gitlab/download-dependency-wheels.sh /opt/python/${PYTHON_TAG}/bin/python
  artifacts:
    paths:
      - wheelhouse/
      - wheelhouse-dep/

build_ddtrace_linux_i686_musl:
  image: "ghcr.io/datadog/dd-trace-py/pypa_musllinux_1_2_i686:latest"
  tags: [ "${RUNNER}" ]
  stage: package
  parallel:
    matrix:
      - PLATFORM: "musllinux_1_2"
        PYTHON_TAG: ["cp37-cp37m", "cp38-cp38", "cp39-cp39", "cp310-cp310", "cp311-cp311", "cp312-cp312" ]
        ARCH: ["i686"]
        RUNNER: "runner:docker"
  variables:
    CMAKE_BUILD_PARALLEL_LEVEL: 24
    PATH: "/root/.cargo/bin:/opt/rh/devtoolset-10/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  before_script:
    # This image already has rustc
    # Check Python dependency versions
    - /opt/python/${PYTHON_TAG}/bin/python --version
    - /opt/python/${PYTHON_TAG}/bin/python -m build --version
  script:
    # Build the wheel
    - /opt/python/${PYTHON_TAG}/bin/python -m build --wheel --outdir wheelhouse/
    # Repair the wheel
    - ./.gitlab/repair_wheel_linux.sh wheelhouse/
    # Download wheel dependencies
    - .gitlab/download-dependency-wheels.sh /opt/python/${PYTHON_TAG}/bin/python
  artifacts:
    paths:
      - wheelhouse/
      - wheelhouse-dep/

# TODO: Windows and MacOS Builds
