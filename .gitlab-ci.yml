stages:
  - package
  - tests
  - shared-pipeline
  - dogfood
  - benchmarks
  - macrobenchmarks
  - dogfood
  - release

variables:
  REPO_LANG: python # "python" is used everywhere rather than "py"
  TESTRUNNER_IMAGE: registry.ddbuild.io/images/mirror/dd-trace-py/testrunner:ecc5741ff3e7c8a30363fcd9cca79a371dcea5b4
  # CI_DEBUG_SERVICES: "true"

.testrunner:
  image: $TESTRUNNER_IMAGE
  # DEV: we have a larger pool of amd64 runners, prefer that over arm64
  tags: [ "arch:amd64" ]
  timeout: 20m
  before_script:
    - pyenv global 3.12 3.7 3.8 3.9 3.10 3.11 3.13-dev

include:
  - remote: https://gitlab-templates.ddbuild.io/libdatadog/include/one-pipeline.yml
  - local: ".gitlab/services.yml" # Include early so others can use the definitions
  - local: ".gitlab/benchmarks.yml"
  - local: ".gitlab/package.yml"
  - local: ".gitlab/tests.yml"
  - local: ".gitlab/macrobenchmarks.yml"
  - local: ".gitlab/dogfood.yml"
  - local: ".gitlab/release.yml"

package-oci:
  needs: [ download_dependency_wheels, download_ddtrace_artifacts ]

onboarding_tests_installer:
  parallel:
    matrix:
      - ONBOARDING_FILTER_WEBLOG: [test-app-python,test-app-python-container,test-app-python-alpine]


onboarding_tests_k8s_injection:
  parallel:
    matrix:
      - WEBLOG_VARIANT:
          - dd-lib-python-init-test-django
          - dd-lib-python-init-test-django-gunicorn
          - dd-lib-python-init-test-django-gunicorn-alpine
          - dd-lib-python-init-test-django-preinstalled
          - dd-lib-python-init-test-django-unsupported-package-force
          - dd-lib-python-init-test-django-uvicorn
          - dd-lib-python-init-test-protobuf-old

deploy_to_di_backend:manual:
  stage: shared-pipeline
  rules:
    - when: manual
      allow_failure: true
  trigger:
    project: DataDog/debugger-demos
    branch: main
  variables:
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    UPSTREAM_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
    UPSTREAM_PIPELINE_ID: $CI_PIPELINE_ID
    UPSTREAM_COMMIT_AUTHOR: $CI_COMMIT_AUTHOR
    UPSTREAM_TAG: $CI_COMMIT_TAG
    UPSTREAM_PACKAGE_JOB: build
