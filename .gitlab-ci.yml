stages:
  - package
  - shared-pipeline
  - dogfood
  - benchmarks
  - benchmarks-pr-comment
  - macrobenchmarks
  - dogfood

include:
  - remote: https://gitlab-templates.ddbuild.io/libdatadog/include/one-pipeline.yml
  - local: ".gitlab/benchmarks.yml"
  - local: ".gitlab/macrobenchmarks.yml"
  - local: ".gitlab/dogfood.yml"

variables:
  REPO_LANG: python # "python" is used everywhere rather than "py"

download_ddtrace_wheels:
  image: registry.ddbuild.io/github-cli:v27480869-eafb11d-2.43.0
  tags: [ "arch:amd64" ]
  stage: package
  script:
    - aws ssm get-parameter --region us-east-1 --name ci.$CI_PROJECT_NAME.gh_token --with-decryption --query "Parameter.Value" --out text > token
    - gh auth login --with-token < token
    - rm token
    - .gitlab/download-wheels-from-gh-actions.sh
  artifacts:
    paths:
      - "pywheels/*.whl"

download_dependency_wheels:
  image: registry.ddbuild.io/images/mirror/python:$PYTHON_IMAGE_TAG
  tags: [ "arch:amd64" ]
  stage: package
  needs: [ download_ddtrace_wheels ]
  parallel:
    matrix: # The image tags that are mirrored are in: https://github.com/DataDog/images/blob/master/mirror.yaml
      - PYTHON_IMAGE_TAG: "3.7"
        PYTHON_VERSION: "3.7"
      - PYTHON_IMAGE_TAG: "3.8"
        PYTHON_VERSION: "3.8"
      - PYTHON_IMAGE_TAG: "3.9.13"
        PYTHON_VERSION: "3.9"
      - PYTHON_IMAGE_TAG: "3.10.13"
        PYTHON_VERSION: "3.10"
      - PYTHON_IMAGE_TAG: "3.11.6"
        PYTHON_VERSION: "3.11"
      - PYTHON_IMAGE_TAG: "3.12.0"
        PYTHON_VERSION: "3.12"
  script:
    - .gitlab/download-dependency-wheels.sh
  artifacts:
    paths:
      - "pywheels-dep/"

package-oci:
  needs: [ download_dependency_wheels, download_ddtrace_wheels ]

onboarding_tests_installer:
  parallel:
    matrix:
      - ONBOARDING_FILTER_WEBLOG: [test-app-python,test-app-python-container,test-app-python-alpine-libgcc]


onboarding_tests_k8s_injection:
  parallel:
    matrix:
      - WEBLOG_VARIANT: [dd-lib-python-init-test-django, dd-lib-python-init-test-django-gunicorn, dd-lib-python-init-test-django-uvicorn, dd-lib-python-init-test-protobuf-old]

deploy_to_di_backend:manual:
  stage: shared-pipeline
  rules:
    - when: manual
      allow_failure: true
  trigger:
    project: DataDog/debugger-demos
    branch: main
  variables:
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    UPSTREAM_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
    UPSTREAM_PIPELINE_ID: $CI_PIPELINE_ID
    UPSTREAM_COMMIT_AUTHOR: $CI_COMMIT_AUTHOR
    UPSTREAM_TAG: $CI_COMMIT_TAG
    UPSTREAM_PACKAGE_JOB: build
