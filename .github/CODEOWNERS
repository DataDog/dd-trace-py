# Order matters, the last matched is what is used

# APM Core Python is the default owner of all files
*                                   @DataDog/apm-core-python

# Framework Integrations
src/ddtrace/ext/                        @DataDog/apm-core-python @DataDog/apm-framework-integrations-reviewers-py
src/ddtrace/contrib/                    @DataDog/apm-core-python @DataDog/apm-framework-integrations-reviewers-py
src/ddtrace/internal/schema/            @DataDog/apm-core-python @DataDog/apm-framework-integrations-reviewers-py
tests/                              @DataDog/apm-core-python @DataDog/apm-framework-integrations-reviewers-py

# Files which can be approved by anyone
# DEV: This helps not requiring apm-core-python to review new files added
#      or files which changes often with most PRs
releasenotes/                       @DataDog/apm-python
tests/snapshots/                    @DataDog/apm-python
riotfile.py                         @DataDog/apm-python

# Core
tests/internal                      @DataDog/apm-core-python
tests/lib-injection                 @DataDog/apm-core-python
tests/opentelemetry                 @DataDog/apm-core-python
tests/opentracer                    @DataDog/apm-core-python
tests/runtime                       @DataDog/apm-core-python
tests/tracer                        @DataDog/apm-core-python

# CI App
src/ddtrace/contrib/pytest/             @DataDog/apm-core-python @DataDog/ci-app-libraries
src/ddtrace/contrib/pytest_bdd/         @DataDog/apm-core-python @DataDog/ci-app-libraries
tests/contrib/pytest                @DataDog/apm-core-python @DataDog/ci-app-libraries
tests/contrib/pytest_bdd            @DataDog/apm-core-python @DataDog/ci-app-libraries
src/ddtrace/ext/ci.py                   @DataDog/apm-core-python @DataDog/ci-app-libraries
src/ddtrace/ext/test.py                 @DataDog/apm-core-python @DataDog/ci-app-libraries
src/ddtrace/internal/codeowners.py      @DataDog/apm-core-python @datadog/ci-app-libraries
src/ddtrace/internal/ci_visibility/     @DataDog/apm-core-python @DataDog/ci-app-libraries
tests/internal/ci_visibility/       @DataDog/apm-core-python @DataDog/ci-app-libraries

# Debugger
src/ddtrace/debugging/                  @DataDog/debugger-python
src/ddtrace/settings/dynamic_instrumentation.py     @DataDog/debugger-python
src/ddtrace/internal/injection.py       @DataDog/debugger-python @DataDog/apm-core-python
src/ddtrace/internal/wrapping.py        @DataDog/debugger-python @DataDog/apm-core-python
src/ddtrace/internal/module.py          @DataDog/debugger-python @DataDog/apm-core-python
tests/debugging/                    @DataDog/debugger-python
tests/internal/test_injection.py    @DataDog/debugger-python @DataDog/apm-core-python
tests/internal/test_wrapping.py     @DataDog/debugger-python @DataDog/apm-core-python
tests/internal/test_module.py       @DataDog/debugger-python @DataDog/apm-core-python

# ASM
src/ddtrace/appsec/                     @DataDog/asm-python
src/ddtrace/contrib/subprocess/         @DataDog/asm-python
tests/appsec/                       @DataDog/asm-python
tests/contrib/dbapi/test_dbapi_appsec.py    @DataDog/asm-python
tests/contrib/subprocess            @DataDog/asm-python
tests/contrib/flask/test_flask_appsec.py    @DataDog/asm-python
tests/contrib/django/django_app/appsec_urls.py @DataDog/asm-python
tests/contrib/django/test_django_appsec.py  @DataDog/asm-python
tests/snapshots/tests*appsec*.json  @DataDog/asm-python
tests/contrib/*/test*appsec*.py     @DataDog/asm-python

# Profiling
src/ddtrace/profiling                   @DataDog/profiling-python @DataDog/apm-core-python
tests/profiling                     @DataDog/profiling-python @DataDog/apm-core-python

# Remote Config
src/ddtrace/internal/remoteconfig       @DataDog/remote-config @DataDog/apm-core-python
tests/internal/remoteconfig         @DataDog/remote-config @DataDog/apm-core-python

# Guild
# Note that core is added here since 2 reviewers are required. The guild isn't
# big enough to support if a guild member makes a change which means 2 other
# guild members have to review.
# We should enforce this for important files, but more frequently edited ones
# can settle for having 1 guild member review + a core team member.
setup.py                            @DataDog/python-guild
setup.cfg                           @DataDog/python-guild
pyproject.toml                      @DataDog/python-guild
.readthedocs.yml                    @DataDog/python-guild  @DataDog/apm-core-python
README.md                           @DataDog/python-guild  @DataDog/apm-core-python
mypy.ini                            @DataDog/python-guild  @DataDog/apm-core-python
.github/PULL_REQUEST_TEMPLATE.md    @DataDog/python-guild  @DataDog/apm-core-python
.github/ISSUE_TEMPLATE.md           @DataDog/python-guild  @DataDog/apm-core-python
.github/CODEOWNERS                  @DataDog/python-guild  @DataDog/apm-core-python
src/ddtrace/internal/compat.py          @DataDog/python-guild  @DataDog/apm-core-python
