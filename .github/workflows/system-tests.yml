name: System Tests

on:
  push:
  workflow_dispatch: {}
  schedule:
    - cron: '00 04 * * 2-6'

jobs:
  system-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - weblog-variant: flask-poc
          - weblog-variant: uwsgi-poc
          - weblog-variant: django-poc
      fail-fast: false
    env:
      TEST_LIBRARY: python
      WEBLOG_VARIANT: ${{ matrix.weblog-variant }}
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
      - name: Checkout system tests
        uses: actions/checkout@v3
        with:
          repository: 'DataDog/system-tests'

      - name: Checkout dd-trace-py
        uses: actions/checkout@v3
        with:
          path: 'binaries/dd-trace-py'

      - name: Build
        run: ./build.sh

      - name: Run
        run: ./run.sh

      # even on failures, we want to have artifact to be able to investigate
      # The compress step speed up a lot the upload artifact process
      - name: Compress artifact
        if: ${{ always() }}  
        run: tar -czvf artifact.tar.gz $(ls | grep logs)

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: logs_${{ matrix.weblog-variant }}
          path: artifact.tar.gz

  lib-injection:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lib-injection-connection: ['uds', 'network']
        lib-injection-use-admission-controller: ['', 'use-admission-controller']
        lib-injection-test-app: ['dd-lib-python-init-test-django', 'dd-lib-python-init-test-django-gunicorn', 'dd-lib-python-init-test-django-uvicorn']
      fail-fast: false
    env:
      TEST_LIBRARY: python
      WEBLOG_VARIANT: ${{ matrix.weblog-variant }}
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
      LIBRARY_INJECTION_CONNECTION: ${{ matrix.lib-injection-connection }}
      LIBRARY_INJECTION_ADMISSION_CONTROLLER: ${{ matrix.lib-injection-admission-controller }}
      LIBRARY_INJECTION_INIT_IMAGE: ghcr.io/datadog/dd-trace-py/dd-lib-python-init:${{ github.sha }}
      LIBRARY_INJECTION_TEST_APP_IMAGE: ghcr.io/datadog/dd-trace-py/${{ matrix.lib-injection-test-app }}:${{ github.sha }}
    steps:
      - name: Checkout system tests
        uses: actions/checkout@v3
        with:
          repository: 'DataDog/system-tests'

      - name: Build
        run: ./lib-injection/build.sh

      - name: Run
        run: ./lib-injection/run-lib-injection.sh

  parametric:
    runs-on: ubuntu-latest
    env:
      CLIENTS_ENABLED: python
      PYTHON_DDTRACE_PACKAGE: git+https://github.com/Datadog/dd-trace-py.git@${{ github.sha }}
    steps:
      - name: Checkout system tests
        uses: actions/checkout@v3
        with:
          repository: 'DataDog/system-tests'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Run
        run: |
          cd parametric
          pip install wheel
          pip install -r requirements.txt
          ./run.sh
