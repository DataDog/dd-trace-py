name: "Library Injection"
on:
  push:

jobs:
  build-and-publish-init-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Copy python tracer
      run: |
        mkdir lib-injection/dd-trace-py/
        rsync -a . lib-injection/dd-trace-py/ --exclude lib-injection
     
    - name: lib-injection-tags
      id: lib-injection-tags
      uses: DataDog/system-tests/lib-injection/docker-tags@robertomonteromiguel/lib_injection_integration
      with:
        init-image-name: 'dd-lib-python-init'
        main-branch-name: 'robertomonteromiguel-lib_injection_system_tests_integration'

    - name: Login to Docker
      run: docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }} ghcr.io

    - name: Docker Build
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ steps.lib-injection-tags.outputs.tag-names }}
        platforms: 'linux/amd64,linux/arm64/v8'
        context: ./lib-injection

  injection-tests:
    needs:
      - build-and-publish-init-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        lib-injection-connection: [ 'network','uds']
        lib-injection-use-admission-controller: ['', 'use-admission-controller']
        weblog-variant: [ 'dd-lib-python-init-test-django','dd-lib-python-init-test-django-gunicorn','dd-lib-python-init-test-django-uvicorn']
      fail-fast: false
    env:
      TEST_LIBRARY: python
      WEBLOG_VARIANT: ${{ matrix.weblog-variant }}
      LIBRARY_INJECTION_CONNECTION: ${{ matrix.lib-injection-connection }}
      LIBRARY_INJECTION_ADMISSION_CONTROLLER: ${{ matrix.lib-injection-use-admission-controller }}
      DOCKER_REGISTRY_IMAGES_PATH: ghcr.io/datadog
      DOCKER_IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: lib-injection test runner
        id: lib-injection-test-runner
        uses: DataDog/system-tests/lib-injection/runner@robertomonteromiguel/lib_injection_integration
        with:
          docker-registry: ghcr.io
          docker-registry-username: ${{ github.repository_owner }}
          docker-registry-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compress lib injection logs
        if: ${{ always() }}
        run: tar -czvf artifact.tar.gz $(ls | grep logs)

      - name: Upload lib injection logs
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: library-injection_python_${{ matrix.weblog-variant }}_${{ matrix.lib-injection-connection }}_${{ matrix.lib-injection-use-admission-controller }}
          path: artifact.tar.gz
