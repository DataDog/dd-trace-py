name: "Library Injection"
on:
  push:

jobs:
  build-and-publish-init-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Set Docker Image Tag
      id: set_names
      run: |
        DOCKER_IMAGE_TAG=${{ github.sha }}
        DOCKER_IMAGE_NAME=dd-lib-python-init
        DOCKER_IMAGE_NAME=$(echo ghcr.io/${GITHUB_REPOSITORY}/${DOCKER_IMAGE_NAME} | tr '[:upper:]' '[:lower:]')
        DOCKER_IMAGE_NAME_WITH_TAG=$(echo ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} | tr '[:upper:]' '[:lower:]')
        echo "Using image name '$DOCKER_IMAGE_NAME_WITH_TAG'"
        echo "::set-output name=image_name::$DOCKER_IMAGE_NAME_WITH_TAG"
    - name: Login to Docker
      run: docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
    - name: Docker Build
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ steps.set_names.outputs.image_name }}
        platforms: "linux/amd64,linux/arm64/v8"
        context: ./lib-injection

  build-and-publish-sample-app-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image-name: [
          "dd-lib-python-init-test-django",
          "dd-lib-python-init-test-django-gunicorn",
          "dd-lib-python-init-test-django-uvicorn",
        ]
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Set Docker Image Tag
        id: set_names
        run: |
          DOCKER_IMAGE_TAG=${{ github.sha }}
          DOCKER_IMAGE_NAME=${{ matrix.image-name }}
          DOCKER_IMAGE_NAME=$(echo ghcr.io/${GITHUB_REPOSITORY}/${DOCKER_IMAGE_NAME} | tr '[:upper:]' '[:lower:]')
          DOCKER_IMAGE_NAME_WITH_TAG=$(echo ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} | tr '[:upper:]' '[:lower:]')
          echo "Using image name '$DOCKER_IMAGE_NAME_WITH_TAG'"
          echo "::set-output name=image_name::$DOCKER_IMAGE_NAME_WITH_TAG"
      - name: Login to Docker
        run: docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
      - name: Docker Build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.set_names.outputs.image_name }}
          platforms: "linux/amd64"
          context: ./tests/lib-injection/${{ matrix.image-name }}
