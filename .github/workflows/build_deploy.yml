name: Build

on:
  push:
    branches:
      - main
      - '[0-9].[0-9]*'
      - '[0-9].x'
      # special branches used to test this workflow
      # before merging/releasing
      - build_deploy*
      - 'upgrade-latest-*'
      - 'mq-working-branch**'
  pull_request:
  release:
    types:
      - published
  workflow_dispatch:
    # Allow manually triggering, but do NOT upload the result
  schedule:
    # Nightly builds after weekdays
    - cron:  0 2 * * 2-6

jobs:
  build_wheels:
    uses: ./.github/workflows/build_python_3.yml
    with:
      cibw_build: 'cp37* cp38* cp39* cp310* cp311* cp312* cp313*'

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        # Include all history and tags
        with:
          persist-credentials: false
          fetch-depth: 0
      - uses: actions-rust-lang/setup-rust-toolchain@11df97af8e8102fd60b60a77dfbf58d40cd843b8 # v1.10.1
      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        name: Install Python
        with:
          python-version: '3.12'
      - name: Build sdist
        run: |
          pip install "setuptools_scm[toml]>=4" "cython" "cmake>=3.24.2,<3.28" "setuptools-rust"
          python setup.py sdist
      - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: source-dist
          path: dist/*.tar.gz

  test_alpine_sdist:
    # alpine is the only environment not built/tested by cibuildwheel
    name: Test source distribution on Alpine Linux
    needs: [build_sdist]
    runs-on: ubuntu-latest
    container:
      image: python:3.9-alpine
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: source-dist
          path: dist

      - name: Install build dependencies
        # Rust + Cargo are needed for Cryptography
        run: apk add git gcc g++ musl-dev libffi-dev openssl-dev bash rust cargo make cmake

      - name: Check source package
        run: |
          pip install twine readme_renderer[md]
          twine check dist/*.tar.gz
      - name: Install source package
        run: pip install dist/*.tar.gz

      - name: Test the source package
        run: python $GITHUB_WORKSPACE/tests/smoke_test.py
        # Move out of the workspace to avoid importing ddtrace from the source
        working-directory: /
