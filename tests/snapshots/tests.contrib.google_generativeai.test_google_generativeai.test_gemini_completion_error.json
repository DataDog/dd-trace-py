[[
  {
    "name": "gemini.request",
    "service": "",
    "resource": "GenerativeModel.generate_content",
    "trace_id": 0,
    "span_id": 1,
    "parent_id": 0,
    "type": "",
    "error": 1,
    "meta": {
      "_dd.p.dm": "-0",
      "_dd.p.tid": "66db429700000000",
      "error.message": "400 Invalid API key. Please pass a valid API key.",
      "error.stack": "Traceback (most recent call last):\n  File \"/Users/yun.kim/go/src/github.com/DataDog/dd-trace-py/ddtrace/contrib/internal/google_generativeai/patch.py\", line 47, in traced_generate\n    generations = func(*args, **kwargs)\n  File \"/Users/yun.kim/go/src/github.com/DataDog/dd-trace-py/.riot/venv_py3105_mock_pytest_pytest-mock_coverage_pytest-cov_opentracing_hypothesis6451_pytest-asyncio_google-generativeai~072/lib/python3.10/site-packages/google/generativeai/generative_models.py\", line 331, in generate_content\n    response = self._client.generate_content(\n  File \"/Users/yun.kim/go/src/github.com/DataDog/dd-trace-py/.riot/venv_py3105_mock_pytest_pytest-mock_coverage_pytest-cov_opentracing_hypothesis6451_pytest-asyncio_google-generativeai~072/lib/python3.10/site-packages/mock/mock.py\", line 1178, in __call__\n    return _mock_self._mock_call(*args, **kwargs)\n  File \"/Users/yun.kim/go/src/github.com/DataDog/dd-trace-py/.riot/venv_py3105_mock_pytest_pytest-mock_coverage_pytest-cov_opentracing_hypothesis6451_pytest-asyncio_google-generativeai~072/lib/python3.10/site-packages/mock/mock.py\", line 1182, in _mock_call\n    return _mock_self._execute_mock_call(*args, **kwargs)\n  File \"/Users/yun.kim/go/src/github.com/DataDog/dd-trace-py/.riot/venv_py3105_mock_pytest_pytest-mock_coverage_pytest-cov_opentracing_hypothesis6451_pytest-asyncio_google-generativeai~072/lib/python3.10/site-packages/mock/mock.py\", line 1239, in _execute_mock_call\n    raise effect\ngoogle.api_core.exceptions.InvalidArgument: 400 Invalid API key. Please pass a valid API key.\n",
      "error.type": "google.api_core.exceptions.InvalidArgument",
      "genai.request.contents.0.text": "What is the argument for LeBron James being the GOAT?",
      "genai.request.generation_config.candidate_count": "None",
      "genai.request.generation_config.max_output_tokens": "30",
      "genai.request.generation_config.response_mime_type": "None",
      "genai.request.generation_config.response_schema": "None",
      "genai.request.generation_config.stop_sequences": "['x']",
      "genai.request.generation_config.temperature": "1.0",
      "genai.request.generation_config.top_k": "None",
      "genai.request.generation_config.top_p": "None",
      "genai.request.model": "gemini-1.5-flash",
      "genai.request.provider": "google",
      "language": "python",
      "runtime-id": "c20f6ea1fd834b0094c087a8dd7550ec"
    },
    "metrics": {
      "_dd.measured": 1,
      "_dd.top_level": 1,
      "_dd.tracer_kr": 1.0,
      "_sampling_priority_v1": 1,
      "process_id": 85884
    },
    "duration": 2204000,
    "start": 1725645463502274000
  }]]
