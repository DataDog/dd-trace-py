[[
  {
    "name": "s3.command",
    "service": "test-botocore-tracing.s3",
    "resource": "s3.listobjects",
    "trace_id": 0,
    "span_id": 1,
    "parent_id": 0,
    "type": "http",
    "error": 1,
    "meta": {
      "_dd.base_service": "tests.contrib.botocore",
      "_dd.p.dm": "-0",
      "_dd.p.tid": "672ce67a00000000",
      "aws.agent": "botocore",
      "aws.operation": "ListObjects",
      "aws.region": "us-west-2",
      "aws.request.body.bucket": "redacted",
      "aws_service": "s3",
      "component": "botocore",
      "error.message": "Parameter validation failed:\nMissing required parameter in input: \"Bucket\"\nUnknown parameter in input: \"bucket\", must be one of: Bucket, Delimiter, EncodingType, Marker, MaxKeys, Prefix, RequestPayer, ExpectedBucketOwner, OptionalObjectAttributes",
      "error.stack": "Traceback (most recent call last):\n  File \"/root/project/ddtrace/contrib/internal/botocore/patch.py\", line 260, in patched_api_call_fallback\n    result = original_func(*args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/project/.riot/venv_py3119_mock_pytest_pytest-mock_coverage_pytest-cov_opentracing_hypothesis6451_moto[all]50_pytest-randomly_vcrpy601_botocore13449_boto313449/lib/python3.11/site-packages/botocore/client.py\", line 962, in _make_api_call\n    request_dict = self._convert_to_request_dict(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/project/.riot/venv_py3119_mock_pytest_pytest-mock_coverage_pytest-cov_opentracing_hypothesis6451_moto[all]50_pytest-randomly_vcrpy601_botocore13449_boto313449/lib/python3.11/site-packages/botocore/client.py\", line 1036, in _convert_to_request_dict\n    request_dict = self._serializer.serialize_to_request(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/project/.riot/venv_py3119_mock_pytest_pytest-mock_coverage_pytest-cov_opentracing_hypothesis6451_moto[all]50_pytest-randomly_vcrpy601_botocore13449_boto313449/lib/python3.11/site-packages/botocore/validate.py\", line 381, in serialize_to_request\n    raise ParamValidationError(report=report.generate_report())\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\nMissing required parameter in input: \"Bucket\"\nUnknown parameter in input: \"bucket\", must be one of: Bucket, Delimiter, EncodingType, Marker, MaxKeys, Prefix, RequestPayer, ExpectedBucketOwner, OptionalObjectAttributes\n",
      "error.type": "botocore.exceptions.ParamValidationError",
      "language": "python",
      "region": "us-west-2",
      "runtime-id": "759db61f971e4e51b3876c2b0771e2b6",
      "span.kind": "client"
    },
    "metrics": {
      "_dd.measured": 1,
      "_dd.top_level": 1,
      "_dd.tracer_kr": 1.0,
      "_sampling_priority_v1": 1,
      "process_id": 15573
    },
    "duration": 425924882,
    "start": 1730995834381654112
  }],
[
  {
    "name": "s3.command",
    "service": "test-botocore-tracing.s3",
    "resource": "s3.listbuckets",
    "trace_id": 1,
    "span_id": 1,
    "parent_id": 0,
    "type": "http",
    "error": 0,
    "meta": {
      "_dd.base_service": "tests.contrib.botocore",
      "_dd.p.dm": "-0",
      "_dd.p.tid": "672ce67900000000",
      "aws.agent": "botocore",
      "aws.operation": "ListBuckets",
      "aws.region": "us-west-2",
      "aws.requestid": "B7mZ00jPCOhjiOfnfZFCXJR1vlFYkR6uX51Sme72vnNfFzaHVB7D",
      "aws.response.body.HTTPHeaders": "redacted",
      "aws.response.body.HTTPStatusCode": "200",
      "aws.response.body.RequestId": "B7mZ00jPCOhjiOfnfZFCXJR1vlFYkR6uX51Sme72vnNfFzaHVB7D",
      "aws.response.body.RetryAttempts": "0",
      "aws_service": "s3",
      "component": "botocore",
      "http.status_code": "200",
      "language": "python",
      "region": "us-west-2",
      "runtime-id": "759db61f971e4e51b3876c2b0771e2b6",
      "span.kind": "client"
    },
    "metrics": {
      "_dd.measured": 1,
      "_dd.top_level": 1,
      "_dd.tracer_kr": 1.0,
      "_sampling_priority_v1": 1,
      "process_id": 15573,
      "retry_attempts": 0
    },
    "duration": 711895059,
    "start": 1730995833210793741
  }],
[
  {
    "name": "s3.command",
    "service": "test-botocore-tracing.s3",
    "resource": "s3.listbuckets",
    "trace_id": 2,
    "span_id": 1,
    "parent_id": 0,
    "type": "http",
    "error": 0,
    "meta": {
      "_dd.base_service": "tests.contrib.botocore",
      "_dd.p.dm": "-0",
      "_dd.p.tid": "672ce67900000000",
      "aws.agent": "botocore",
      "aws.operation": "ListBuckets",
      "aws.region": "us-west-2",
      "aws.requestid": "6rKSkfcYHp8uqW54aYbfS9f5l3nDFA2Xw0dgU65FZF6zAtCQLZa3",
      "aws.response.body.HTTPHeaders": "redacted",
      "aws.response.body.HTTPStatusCode": "200",
      "aws.response.body.RequestId": "6rKSkfcYHp8uqW54aYbfS9f5l3nDFA2Xw0dgU65FZF6zAtCQLZa3",
      "aws.response.body.RetryAttempts": "0",
      "aws_service": "s3",
      "component": "botocore",
      "http.status_code": "200",
      "language": "python",
      "region": "us-west-2",
      "runtime-id": "759db61f971e4e51b3876c2b0771e2b6",
      "span.kind": "client"
    },
    "metrics": {
      "_dd.measured": 1,
      "_dd.top_level": 1,
      "_dd.tracer_kr": 1.0,
      "_sampling_priority_v1": 1,
      "process_id": 15573,
      "retry_attempts": 0
    },
    "duration": 454908141,
    "start": 1730995833924042857
  }],
[
  {
    "name": "sqs.command",
    "service": "aws.sqs",
    "resource": "sqs.listqueues",
    "trace_id": 3,
    "span_id": 1,
    "parent_id": 0,
    "type": "http",
    "error": 0,
    "meta": {
      "_dd.base_service": "tests.contrib.botocore",
      "_dd.p.dm": "-0",
      "_dd.p.tid": "672ce67900000000",
      "aws.agent": "botocore",
      "aws.operation": "ListQueues",
      "aws.region": "us-east-1",
      "aws.requestid": "UZPT9ML68W82KW95PYMN61QF3HRNBY44SH0V1PPSG8W3QH1FL7OX",
      "aws_service": "sqs",
      "component": "botocore",
      "http.status_code": "200",
      "language": "python",
      "region": "us-east-1",
      "runtime-id": "759db61f971e4e51b3876c2b0771e2b6",
      "span.kind": "client"
    },
    "metrics": {
      "_dd.measured": 1,
      "_dd.top_level": 1,
      "_dd.tracer_kr": 1.0,
      "_sampling_priority_v1": 1,
      "process_id": 15573,
      "retry_attempts": 0
    },
    "duration": 12420784,
    "start": 1730995833133328246
  }],
[
  {
    "name": "sqs.command",
    "service": "aws.sqs",
    "resource": "sqs.createqueue",
    "trace_id": 4,
    "span_id": 1,
    "parent_id": 0,
    "type": "http",
    "error": 0,
    "meta": {
      "_dd.base_service": "tests.contrib.botocore",
      "_dd.p.dm": "-0",
      "_dd.p.tid": "672ce67900000000",
      "aws.agent": "botocore",
      "aws.operation": "CreateQueue",
      "aws.region": "us-east-1",
      "aws.requestid": "PUCYX1ZISWAFZSMWH7WZ5YZXJIM7PGIN2WHWKSSNEZUDYYCX6ZWW",
      "aws.sqs.queue_name": "Test",
      "aws_service": "sqs",
      "component": "botocore",
      "http.status_code": "200",
      "language": "python",
      "queuename": "Test",
      "region": "us-east-1",
      "runtime-id": "759db61f971e4e51b3876c2b0771e2b6",
      "span.kind": "client"
    },
    "metrics": {
      "_dd.measured": 1,
      "_dd.top_level": 1,
      "_dd.tracer_kr": 1.0,
      "_sampling_priority_v1": 1,
      "process_id": 15573,
      "retry_attempts": 0
    },
    "duration": 8048502,
    "start": 1730995833146606461
  }]]
