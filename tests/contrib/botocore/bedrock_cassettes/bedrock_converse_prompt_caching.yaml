interactions:
- request:
    body: '{"messages": [{"role": "user", "content": [{"text": "What is a service"}]}],
      "inferenceConfig": {"temperature": 0.7, "topP": 0.9, "maxTokens": 1000, "stopSequences":
      []}, "system": [{"text": "Software architecture guidelines: bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye "}, {"cachePoint": {"type":
      "default"}}]}'
    headers:
      Content-Length:
      - '4363'
      Content-Type:
      - !!binary |
        YXBwbGljYXRpb24vanNvbg==
      User-Agent:
      - !!binary |
        Qm90bzMvMS4zOC4yNiBtZC9Cb3RvY29yZSMxLjM4LjI2IHVhLzIuMSBvcy9tYWNvcyMyNC41LjAg
        bWQvYXJjaCNhcm02NCBsYW5nL3B5dGhvbiMzLjEwLjEzIG1kL3B5aW1wbCNDUHl0aG9uIG0vYixa
        IGNmZy9yZXRyeS1tb2RlI2xlZ2FjeSBCb3RvY29yZS8xLjM4LjI2
      X-Amz-Date:
      - !!binary |
        MjAyNTA2MjdUMTQ0MjQyWg==
      amz-sdk-invocation-id:
      - !!binary |
        ODVjYzM0NjEtN2EyZC00MDkwLTg0NzAtOWJhOThkOWJiMzQ3
      amz-sdk-request:
      - !!binary |
        YXR0ZW1wdD0x
    method: POST
    uri: https://bedrock-runtime.us-east-1.amazonaws.com/model/us.anthropic.claude-3-7-sonnet-20250219-v1%3A0/converse
  response:
    body:
      string: '{"metrics":{"latencyMs":8844},"output":{"message":{"content":[{"text":"#
        Service\n\nIn software architecture, a service is a self-contained unit of
        functionality that performs a specific business function and can be accessed
        remotely through well-defined interfaces. Services are a fundamental concept
        in service-oriented architecture (SOA) and microservices architecture.\n\n##
        Key characteristics of services:\n\n1. **Self-contained**: A service encapsulates
        its own data and business logic\n2. **Well-defined interfaces**: Services
        expose clear APIs, often using protocols like HTTP/REST, gRPC, or message
        queues\n3. **Independent deployment**: Services can be deployed and scaled
        independently\n4. **Business-aligned**: Services are typically organized around
        business capabilities\n5. **Loose coupling**: Services interact with minimal
        dependencies on each other\n\n## Common types of services:\n\n- **Microservices**:
        Small, focused services that each handle a specific business function\n- **Web
        services**: Services that communicate over HTTP/HTTPS using formats like JSON
        or XML\n- **RESTful services**: Services that follow REST architectural principles\n-
        **Utility services**: Shared services that provide common functionality across
        an application\n\nServices enable modular, scalable, and maintainable software
        systems by breaking down complex applications into manageable components with
        clear responsibilities."}],"role":"assistant"}},"stopReason":"end_turn","usage":{"cacheReadInputTokenCount":0,"cacheReadInputTokens":0,"cacheWriteInputTokenCount":1028,"cacheWriteInputTokens":1028,"inputTokens":11,"outputTokens":264,"totalTokens":1303}}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '1656'
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Jun 2025 14:42:51 GMT
      x-amzn-RequestId:
      - 4a2a2d5f-003c-4434-bccb-325b23b43fe1
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "user", "content": [{"text": "What is a ml app"}]}],
      "inferenceConfig": {"temperature": 0.7, "topP": 0.9, "maxTokens": 1000, "stopSequences":
      []}, "system": [{"text": "Software architecture guidelines: bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye bye
      bye bye bye bye bye bye bye bye bye bye bye bye bye "}, {"cachePoint": {"type":
      "default"}}]}'
    headers:
      Content-Length:
      - '4362'
      Content-Type:
      - !!binary |
        YXBwbGljYXRpb24vanNvbg==
      User-Agent:
      - !!binary |
        Qm90bzMvMS4zOC4yNiBtZC9Cb3RvY29yZSMxLjM4LjI2IHVhLzIuMSBvcy9tYWNvcyMyNC41LjAg
        bWQvYXJjaCNhcm02NCBsYW5nL3B5dGhvbiMzLjEwLjEzIG1kL3B5aW1wbCNDUHl0aG9uIG0vYixa
        IGNmZy9yZXRyeS1tb2RlI2xlZ2FjeSBCb3RvY29yZS8xLjM4LjI2
      X-Amz-Date:
      - !!binary |
        MjAyNTA2MjdUMTQ0MjUxWg==
      amz-sdk-invocation-id:
      - !!binary |
        ZjI1ZGNlOWItZDczZS00N2Q3LWEzOWEtNDBiZmJlYzkzOTQz
      amz-sdk-request:
      - !!binary |
        YXR0ZW1wdD0x
    method: POST
    uri: https://bedrock-runtime.us-east-1.amazonaws.com/model/us.anthropic.claude-3-7-sonnet-20250219-v1%3A0/converse
  response:
    body:
      string: '{"metrics":{"latencyMs":7053},"output":{"message":{"content":[{"text":"#
        Machine Learning (ML) Application\n\nA Machine Learning (ML) application is
        a software program that uses ML algorithms to analyze data, learn patterns,
        and make predictions or decisions without being explicitly programmed for
        specific tasks.\n\n## Key Components:\n\n1. **Data Collection & Processing**:
        Gathers and prepares data for model training\n2. **ML Model**: The trained
        algorithm that makes predictions\n3. **Interface**: How users interact with
        the application\n4. **Deployment Infrastructure**: Servers and systems that
        host the application\n\n## Common Examples:\n\n- Recommendation systems (Netflix,
        Amazon)\n- Voice assistants (Siri, Alexa)\n- Fraud detection systems\n- Image
        recognition applications\n- Predictive maintenance tools\n- Natural language
        processing applications\n\nML applications can range from simple prediction
        tools to complex systems that continuously learn and improve over time."}],"role":"assistant"}},"stopReason":"end_turn","usage":{"cacheReadInputTokenCount":1028,"cacheReadInputTokens":1028,"cacheWriteInputTokenCount":0,"cacheWriteInputTokens":0,"inputTokens":12,"outputTokens":185,"totalTokens":1225}}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '1218'
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Jun 2025 14:42:58 GMT
      x-amzn-RequestId:
      - 58d2f12b-9c5e-49f7-b1b1-9f3b2b7d20dd
    status:
      code: 200
      message: OK
version: 1
