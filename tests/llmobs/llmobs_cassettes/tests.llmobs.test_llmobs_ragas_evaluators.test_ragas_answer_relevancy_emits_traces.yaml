interactions:
- request:
    body: '{"messages": [{"content": "Generate a question for the given answer and
      Identify if answer is noncommittal. Give noncommittal as 1 if the answer is
      noncommittal and 0 if the answer is committal. A noncommittal answer is one
      that is evasive, vague, or ambiguous. For example, \"I don''t know\" or \"I''m
      not sure\" are noncommittal answers\n\nThe output should be a well-formatted
      JSON instance that conforms to the JSON schema below.\n\nAs an example, for
      the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\":
      \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}},
      \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted
      instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}}
      is not well-formatted.\n\nHere is the output JSON schema:\n```\n{\"type\": \"object\",
      \"properties\": {\"question\": {\"title\": \"Question\", \"type\": \"string\"},
      \"noncommittal\": {\"title\": \"Noncommittal\", \"type\": \"integer\"}}, \"required\":
      [\"question\", \"noncommittal\"]}\n```\n\nDo not return any preamble or explanations,
      return only a pure JSON string surrounded by triple backticks (```).\n\nExamples:\n\nanswer:
      \"Albert Einstein was born in Germany.\"\ncontext: \"Albert Einstein was a German-born
      theoretical physicist who is widely held to be one of the greatest and most
      influential scientists of all time\"\noutput: ```{\"question\": \"Where was
      Albert Einstein born?\", \"noncommittal\": 0}```\n\nanswer: \"It can change
      its skin color based on the temperature of its environment.\"\ncontext: \"A
      recent scientific study has discovered a new species of frog in the Amazon rainforest
      that has the unique ability to change its skin color based on the temperature
      of its environment.\"\noutput: ```{\"question\": \"What unique ability does
      the newly discovered species of frog have?\", \"noncommittal\": 0}```\n\nanswer:
      \"Everest\"\ncontext: \"The tallest mountain on Earth, measured from sea level,
      is a renowned peak located in the Himalayas.\"\noutput: ```{\"question\": \"What
      is the tallest mountain on Earth?\", \"noncommittal\": 0}```\n\nanswer: \"I
      don''t know about the  groundbreaking feature of the smartphone invented in
      2023 as am unaware of information beyond 2022. \"\ncontext: \"In 2023, a groundbreaking
      invention was announced: a smartphone with a battery life of one month, revolutionizing
      the way people use mobile technology.\"\noutput: ```{\"question\": \"What was
      the groundbreaking feature of the smartphone invented in 2023?\", \"noncommittal\":
      1}```\n\nYour actual task:\n\nanswer: \"The capital of France is Paris\"\ncontext:
      \"The capital of France is Paris.\"\noutput: \n", "role": "user"}], "model":
      "gpt-4o-mini", "n": 3, "stream": false, "temperature": 0.3}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2795'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.52.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.52.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//7FTBitswEL37K8Sc42I7qTfry1IoXSh0KRTaQ1NsRR7b2sqSKo1pl5B/
        L3Kc2GFb6H178eG9eeM3TxodIsZA1lAwEB0n0VsVv0H303zusk8fHz/kD8lth2/X9/dPlL+vH25h
        FRRm/4iCzqpXwvRWIUmjT7RwyAlD1/RmvVkn6+3r7Uj0pkYVZK2leGPiXmoZZ0m2iZObON1O6s5I
        gR4K9jVijLHD+A0+dY2/oGDJ6oz06D1vEYpLEWPgjAoIcO+lJ64JVjMpjCbUo/Wqqg47+DGgD853
        ULAdfOk4MekZdcgEt5K4YqZh7xzXAu92sGI70EYL0/eSiKugSo5VVS3/4bAZPA9z6kGpCT9eTCvT
        Wmf2fuIveCO19F3pkHujg0FPxkK0ED9LIv2fxJRE9vKSiBj7Ni7McDUvWGd6SyWZ76hDwzybFgbm
        PV2w+USSIa4W+PZMXPUrayQulV/EC4KLDutZOu8nH2ppFsTyCJ+7+VPv0+RSt//SfiaEQEtYl9Zh
        LcX1xHOZw/CM/a3skvJoGPyTJ+zLRuoWnXXydGEaW+aNSBNME9xDdIx+AwAA//8DAGrumFFSBQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8f2a126b0fcf8c5d-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 15 Dec 2024 23:04:18 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=yoaDgBqIVg7q_qWICuV4sfI2HC68mSEiEJeGmauKwk8-1734303858-1.0.1.1-MYIlBP7O1Wu.r.hazt7JZrz7sO8oLIzVkD7otw3Ls8ovEJ1u4QDKgiMrWj.vAkY18tkpfJ9M3g0hUmnbiq2u6Q;
        path=/; expires=Sun, 15-Dec-24 23:34:18 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=A1kfyxL1kDcyq.Uw7XGdceC3nZTqjxFlKdeMyNQICfw-1734303858928-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '410'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149999320'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_0d1ac5d511c5de88fe61226b65f98608
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3923, 374, 279, 6864, 315, 9822, 30]], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '114'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.52.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.52.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        O66R3iAAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8f2a126fde6180df-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 15 Dec 2024 23:04:19 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=Gul7c8fExIU8FqFmLe7ibG6d2ui6aihEjGEbftB2HDo-1734303859-1.0.1.1-8CGeWlxDim_kuzwaWnQVnAJP0Er9WUj.qOwVjfGiTHyf0WAnOi3d7H8Wq9KweUcQneHQdvc56_9L2cKSSwpnhg;
        path=/; expires=Sun, 15-Dec-24 23:34:19 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=jRamhH7v5XicVPgpi9Yoew5VMsO.2qrYeZTYALGr_4s-1734303859489-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '97'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999993'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_681a8e6776d55fd49c1653dd98e86efb
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3923, 374, 279, 6864, 315, 9822, 30], [3923, 374, 279, 6864,
      315, 9822, 30], [3923, 374, 279, 6864, 315, 9822, 30]], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '192'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Gul7c8fExIU8FqFmLe7ibG6d2ui6aihEjGEbftB2HDo-1734303859-1.0.1.1-8CGeWlxDim_kuzwaWnQVnAJP0Er9WUj.qOwVjfGiTHyf0WAnOi3d7H8Wq9KweUcQneHQdvc56_9L2cKSSwpnhg;
        _cfuvid=jRamhH7v5XicVPgpi9Yoew5VMsO.2qrYeZTYALGr_4s-1734303859489-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.52.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.52.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8f2a127268e180df-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 15 Dec 2024 23:04:19 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '163'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999979'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_4086a3c988f643e3a10b3e2e9aa7a13c
    status:
      code: 200
      message: OK
version: 1
