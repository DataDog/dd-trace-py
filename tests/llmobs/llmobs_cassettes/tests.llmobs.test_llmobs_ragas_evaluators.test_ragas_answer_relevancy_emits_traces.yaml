interactions:
- request:
    body: '{"messages": [{"content": "Generate a question for the given answer and
      Identify if answer is noncommittal. Give noncommittal as 1 if the answer is
      noncommittal and 0 if the answer is committal. A noncommittal answer is one
      that is evasive, vague, or ambiguous. For example, \"I don''t know\" or \"I''m
      not sure\" are noncommittal answers\n\nThe output should be a well-formatted
      JSON instance that conforms to the JSON schema below.\n\nAs an example, for
      the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\":
      \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}},
      \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted
      instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}}
      is not well-formatted.\n\nHere is the output JSON schema:\n```\n{\"type\": \"object\",
      \"properties\": {\"question\": {\"title\": \"Question\", \"type\": \"string\"},
      \"noncommittal\": {\"title\": \"Noncommittal\", \"type\": \"integer\"}}, \"required\":
      [\"question\", \"noncommittal\"]}\n```\n\nDo not return any preamble or explanations,
      return only a pure JSON string surrounded by triple backticks (```).\n\nExamples:\n\nanswer:
      \"Albert Einstein was born in Germany.\"\ncontext: \"Albert Einstein was a German-born
      theoretical physicist who is widely held to be one of the greatest and most
      influential scientists of all time\"\noutput: ```{\"question\": \"Where was
      Albert Einstein born?\", \"noncommittal\": 0}```\n\nanswer: \"It can change
      its skin color based on the temperature of its environment.\"\ncontext: \"A
      recent scientific study has discovered a new species of frog in the Amazon rainforest
      that has the unique ability to change its skin color based on the temperature
      of its environment.\"\noutput: ```{\"question\": \"What unique ability does
      the newly discovered species of frog have?\", \"noncommittal\": 0}```\n\nanswer:
      \"Everest\"\ncontext: \"The tallest mountain on Earth, measured from sea level,
      is a renowned peak located in the Himalayas.\"\noutput: ```{\"question\": \"What
      is the tallest mountain on Earth?\", \"noncommittal\": 0}```\n\nanswer: \"I
      don''t know about the  groundbreaking feature of the smartphone invented in
      2023 as am unaware of information beyond 2022. \"\ncontext: \"In 2023, a groundbreaking
      invention was announced: a smartphone with a battery life of one month, revolutionizing
      the way people use mobile technology.\"\noutput: ```{\"question\": \"What was
      the groundbreaking feature of the smartphone invented in 2023?\", \"noncommittal\":
      1}```\n\nYour actual task:\n\nanswer: \"The capital of France is Paris\"\ncontext:
      \"The capital of France is Paris.\"\noutput: \n", "role": "user"}], "model":
      "gpt-4o-mini", "n": 3, "stream": false, "temperature": 0.3}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2795'
      content-type:
      - application/json
      cookie:
      - __cf_bm=jNCWyg.Vq7.UysipP_0ZTDahpo.QhHWQvZ5Biaue6Bs-1736795781-1.0.1.1-C.GEfp7jlmfkY9qIXtsRjf9L9W5MzQ2OSXUpBOB0jIjYNSrJBlVnNwuHbaPYKT9.DjEjgPPIK69hkYhC0UtQZA;
        _cfuvid=g4nQujMCF8pE0TfAWPiY5rkdnbhtDE1kP7w0dFQq.v4-1736795781566-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.52.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.52.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//7FTBjtMwEL3nK6w5N6jNtptuLwiEQNAT4rBIFCWuPUm8OLbXngCrqv+O
        nKZNqgWJO1xyeG/e5M2zx4eEMVASNgxEw0m0Tqev3PbNayXfb7db9fnm3RP/8elD83Ava/9x9Qiz
        qLD7BxR0Vr0QtnUaSVlzooVHThi7LvKb2/xula9XPdFaiTrKakfp0qatMirN5tkynefpYj2oG6sE
        BtiwLwljjB36b/RpJP6EDZvPzkiLIfAaYXMpYgy81REBHoIKxA3BbCSFNYSmt16W5WEHjx2G6HwH
        G7aD+4YTU4FRg0xwp4hrZiv21nMj8OUOZmwHxhph21YRcR1V82NZltN/eKy6wOOcptN6wI8X09rW
        ztt9GPgLXimjQlN45MGaaDCQdZBMxM+SWPxPYkgi+/eSSBj72i9MdzUvOG9bRwXZb2hiw9tsWBgY
        93TC3g0kWeJ6gq/PxFW/QiJxpcMkXhBcNChH6bifvJPKTojpET5387vep8mVqf+m/UgIgY5QFs6j
        VOJ64rHMY3zG/lR2Sbk3DAH9dyWwIIU+noTEinf6dJEgPAXCtqiUqdE7r063qXJFnqHM+X61FJAc
        k18AAAD//wMAh5BSKW8FAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 9017b87b7a2172c2-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 13 Jan 2025 19:16:26 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '527'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149999320'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_676b13e59057c608d2aae93dc46c6325
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3923, 374, 279, 6864, 315, 9822, 30]], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '114'
      content-type:
      - application/json
      cookie:
      - __cf_bm=s1ISh4iUNLQ2Ya1kD2H7qoQ8Iu5E35cNV7LByFeP6S4-1736795782-1.0.1.1-Yiw0sA3z8E8DIIhiXr_yjzMDz_ePLu1gwWVxoqFOBJDcDhE91jZRgy2Kp6FYdcBcS950vyAqL1y9LPmOMIGJxA;
        _cfuvid=beMBNvOtq78fFCvDki.8wgKumD_EQhiZMEDa05JaT7s-1736795782543-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.52.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.52.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 9017b87ffc35de9b-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 13 Jan 2025 19:16:26 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '47'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-6979b7df47-vvg7g
      x-envoy-upstream-service-time:
      - '23'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999993'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_2300f9a23e5574b468cebc70b0876a9f
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3923, 374, 279, 6864, 315, 9822, 30], [3923, 374, 279, 6864,
      315, 9822, 30], [3923, 374, 279, 6864, 315, 9822, 30]], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '192'
      content-type:
      - application/json
      cookie:
      - __cf_bm=s1ISh4iUNLQ2Ya1kD2H7qoQ8Iu5E35cNV7LByFeP6S4-1736795782-1.0.1.1-Yiw0sA3z8E8DIIhiXr_yjzMDz_ePLu1gwWVxoqFOBJDcDhE91jZRgy2Kp6FYdcBcS950vyAqL1y9LPmOMIGJxA;
        _cfuvid=beMBNvOtq78fFCvDki.8wgKumD_EQhiZMEDa05JaT7s-1736795782543-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.52.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.52.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 9017b883ea8ade9b-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 13 Jan 2025 19:16:26 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '69'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-6f955f97bb-4khl7
      x-envoy-upstream-service-time:
      - '33'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999979'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_7a8af08acb2e6c4ca1a74650c0472e24
    status:
      code: 200
      message: OK
version: 1
