interactions:
- request:
    body: '{"input": [[3923, 374, 279, 6864, 315, 9822, 30]], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      ? !!python/object/apply:multidict._multidict.istr
      - Accept
      : - application/json
      ? !!python/object/apply:multidict._multidict.istr
      - Accept-Encoding
      : - gzip, deflate, zstd
      ? !!python/object/apply:multidict._multidict.istr
      - Connection
      : - keep-alive
      Content-Length:
      - '114'
      ? !!python/object/apply:multidict._multidict.istr
      - Content-Type
      : - application/json
      ? !!python/object/apply:multidict._multidict.istr
      - User-Agent
      : - OpenAI/Python 1.61.1
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Arch
      : - arm64
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Async
      : - 'false'
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Lang
      : - python
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-OS
      : - MacOS
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Package-Version
      : - 1.61.1
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Runtime
      : - CPython
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Runtime-Version
      : - 3.10.13
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-retry-count
      : - '0'
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-ada-002-v2\",\n  \"usage\": {\n
        \   \"prompt_tokens\": 7,\n    \"total_tokens\": 7\n  }\n}\n"
    headers:
      CF-RAY:
      - 96e920912d7dde0e-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 13 Aug 2025 15:08:20 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - _cfuvid=jayGfqsyUsC_ONMJF1h5hTMqJiktSeFccEUMsMtx.Zg-1755097700266-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-ada-002-v2
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '37'
      openai-project:
      - proj_gt6TQZPRbZfoY2J9AQlEJMpd
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-66774cb8d7-ntlhm
      x-envoy-upstream-service-time:
      - '63'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999993'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_5408da558e3b41d3b7f73d302b6a76e1
    status:
      code: 200
      message: OK
version: 1
