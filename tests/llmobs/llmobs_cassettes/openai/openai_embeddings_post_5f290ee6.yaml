interactions:
- request:
    body: '{"input":[[8134]],"model":"text-embedding-ada-002","encoding_format":"base64"}'
    headers:
      ? !!python/object/apply:multidict._multidict.istr
      - Accept
      : - application/json
      ? !!python/object/apply:multidict._multidict.istr
      - Accept-Encoding
      : - gzip, deflate
      ? !!python/object/apply:multidict._multidict.istr
      - Connection
      : - keep-alive
      Content-Length:
      - '78'
      ? !!python/object/apply:multidict._multidict.istr
      - Content-Type
      : - application/json
      ? !!python/object/apply:multidict._multidict.istr
      - User-Agent
      : - OpenAI/Python 1.109.1
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Arch
      : - arm64
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Async
      : - 'false'
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Lang
      : - python
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-OS
      : - MacOS
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Package-Version
      : - 1.109.1
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Runtime
      : - CPython
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Runtime-Version
      : - 3.10.13
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-retry-count
      : - '0'
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-ada-002-v2\",\n  \"usage\": {\n
        \   \"prompt_tokens\": 1,\n    \"total_tokens\": 1\n  }\n}\n"
    headers:
      CF-RAY:
      - 984d17eeb9fa2d1f-IAD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Sep 2025 19:57:57 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=y.S2dK3SCylu3deHw_1wKP.h7Li9meMkzSo_X0fjXNY-1758830277-1.0.1.1-zSX8Pz6PJAWQbkF.57v_PvJy4GneaY3_5WYxn0wm.kd7U7K9zAJf4p6j7kFmZRDAQ1LMIa6J0qrOxTMzuM9F3gq4_myx2pkzMdmwJ0DqaDM;
        path=/; expires=Thu, 25-Sep-25 20:27:57 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=KrxpybEp8JEqaTQsTSuSuHLwl1k6Dvjj5SxPKvAZFEE-1758830277061-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-ada-002-v2
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '42'
      openai-project:
      - proj_gt6TQZPRbZfoY2J9AQlEJMpd
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-6b44948bd4-ntzg6
      x-envoy-upstream-service-time:
      - '72'
      x-openai-proxy-wasm:
      - v0.1
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999999'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_e79ad9015acf4d0eb4d460217cc7cf30
    status:
      code: 200
      message: OK
version: 1
