interactions:
- request:
    body: '{"input":[[50100]],"model":"text-embedding-ada-002","encoding_format":"base64"}'
    headers:
      ? !!python/object/apply:multidict._multidict.istr
      - Accept
      : - application/json
      ? !!python/object/apply:multidict._multidict.istr
      - Accept-Encoding
      : - gzip, deflate, zstd
      ? !!python/object/apply:multidict._multidict.istr
      - Connection
      : - keep-alive
      Content-Length:
      - '79'
      ? !!python/object/apply:multidict._multidict.istr
      - Content-Type
      : - application/json
      ? !!python/object/apply:multidict._multidict.istr
      - User-Agent
      : - OpenAI/Python 1.109.1
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Arch
      : - arm64
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Async
      : - 'false'
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Lang
      : - python
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-OS
      : - MacOS
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Package-Version
      : - 1.109.1
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Runtime
      : - CPython
      ? !!python/object/apply:multidict._multidict.istr
      - X-Stainless-Runtime-Version
      : - 3.10.13
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-retry-count
      : - '0'
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-ada-002-v2\",\n  \"usage\": {\n
        \   \"prompt_tokens\": 1,\n    \"total_tokens\": 1\n  }\n}\n"
    headers:
      CF-RAY:
      - 984d187bf882206c-IAD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Sep 2025 19:58:19 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=7HZpNXk7hPdqwH5fzYbHK20C8X3I9J0GwBfTZSNSknw-1758830299-1.0.1.1-4Ba8pVUFi9dOxCkgErvVnyalD0eD_QU_.6rsmdQaLrHLh3VnSFLDHWpREWsP3R8vl9LeY9Y885bwwA42BDiFn4UUhVlSHXYf4rmJTdhxyN4;
        path=/; expires=Thu, 25-Sep-25 20:28:19 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=NTuHYoOpr_QEQ.mYS.8vIHUa6kKjIeGt1cR4X98Gmr8-1758830299606-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-ada-002-v2
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '33'
      openai-project:
      - proj_gt6TQZPRbZfoY2J9AQlEJMpd
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-59959d4955-q2jdn
      x-envoy-upstream-service-time:
      - '49'
      x-openai-proxy-wasm:
      - v0.1
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999999'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_d4d88ccb7c7146f583b0985b7e673f43
    status:
      code: 200
      message: OK
version: 1
