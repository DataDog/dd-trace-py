interactions:
- request:
    body: '{"messages": [{"content": "Generate a question for the given answer and
      Identify if answer is noncommittal. Give noncommittal as 1 if the answer is
      noncommittal and 0 if the answer is committal. A noncommittal answer is one
      that is evasive, vague, or ambiguous. For example, \"I don''t know\" or \"I''m
      not sure\" are noncommittal answers\n\nThe output should be a well-formatted
      JSON instance that conforms to the JSON schema below.\n\nAs an example, for
      the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\":
      \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}},
      \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted
      instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}}
      is not well-formatted.\n\nHere is the output JSON schema:\n```\n{\"type\": \"object\",
      \"properties\": {\"question\": {\"title\": \"Question\", \"type\": \"string\"},
      \"noncommittal\": {\"title\": \"Noncommittal\", \"type\": \"integer\"}}, \"required\":
      [\"question\", \"noncommittal\"]}\n```\n\nDo not return any preamble or explanations,
      return only a pure JSON string surrounded by triple backticks (```).\n\nExamples:\n\nanswer:
      \"Albert Einstein was born in Germany.\"\ncontext: \"Albert Einstein was a German-born
      theoretical physicist who is widely held to be one of the greatest and most
      influential scientists of all time\"\noutput: ```{\"question\": \"Where was
      Albert Einstein born?\", \"noncommittal\": 0}```\n\nanswer: \"It can change
      its skin color based on the temperature of its environment.\"\ncontext: \"A
      recent scientific study has discovered a new species of frog in the Amazon rainforest
      that has the unique ability to change its skin color based on the temperature
      of its environment.\"\noutput: ```{\"question\": \"What unique ability does
      the newly discovered species of frog have?\", \"noncommittal\": 0}```\n\nanswer:
      \"Everest\"\ncontext: \"The tallest mountain on Earth, measured from sea level,
      is a renowned peak located in the Himalayas.\"\noutput: ```{\"question\": \"What
      is the tallest mountain on Earth?\", \"noncommittal\": 0}```\n\nanswer: \"I
      don''t know about the  groundbreaking feature of the smartphone invented in
      2023 as am unaware of information beyond 2022. \"\ncontext: \"In 2023, a groundbreaking
      invention was announced: a smartphone with a battery life of one month, revolutionizing
      the way people use mobile technology.\"\noutput: ```{\"question\": \"What was
      the groundbreaking feature of the smartphone invented in 2023?\", \"noncommittal\":
      1}```\n\nYour actual task:\n\nanswer: \"France is indeed part of europe\"\ncontext:
      \"irrelevant\\nFrance is part of europe\"\noutput: \n", "role": "user"}], "model":
      "gpt-4o-mini", "n": 3, "stream": false, "temperature": 0.3}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2802'
      content-type:
      - application/json
      cookie:
      - __cf_bm=_hIzBnwWi.JmgnHbV_n6n7dTonHCjj4Hjj1dK_lP_HM-1736791930-1.0.1.1-FQtSV2lRxJoGA8CwSbN_LOqQ9_xMHDhef7wv.IE18f.FxorCmPhShV1B_f0t7xt0BrUQ2MCcm7DSe_PKqPO8Pw;
        _cfuvid=NzMJ2rX6F12KiO6Xumt0fto5GVsgGTOMKaKxoHmB6T0-1736791930617-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.52.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.52.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//7FSxbtswEN31FcTNVmHLruVoKQokQd2l6FQUdSHR1ElmQvFY8tSkMPzv
        BW3HUpAU6N4uHO7de3j3yOM+EQJ0DYUAtZOsOmfS9+7j9Zyy9Ydp+3CTZ59vV3z35WH9adl8fWxg
        Ehm0vUPFT6w3ijpnkDXZE6w8SsaoOsvny/xqdjWfH4GOajSR1jpOF5R22uo0m2aLdJqns9WZvSOt
        MEAhviVCCLE/ntGnrfERCjGdPFU6DEG2CMWlSQjwZGIFZAg6sLQMkwFUZBnt0XpVVfsN/OgxROcb
        KMQG1kHcemkVCic9C2rETe/J4bsNTMQGLFlFXaeZpYmE6aGqqrG8x6YPMo5oe2PO9cPFr6HWedqG
        M36pN9rqsCs9ykA2egtMDpIR+UUIs/8hFCL7p0JIhPh+3JD+2ajgPHWOS6Z7tFFwmZ1zgWExR+jy
        DDKxNKP6ajV5Ra+skaU2YZQsKKl2WA/UYSFlX2saAePbe+nmNe3T5Nq2fyM/AEqhY6xL57HW6vnE
        Q5vH+G/9qe2S8tEwBPQ/tcKSNfp4EzU2sjenNwThV2DsykbbFr3z+vSQGlfmGda53L5dKEgOyW8A
        AAD//wMAi2BACGAFAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 90175a6f4ac24255-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 13 Jan 2025 18:12:13 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '496'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149999318'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_9576f3064137943d2ea24ebf277700e0
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3957, 48687, 961, 315, 38634, 30]], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '111'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Zmk1JGzic3EuzvIzjOaRQmaIzGJ74x.YquPeDyOCZqs-1736791931-1.0.1.1-6KPmj2tXuJXAXiqBJZVUD8MpO.8MYVZ5pROU_OXfJ.0MpbaI6lzTi3naLpKXPcmvDOI__h5SIGAMGyFYV5ygPw;
        _cfuvid=KoihxnMe5Lh0xnz1wfMOrsPFtoJP.8Ykuk5OysABbKg-1736791931216-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.52.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.52.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        //8DADOe/03eIAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 90175a73a92bc411-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 13 Jan 2025 18:12:14 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '51'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-6f4874f9bd-2qjkq
      x-envoy-upstream-service-time:
      - '31'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999994'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_0eafd284e40e8ae28b9c5ac8086b3d13
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3957, 9822, 961, 315, 4606, 30], [3957, 9822, 961, 315, 4606,
      30], [3957, 9822, 961, 315, 4606, 30]], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '177'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Zmk1JGzic3EuzvIzjOaRQmaIzGJ74x.YquPeDyOCZqs-1736791931-1.0.1.1-6KPmj2tXuJXAXiqBJZVUD8MpO.8MYVZ5pROU_OXfJ.0MpbaI6lzTi3naLpKXPcmvDOI__h5SIGAMGyFYV5ygPw;
        _cfuvid=KoihxnMe5Lh0xnz1wfMOrsPFtoJP.8Ykuk5OysABbKg-1736791931216-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.52.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.52.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        S03jdx7Wqkd4AgAA//8DANcV8ICEYQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 90175a75dcb5c411-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 13 Jan 2025 18:12:14 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '79'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-6979b7df47-fztsr
      x-envoy-upstream-service-time:
      - '42'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999982'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_dbfa3c1dcbc8d9cf42586c8af5d77fdb
    status:
      code: 200
      message: OK
version: 1
