interactions:
- request:
    body: '{"messages": [{"content": "Given a question, an answer, and sentences from
      the answer analyze the complexity of each sentence given under ''sentences''
      and break down each sentence into one or more fully understandable statements
      while also ensuring no pronouns are used in each statement. Format the outputs
      in JSON.\n\nThe output should be a well-formatted JSON instance that conforms
      to the JSON schema below.\n\nAs an example, for the schema {\"properties\":
      {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\":
      \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe
      object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema.
      The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere
      is the output JSON schema:\n```\n{\"type\": \"array\", \"items\": {\"$ref\":
      \"#/definitions/Statements\"}, \"definitions\": {\"Statements\": {\"title\":
      \"Statements\", \"type\": \"object\", \"properties\": {\"sentence_index\": {\"title\":
      \"Sentence Index\", \"description\": \"Index of the sentence from the statement
      list\", \"type\": \"integer\"}, \"simpler_statements\": {\"title\": \"Simpler
      Statements\", \"description\": \"the simpler statements\", \"type\": \"array\",
      \"items\": {\"type\": \"string\"}}}, \"required\": [\"sentence_index\", \"simpler_statements\"]}}}\n```\n\nDo
      not return any preamble or explanations, return only a pure JSON string surrounded
      by triple backticks (```).\n\nExamples:\n\nquestion: \"Who was Albert Einstein
      and what is he best known for?\"\nanswer: \"He was a German-born theoretical
      physicist, widely acknowledged to be one of the greatest and most influential
      physicists of all time. He was best known for developing the theory of relativity,
      he also made important contributions to the development of the theory of quantum
      mechanics.\"\nsentences: \"\\n        0:He was a German-born theoretical physicist,
      widely acknowledged to be one of the greatest and most influential physicists
      of all time. \\n        1:He was best known for developing the theory of relativity,
      he also made important contributions to the development of the theory of quantum
      mechanics.\\n        \"\nanalysis: ```[{\"sentence_index\": 0, \"simpler_statements\":
      [\"Albert Einstein was a German-born theoretical physicist.\", \"Albert Einstein
      is recognized as one of the greatest and most influential physicists of all
      time.\"]}, {\"sentence_index\": 1, \"simpler_statements\": [\"Albert Einstein
      was best known for developing the theory of relativity.\", \"Albert Einstein
      also made important contributions to the development of the theory of quantum
      mechanics.\"]}]```\n\nYour actual task:\n\nquestion: \"What is the capital of
      France?\"\nanswer: \"The capital of France is Paris\"\nsentences: \"\"\nanalysis:
      \n", "role": "user"}], "model": "gpt-4o-mini", "n": 1, "stream": false, "temperature":
      1e-08}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2919'
      content-type:
      - application/json
      cookie:
      - __cf_bm=I1uA6Uw_kSHTz4C5HJeEgN8tlgahA.w4lNRH3SUXlTw-1727198906-1.0.1.1-jjjdJBAcMMJ3HfLtMRYpZMtzklqRQSbb7p235vOXdV1gO9TwAerAZ.q8lENyNlhVsGbZl0PRhc01Od06TKaPFg;
        _cfuvid=cIQ0gHwgf7xZrO.PtD6BOsLZOjkubjxa5vGZKkAyIgQ-1727198906317-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.47.1
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.47.1
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dJFPj9owEMXvfIrRnMkqSVGycGtVVVWlSj1UW6kEJcZMglvHdj1D/yG+
        e+XAAnvoxYf383t+Mz7OANDscAWo90r0GGz2+s0rHX79/Nv7jz+eQj68r99++PqkvlTG1zXOk8Nv
        v5GWZ9eD9mOwJMa7M9aRlFBKLeqyLpaPy7yewOh3ZJNtCJItfDYaZ7IyLxdZXmfF48W990YT4wrW
        MwCA43Smnm5Hv3EF+fxZGYlZDYSr6yUAjN4mBRWzYVFOcH6D2jshN1Xvum59bJApKZraKb6Z8qFB
        Nmmm2LIooZGccELrBj/vCbQKRpQF38O7qJwmMAyfVDT80ODmtOm67v7RSP2BVRrcHay96KfrFNYP
        IfotX/hV740zvG8jKfYuNWbxASd6mgFspm0dXiwAQ/RjkFb8d3IpsMqLcx7ePulGy+oCxYuyd66y
        /p+r3ZEoY/lu53huaNxwS8ivNac5kf+w0Nj2xg0UQzTnL+hDW2y3i6qo6n6Js9PsHwAAAP//AwAm
        auP/kAIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c847db2ac748c7b-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 24 Sep 2024 17:28:27 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '373'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149999323'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_baa95df2630ee4e5833bada05f9e7107
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "Your task is to judge the faithfulness of a
      series of statements based on a given context. For each statement you must return
      verdict as 1 if the statement can be directly inferred based on the context
      or 0 if the statement can not be directly inferred based on the context.\n\nThe
      output should be a well-formatted JSON instance that conforms to the JSON schema
      below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\":
      \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\":
      {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\",
      \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\":
      {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output
      JSON schema:\n```\n{\"type\": \"array\", \"items\": {\"$ref\": \"#/definitions/StatementFaithfulnessAnswer\"},
      \"definitions\": {\"StatementFaithfulnessAnswer\": {\"title\": \"StatementFaithfulnessAnswer\",
      \"type\": \"object\", \"properties\": {\"statement\": {\"title\": \"Statement\",
      \"description\": \"the original statement, word-by-word\", \"type\": \"string\"},
      \"reason\": {\"title\": \"Reason\", \"description\": \"the reason of the verdict\",
      \"type\": \"string\"}, \"verdict\": {\"title\": \"Verdict\", \"description\":
      \"the verdict(0/1) of the faithfulness.\", \"type\": \"integer\"}}, \"required\":
      [\"statement\", \"reason\", \"verdict\"]}}}\n```\n\nDo not return any preamble
      or explanations, return only a pure JSON string surrounded by triple backticks
      (```).\n\nExamples:\n\ncontext: \"John is a student at XYZ University. He is
      pursuing a degree in Computer Science. He is enrolled in several courses this
      semester, including Data Structures, Algorithms, and Database Management. John
      is a diligent student and spends a significant amount of time studying and completing
      assignments. He often stays late in the library to work on his projects.\"\nstatements:
      ```[\"John is majoring in Biology.\", \"John is taking a course on Artificial
      Intelligence.\", \"John is a dedicated student.\", \"John has a part-time job.\"]```\nanswer:
      ```[{\"statement\": \"John is majoring in Biology.\", \"reason\": \"John''s
      major is explicitly mentioned as Computer Science. There is no information suggesting
      he is majoring in Biology.\", \"verdict\": 0}, {\"statement\": \"John is taking
      a course on Artificial Intelligence.\", \"reason\": \"The context mentions the
      courses John is currently enrolled in, and Artificial Intelligence is not mentioned.
      Therefore, it cannot be deduced that John is taking a course on AI.\", \"verdict\":
      0}, {\"statement\": \"John is a dedicated student.\", \"reason\": \"The context
      states that he spends a significant amount of time studying and completing assignments.
      Additionally, it mentions that he often stays late in the library to work on
      his projects, which implies dedication.\", \"verdict\": 1}, {\"statement\":
      \"John has a part-time job.\", \"reason\": \"There is no information given in
      the context about John having a part-time job.\", \"verdict\": 0}]```\n\ncontext:
      \"Photosynthesis is a process used by plants, algae, and certain bacteria to
      convert light energy into chemical energy.\"\nstatements: ```[\"Albert Einstein
      was a genius.\"]```\nanswer: ```[{\"statement\": \"Albert Einstein was a genius.\",
      \"reason\": \"The context and statement are unrelated\", \"verdict\": 0}]```\n\nYour
      actual task:\n\ncontext: \"The capital of France is Paris.\"\nstatements: \"[\\\"The
      capital of France is Paris.\\\"]\"\nanswer: \n", "role": "user"}], "model":
      "gpt-4o-mini", "n": 1, "stream": false, "temperature": 1e-08}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3661'
      content-type:
      - application/json
      cookie:
      - __cf_bm=I1uA6Uw_kSHTz4C5HJeEgN8tlgahA.w4lNRH3SUXlTw-1727198906-1.0.1.1-jjjdJBAcMMJ3HfLtMRYpZMtzklqRQSbb7p235vOXdV1gO9TwAerAZ.q8lENyNlhVsGbZl0PRhc01Od06TKaPFg;
        _cfuvid=cIQ0gHwgf7xZrO.PtD6BOsLZOjkubjxa5vGZKkAyIgQ-1727198906317-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.47.1
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.47.1
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dFHBbpwwEL3zFSOflwg224Xl1kTqsa2i9tIQgdcMMC3Yjj0bpVrtv1dm
        CSSHXnx4b97zmzfnCEBQIwoQqpesRjvEn+9u1fOD+irx4T7Nxv2O+p76Z/Pz269PWmyCwhx/o+I3
        1Y0yox2Qycy0cigZg2uabbP0kB+SfCJG0+AQZJ3leGfikTTF22S7i5MsTvNZ3RtS6EUBjxEAwHl6
        Q07d4KsoINm8ISN6LzsUxTIEIJwZAiKk9+RZahablVRGM+opel3Xj+dSeJaMI2ouRQGl+NEjKGmJ
        5QCmhS9OaoVAHr5LR/6mFBsohUPpjV4Fi0cYlNCQQ8Xg0CJTqCU4cY9AujVulBNknXmhBhsgPXFT
        sleef3hB15CaMqWXp7qu3y/hsD15GYrUp2GY8cvSymA668zRz/yCt6TJ99U1fGjAs7FiYi8RwNPU
        /ulDocI6M1qu2PxBHQyzLL/6ifXoK3t7mEk2LIcVz9Psf6qqQZY0+Hc3nOsl3a0OyRJz2lP4v55x
        rFrSHTrr6HrS1lbp8bjbp/usPYjoEv0DAAD//wMAr2pwbuACAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c847db6c8bd8c7b-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 24 Sep 2024 17:28:28 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '723'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149999151'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_abc83078f2db82b2b87f90efc169ee29
    status:
      code: 200
      message: OK
version: 1
