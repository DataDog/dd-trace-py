interactions:
- request:
    body: '{"contents": [{"parts": [{"text": "What is the sum of the first 50 prime
      numbers? Generate and run code for the calculation, and make sure you get all
      50."}], "role": "user"}], "tools": [{"codeExecution": {}}], "generationConfig":
      {}}'
    headers:
      ? !!python/object/apply:multidict._multidict.istr
      - Accept
      : - '*/*'
      ? !!python/object/apply:multidict._multidict.istr
      - Accept-Encoding
      : - gzip, deflate
      ? !!python/object/apply:multidict._multidict.istr
      - Connection
      : - keep-alive
      Content-Length:
      - '234'
      ? !!python/object/apply:multidict._multidict.istr
      - Content-Type
      : - application/json
      ? !!python/object/apply:multidict._multidict.istr
      - User-Agent
      : - google-genai-sdk/1.21.1 gl-python/3.10.13
      ? !!python/object/apply:multidict._multidict.istr
      - x-goog-api-client
      : - google-genai-sdk/1.21.1 gl-python/3.10.13
    method: POST
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent
  response:
    body:
      string: "{\n  \"candidates\": [\n    {\n      \"content\": {\n        \"parts\":
        [\n          {\n            \"text\": \"To find the sum of the first 50 prime
        numbers, I will first generate the prime numbers and then sum them up using
        Python.\\n\\n**1. Strategy to find prime numbers:**\\nI will use a function
        `is_prime(n)` to check if a number `n` is prime. A number `n` is prime if
        it is greater than 1 and is not divisible by any number from 2 up to the square
        root of `n`.\\nThen, I will iterate through numbers, check if they are prime,
        and add them to a list until I have 50 prime numbers.\\n\\n**2. Calculation:**\\n\\n\"\n
        \         },\n          {\n            \"executableCode\": {\n              \"language\":
        \"PYTHON\",\n              \"code\": \"import math\\n\\ndef is_prime(n):\\n
        \   \\\"\\\"\\\"Checks if a number is prime.\\\"\\\"\\\"\\n    if n \\u003c
        2:\\n        return False\\n    for i in range(2, int(math.sqrt(n)) + 1):\\n
        \       if n % i == 0:\\n            return False\\n    return True\\n\\nprime_numbers
        = []\\nnum = 2\\nwhile len(prime_numbers) \\u003c 50:\\n    if is_prime(num):\\n
        \       prime_numbers.append(num)\\n    num += 1\\n\\nsum_of_primes = sum(prime_numbers)\\n\\nprint(f\\\"The
        first 50 prime numbers are: {prime_numbers}\\\")\\nprint(f\\\"The count of
        prime numbers found: {len(prime_numbers)}\\\")\\nprint(f\\\"The sum of the
        first 50 prime numbers is: {sum_of_primes}\\\")\"\n            }\n          },\n
        \         {\n            \"codeExecutionResult\": {\n              \"outcome\":
        \"OUTCOME_OK\",\n              \"output\": \"The first 50 prime numbers are:
        [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,
        73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151,
        157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229]\\nThe
        count of prime numbers found: 50\\nThe sum of the first 50 prime numbers is:
        5117\\n\"\n            }\n          },\n          {\n            \"text\":
        \"The sum of the first 50 prime numbers is **5117**.\\n\\nHere are the first
        50 prime numbers:\\n2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,
        53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131,
        137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211,
        223, 227, 229.\"\n          }\n        ],\n        \"role\": \"model\"\n      },\n
        \     \"finishReason\": \"STOP\",\n      \"index\": 0\n    }\n  ],\n  \"usageMetadata\":
        {\n    \"promptTokenCount\": 32,\n    \"candidatesTokenCount\": 575,\n    \"totalTokenCount\":
        1425,\n    \"promptTokensDetails\": [\n      {\n        \"modality\": \"TEXT\",\n
        \       \"tokenCount\": 32\n      }\n    ],\n    \"toolUsePromptTokenCount\":
        619,\n    \"toolUsePromptTokensDetails\": [\n      {\n        \"modality\":
        \"TEXT\",\n        \"tokenCount\": 619\n      }\n    ],\n    \"thoughtsTokenCount\":
        199\n  },\n  \"modelVersion\": \"gemini-2.5-flash\",\n  \"responseId\": \"1A-JaPr5Bt-wqtsPlZiayQs\"\n}\n"
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 29 Jul 2025 18:15:48 GMT
      Server:
      - scaffolding on HTTPServer2
      Server-Timing:
      - gfet4t7; dur=10062
      Transfer-Encoding:
      - chunked
      Vary:
      - Origin
      - X-Origin
      - Referer
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-XSS-Protection:
      - '0'
    status:
      code: 200
      message: OK
version: 1
