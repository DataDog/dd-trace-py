interactions:
- request:
    body: '{"messages": [{"content": "Generate a question for the given answer and
      Identify if answer is noncommittal. Give noncommittal as 1 if the answer is
      noncommittal and 0 if the answer is committal. A noncommittal answer is one
      that is evasive, vague, or ambiguous. For example, \"I don''t know\" or \"I''m
      not sure\" are noncommittal answers\n\nThe output should be a well-formatted
      JSON instance that conforms to the JSON schema below.\n\nAs an example, for
      the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\":
      \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}},
      \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted
      instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}}
      is not well-formatted.\n\nHere is the output JSON schema:\n```\n{\"type\": \"object\",
      \"properties\": {\"question\": {\"title\": \"Question\", \"type\": \"string\"},
      \"noncommittal\": {\"title\": \"Noncommittal\", \"type\": \"integer\"}}, \"required\":
      [\"question\", \"noncommittal\"]}\n```\n\nDo not return any preamble or explanations,
      return only a pure JSON string surrounded by triple backticks (```).\n\nExamples:\n\nanswer:
      \"Albert Einstein was born in Germany.\"\ncontext: \"Albert Einstein was a German-born
      theoretical physicist who is widely held to be one of the greatest and most
      influential scientists of all time\"\noutput: ```{\"question\": \"Where was
      Albert Einstein born?\", \"noncommittal\": 0}```\n\nanswer: \"It can change
      its skin color based on the temperature of its environment.\"\ncontext: \"A
      recent scientific study has discovered a new species of frog in the Amazon rainforest
      that has the unique ability to change its skin color based on the temperature
      of its environment.\"\noutput: ```{\"question\": \"What unique ability does
      the newly discovered species of frog have?\", \"noncommittal\": 0}```\n\nanswer:
      \"Everest\"\ncontext: \"The tallest mountain on Earth, measured from sea level,
      is a renowned peak located in the Himalayas.\"\noutput: ```{\"question\": \"What
      is the tallest mountain on Earth?\", \"noncommittal\": 0}```\n\nanswer: \"I
      don''t know about the  groundbreaking feature of the smartphone invented in
      2023 as am unaware of information beyond 2022. \"\ncontext: \"In 2023, a groundbreaking
      invention was announced: a smartphone with a battery life of one month, revolutionizing
      the way people use mobile technology.\"\noutput: ```{\"question\": \"What was
      the groundbreaking feature of the smartphone invented in 2023?\", \"noncommittal\":
      1}```\n\nYour actual task:\n\nanswer: \"The capital of France is Paris\"\ncontext:
      \"The capital of France is Paris.\"\noutput: \n", "role": "user"}], "model":
      "gpt-4o-mini", "n": 3, "stream": false, "temperature": 0.3}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2795'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.52.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.52.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//7FTBjtMwEL3nK6w5NygJpdnmgmAFWnHlgLQEJa4zScw6tteerFiq/jty
        mzapFiTucMnhvXmTN88e7yPGQDZQMBA9JzFYFb+zn25/PtzefX6/S56e7/2Hx7v7tJeK55t8Daug
        MLvvKOiseiXMYBWSNPpEC4ecMHRN89ebfJtus+2RGEyDKsg6S/HaxIPUMs6SbB0neZzeTOreSIEe
        CvY1Yoyx/fEbfOoGf0DBktUZGdB73iEUlyLGwBkVEODeS09cE6xmUhhNqI/W67rel/A4og/OSyhY
        CV96Tkx6Rj0ywa0krphp2UfHtcC3JaxYCdpoYYZBEnEVVMmhruvlPxy2o+dhTj0qNeGHi2llOuvM
        zk/8BW+llr6vHHJvdDDoyViIFuIXSaT/k5iSyP69JCLGvh0XZryaF6wzg6WKzAPq0HCTTQsD854u
        2O1EkiGuFvjNmbjqVzVIXCq/iBcEFz02s3TeTz420iyI5RG+dPO73qfJpe7+pv1MCIGWsKmsw0aK
        64nnMofhGftT2SXlo2Hw6J6kwIokunASDbZ8VKeLBP7ZEw5VK3WHzjp5uk2trfIMm5zv3qwFRIfo
        FwAAAP//AwBvdHJJbwUAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 90175a57ef0b4255-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 13 Jan 2025 18:12:10 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=_hIzBnwWi.JmgnHbV_n6n7dTonHCjj4Hjj1dK_lP_HM-1736791930-1.0.1.1-FQtSV2lRxJoGA8CwSbN_LOqQ9_xMHDhef7wv.IE18f.FxorCmPhShV1B_f0t7xt0BrUQ2MCcm7DSe_PKqPO8Pw;
        path=/; expires=Mon, 13-Jan-25 18:42:10 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=NzMJ2rX6F12KiO6Xumt0fto5GVsgGTOMKaKxoHmB6T0-1736791930617-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '879'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149999320'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_a903d340801ff2dc9836b15c54c49513
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3923, 374, 279, 6864, 315, 9822, 30]], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '114'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.52.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.52.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 90175a5fea67c411-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 13 Jan 2025 18:12:11 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=Zmk1JGzic3EuzvIzjOaRQmaIzGJ74x.YquPeDyOCZqs-1736791931-1.0.1.1-6KPmj2tXuJXAXiqBJZVUD8MpO.8MYVZ5pROU_OXfJ.0MpbaI6lzTi3naLpKXPcmvDOI__h5SIGAMGyFYV5ygPw;
        path=/; expires=Mon, 13-Jan-25 18:42:11 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=KoihxnMe5Lh0xnz1wfMOrsPFtoJP.8Ykuk5OysABbKg-1736791931216-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '95'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-86c567f984-4pgwv
      x-envoy-upstream-service-time:
      - '31'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999993'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_fbf5702676d468b13c0cf1f3021a2f75
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3923, 374, 279, 6864, 315, 9822, 30], [3923, 374, 279, 6864,
      315, 9822, 30], [3923, 374, 279, 6864, 315, 9822, 30]], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '192'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Zmk1JGzic3EuzvIzjOaRQmaIzGJ74x.YquPeDyOCZqs-1736791931-1.0.1.1-6KPmj2tXuJXAXiqBJZVUD8MpO.8MYVZ5pROU_OXfJ.0MpbaI6lzTi3naLpKXPcmvDOI__h5SIGAMGyFYV5ygPw;
        _cfuvid=KoihxnMe5Lh0xnz1wfMOrsPFtoJP.8Ykuk5OysABbKg-1736791931216-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.52.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.52.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 90175a62ae8dc411-EWR
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 13 Jan 2025 18:12:11 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '69'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-6f4874f9bd-f4dmq
      x-envoy-upstream-service-time:
      - '42'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999979'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_76b9eb3202c6ec88646a5947a9be083f
    status:
      code: 200
      message: OK
version: 1
