import Any
import opentracing
from typing import Optional

log: Any
DEFAULT_CONFIG: Any

class Tracer(opentracing.Tracer):
    def __init__(self, service_name: Optional[Any] = ..., config: Optional[Any] = ..., scope_manager: Optional[Any] = ..., dd_tracer: Optional[Any] = ...) -> None: ...
    @property
    def scope_manager(self) -> Any: ...
    def start_active_span(self, operation_name: Any, child_of: Optional[Any] = ..., references: Optional[Any] = ..., tags: Optional[Any] = ..., start_time: Optional[Any] = ..., ignore_active_span: bool = ..., finish_on_close: bool = ...): ...
    def start_span(self, operation_name: Optional[Any] = ..., child_of: Optional[Any] = ..., references: Optional[Any] = ..., tags: Optional[Any] = ..., start_time: Optional[Any] = ..., ignore_active_span: bool = ...): ...
    @property
    def active_span(self) -> Any: ...
    def inject(self, span_context: Any, format: Any, carrier: Any) -> None: ...
    def extract(self, format: Any, carrier: Any): ...
