import Any
from ddtrace.profiling import collector, event

LOG: Any

class MemoryAllocSampleEvent(event.StackBasedEvent):
    size: Any = ...
    capture_pct: Any = ...
    nevents: Any = ...

class MemoryHeapSampleEvent(event.StackBasedEvent):
    size: Any = ...
    sample_size: Any = ...

class MemoryCollector(collector.PeriodicCollector):
    max_nframe: Any = ...
    heap_sample_size: Any = ...
    ignore_profiler: Any = ...
    def snapshot(self): ...
    def collect(self): ...
    def __init__(self, status: Any, service_lock: Any, recorder: Any, worker: Any, interval: Any, max_events: Any, max_nframe: Any, heap_sample_size: Any, ignore_profiler: Any) -> None: ...
    def __lt__(self, other: _AT`-1) -> Any: ...
    def __le__(self, other: _AT`-1) -> Any: ...
    def __gt__(self, other: _AT`-1) -> Any: ...
    def __ge__(self, other: _AT`-1) -> Any: ...
