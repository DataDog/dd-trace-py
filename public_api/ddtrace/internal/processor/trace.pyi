import abc
from ddtrace.span import Span
from typing import Any, List, Optional

log: Any

class TraceProcessor(metaclass=abc.ABCMeta):
    def __attrs_post_init__(self) -> None: ...
    @abc.abstractmethod
    def process_trace(self, trace: List[Span]) -> Optional[List[Span]]: ...
    def __init__(self) -> None: ...
    def __lt__(self, other: _AT`-1) -> Any: ...
    def __le__(self, other: _AT`-1) -> Any: ...
    def __gt__(self, other: _AT`-1) -> Any: ...
    def __ge__(self, other: _AT`-1) -> Any: ...
