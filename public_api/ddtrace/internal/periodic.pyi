import Any
import typing
from ddtrace.internal import service

class PeriodicService(service.Service):
    @property
    def interval(self) -> float: ...
    @interval.setter
    def interval(self, value: float) -> None: ...
    def join(self, timeout: typing.Optional[float]=...) -> None: ...
    @staticmethod
    def on_shutdown() -> None: ...
    def periodic(self) -> None: ...
    def __init__(self, status: Any, service_lock: Any, interval: Any, worker: Any) -> None: ...
    def __lt__(self, other: _AT`-1) -> Any: ...
    def __le__(self, other: _AT`-1) -> Any: ...
    def __gt__(self, other: _AT`-1) -> Any: ...
    def __ge__(self, other: _AT`-1) -> Any: ...
