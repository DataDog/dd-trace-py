import Any
import ddtrace
from typing import Callable, Optional, TypeVar

F = TypeVar('F', bound=Callable[..., Any])

def iswrapped(obj: Any, attr: Optional[str]=...) -> bool: ...
def unwrap(obj: Any, attr: str) -> None: ...
def safe_patch(patchable: Any, key: str, patch_func: Callable[[F, str, dict, ddtrace.Tracer], F], service: str, meta: dict, tracer: ddtrace.Tracer) -> None: ...
