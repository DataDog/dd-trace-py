from ddtrace.vendor.wrapt import ObjectProxy
from typing import Any, Optional

log: Any

class TracedClient(ObjectProxy):
    def __init__(self, client: Optional[Any] = ..., service: Any = ..., tracer: Optional[Any] = ..., *args: Any, **kwargs: Any) -> None: ...
    def clone(self, *args: Any, **kwargs: Any): ...
    def get(self, *args: Any, **kwargs: Any): ...
    def set(self, *args: Any, **kwargs: Any): ...
    def delete(self, *args: Any, **kwargs: Any): ...
    def gets(self, *args: Any, **kwargs: Any): ...
    def touch(self, *args: Any, **kwargs: Any): ...
    def cas(self, *args: Any, **kwargs: Any): ...
    def incr(self, *args: Any, **kwargs: Any): ...
    def decr(self, *args: Any, **kwargs: Any): ...
    def append(self, *args: Any, **kwargs: Any): ...
    def prepend(self, *args: Any, **kwargs: Any): ...
    def get_multi(self, *args: Any, **kwargs: Any): ...
    def set_multi(self, *args: Any, **kwargs: Any): ...
    def delete_multi(self, *args: Any, **kwargs: Any): ...
