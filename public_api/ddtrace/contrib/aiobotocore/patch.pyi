from ddtrace.vendor import wrapt
from typing import Any

ARGS_NAME: Any
TRACED_ARGS: Any

def patch() -> None: ...
def unpatch() -> None: ...

class WrappedClientResponseContentProxy(wrapt.ObjectProxy):
    def __init__(self, body: Any, pin: Any, parent_span: Any) -> None: ...
    async def read(self, *args: Any, **kwargs: Any): ...
    async def __aenter__(self): ...
    async def __aexit__(self, *args: Any, **kwargs: Any): ...
