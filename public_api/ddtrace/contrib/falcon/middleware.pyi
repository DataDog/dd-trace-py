from typing import Any, Optional

class TraceMiddleware:
    tracer: Any = ...
    service: Any = ...
    def __init__(self, tracer: Any, service: str = ..., distributed_tracing: Optional[Any] = ...) -> None: ...
    def process_request(self, req: Any, resp: Any) -> None: ...
    def process_resource(self, req: Any, resp: Any, resource: Any, params: Any) -> None: ...
    def process_response(self, req: Any, resp: Any, resource: Any, req_succeeded: Optional[Any] = ...) -> None: ...
