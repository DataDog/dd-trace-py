from ...vendor import wrapt
from typing import Any, Optional

log: Any

class TracedCursor(wrapt.ObjectProxy):
    def __init__(self, cursor: Any, pin: Any, cfg: Any) -> None: ...
    def executemany(self, query: Any, *args: Any, **kwargs: Any): ...
    def execute(self, query: Any, *args: Any, **kwargs: Any): ...
    def callproc(self, proc: Any, *args: Any): ...
    def __enter__(self): ...

class FetchTracedCursor(TracedCursor):
    def fetchone(self, *args: Any, **kwargs: Any): ...
    def fetchall(self, *args: Any, **kwargs: Any): ...
    def fetchmany(self, *args: Any, **kwargs: Any): ...

class TracedConnection(wrapt.ObjectProxy):
    def __init__(self, conn: Any, pin: Optional[Any] = ..., cfg: Optional[Any] = ..., cursor_cls: Optional[Any] = ...) -> None: ...
    def __enter__(self): ...
    def cursor(self, *args: Any, **kwargs: Any): ...
    def commit(self, *args: Any, **kwargs: Any): ...
    def rollback(self, *args: Any, **kwargs: Any): ...
