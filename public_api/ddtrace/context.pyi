import Any
from .internal.compat import NumericType
from typing import Optional, Text

log: Any

class Context:
    trace_id: Any = ...
    span_id: Any = ...
    def __attrs_post_init__(self) -> None: ...
    def __eq__(self, other: Any) -> Any: ...
    @property
    def sampling_priority(self) -> Optional[NumericType]: ...
    @sampling_priority.setter
    def sampling_priority(self, value: Optional[NumericType]) -> None: ...
    @property
    def dd_origin(self) -> Optional[Text]: ...
    @dd_origin.setter
    def dd_origin(self, value: Optional[Text]) -> None: ...
    def clone(self) -> Context: ...
    def __init__(self, trace_id: Any, span_id: Any, dd_origin: Any, sampling_priority: Any, lock: Any, meta: builtins.dict[Union[builtins.str, builtins.bytes], builtins.str], metrics: builtins.dict[Union[builtins.str, builtins.bytes], Union[builtins.int, builtins.float]]) -> None: ...
    def __lt__(self, other: _AT`-1) -> Any: ...
    def __le__(self, other: _AT`-1) -> Any: ...
    def __gt__(self, other: _AT`-1) -> Any: ...
    def __ge__(self, other: _AT`-1) -> Any: ...
