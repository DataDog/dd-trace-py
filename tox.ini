# the tox file specifies a way of running our test suite
# against different combinations of libraries and python
# versions.

[tox]
# Our various test environments. The py*-all tasks will run the core
# library tests and all contrib tests with the latest library versions.
# The others will test specific versions of libraries.
envlist =
    flake8
    wait

    {py27,py34}-tracer
    {py27,py34}-integration
    {py27,py34}-contrib
    {py27,py34}-bottle{12}-webtest
    {py27,py34}-cassandra{35,36,37}
    {py27,py34}-elasticsearch{23}
    {py27,py34}-falcon{10}
    {py27,py34}-django{18,19,110}-djangopylibmc06-djangoredis45-pylibmc-redis-memcached
    {py27,py34}-flask{010,011}-blinker
    {py27,py34}-flask{010,011}-flaskcache{013}-memcached-redis-blinker
    {py27,py34}-gevent{10,11}
    {py27}-flask{010,011}-flaskcache{012}-memcached-redis-blinker
    {py27,py34}-mysqlconnector{21}
    {py27,py34}-pylibmc{140,150}
    {py27,py34}-pymongo{30,31,32,33}-mongoengine
    {py27,py34}-pyramid{17,18}-webtest
    {py27,py34}-requests{208,209,210,211}
    {py27,py34}-sqlalchemy{10,11}-psycopg2
    {py27,py34}-redis
    {py27,py34}-sqlite3

[testenv]
basepython =
    py27: python2.7
    py34: python3.4

deps =
# test dependencies installed in all envs
    mock
    nose
    msgpack-python
# integrations
    contrib: blinker
    contrib: bottle
    contrib: cassandra-driver
    contrib: elasticsearch
    contrib: falcon
    contrib: flask
    contrib: flask_cache
    contrib: mongoengine
    contrib: mysql-connector
    contrib: psycopg2
    contrib: pylibmc
    contrib: pymongo
    contrib: pyramid
    contrib: python-memcached
    contrib: redis
    contrib: requests
    contrib: sqlalchemy
    contrib: WebTest
    blinker: blinker
    bottle12: bottle>=0.12
    cassandra35: cassandra-driver>=3.5,<3.6
    cassandra36: cassandra-driver>=3.6,<3.7
    cassandra37: cassandra-driver>=3.7
    elasticsearch23: elasticsearch>=2.3,<2.4
    falcon10: falcon>=1.0,<1.1
    django18: django>=1.8,<1.9
    django19: django>=1.9,<1.10
    django110: django>=1.10,<1.11
    djangopylibmc06: django-pylibmc>=0.6,<0.7
    djangoredis45: django-redis>=4.5,<4.6
    flask010: flask>=0.10,<0.11
    flask011: flask>=0.11
    gevent10: gevent>=1.0,<1.1
    gevent11: gevent>=1.1
    flaskcache012: flask_cache>=0.12,<0.13
    flaskcache013: flask_cache>=0.13,<0.14
    memcached: python-memcached
    mongoengine: mongoengine
    mysqlconnector21: mysql-connector>=2.1,<2.2
    pylibmc: pylibmc
    pylibmc140: pylibmc>=1.4.0,<1.5.0
    pylibmc150: pylibmc>=1.5.0
    pymongo30: pymongo>=3.0,<3.1
    pymongo31: pymongo>=3.1,<3.2
    pymongo32: pymongo>=3.2,<3.3
    pymongo33: pymongo>=3.3
    pyramid17: pyramid>=1.7,<1.8
    pyramid18: pyramid>=1.8,<1.9
    pymongo33: pymongo>=3.3
    psycopg2: psycopg2
    redis: redis
    requests200: requests>=2.0,<2.1
    requests208: requests>=2.8,<2.9
    requests209: requests>=2.9,<2.10
    requests210: requests>=2.10,<2.11
    requests211: requests>=2.11,<2.12
    sqlalchemy10: sqlalchemy>=1.0,<1.1
    sqlalchemy11: sqlalchemy==1.1.0b3
    webtest: WebTest

# pass along test env variables
passenv=TEST_*

commands =
# wait for services script
    {py34}-wait: python tests/wait-for-services.py
# run only essential tests related to the tracing client
    {py27,py34}-tracer: nosetests {posargs} --exclude=".*(contrib|integration).*" tests/
# integration tests
    {py27,py34}-integration: nosetests {posargs} tests/test_integration.py
# run all tests for the release jobs except the ones with a different test runner
    {py27,py34}-contrib: nosetests {posargs} --exclude=".*(django).*" tests/contrib/
# run subsets of the tests for particular library versions
    {py27,py34}-bottle{12}: nosetests {posargs} tests/contrib/bottle/
    {py27,py34}-cassandra{35,36,37}: nosetests {posargs} tests/contrib/cassandra
    {py27,py34}-elasticsearch{23}: nosetests {posargs} tests/contrib/elasticsearch
    {py27,py34}-django{18,19,110}: python tests/contrib/django/runtests.py {posargs}
    {py27,py34}-flaskcache{013}: nosetests {posargs} tests/contrib/flask_cache
# flask_cache 0.12 is not python 3 compatible
    {py27}-flaskcache{012}: nosetests {posargs} tests/contrib/flask_cache
    {py27,py34}-flask{010,011}: nosetests {posargs} tests/contrib/flask
    {py27,py34}-falcon{10}: nosetests {posargs} tests/contrib/falcon
    {py27,py34}-gevent{10,11}: nosetests {posargs} tests/contrib/gevent
    {py27,py34}-mysqlconnector21: nosetests {posargs} tests/contrib/mysql
    {py27,py34}-pylibmc{140,150}: nosetests {posargs} tests/contrib/pylibmc
    {py27,py34}-pymongo{30,31,32,33}: nosetests {posargs} tests/contrib/pymongo/
    {py27,py34}-pyramid{17,18}: nosetests {posargs} tests/contrib/pyramid/
    {py27,py34}-mongoengine: nosetests {posargs} tests/contrib/mongoengine
    {py27,py34}-psycopg2: nosetests {posargs} tests/contrib/psycopg
    {py27,py34}-redis: nosetests {posargs} tests/contrib/redis
    {py27,py34}-sqlite3: nosetests {posargs} tests/contrib/sqlite3
    {py27,py34}-requests{200,208,209,210,211}: nosetests {posargs} tests/contrib/requests
    {py27,py34}-sqlalchemy{10,11}: nosetests {posargs} tests/contrib/sqlalchemy

[testenv:wait]
commands=python tests/wait-for-services.py
basepython=python
deps=
    cassandra-driver
    psycopg2
# this is somewhat flaky (can fail and still be up) so try the tests anyway
ignore_outcome=true

[testenv:flake8]
deps=flake8==3.2.0
commands=flake8 ddtrace
basepython=python

[flake8]
ignore=W391,E231,E201,E202,E203,E261,E302,E128,E126,E124
max-line-length=120
exclude = tests
