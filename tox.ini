# the tox file specifies a way of running our test suite
# against different combinations of libraries and python
# versions.

[tox]
# Our various test environments. The py*-all tasks will run the core
# library tests and all contrib tests with the latest library versions.
# The others will test specific versions of libraries.
#
# FIXME[gabin]:
# If the env name is longer than 128 characters (linux kernel limit specified
# in "master/include/linux/binfmts.h"), we'll get a "bad interpreter: No such file or directory" error.
#
#See linux kernel limitation:
# - https://github.com/torvalds/linux/blob/master/include/linux/binfmts.h#L12
#
#See related github topic:
# - https://github.com/pypa/virtualenv/issues/596
envlist =
    wait
    {py27,py35,py36,py37,py38,py39}-profile{,-gevent}
    {py27,py35,py36,py37,py38,py39}-profile-minreqs{,-gevent}
    py{27,35,36,37,38,39}-integration-{v5,latest,snapshot}
# Integrations environments
    # aiobotocore dropped Python 3.5 support in 0.12
    aiobotocore_contrib-{py35}-aiobotocore{02,03,04,05,07,08,09,010,011}
    aiobotocore_contrib-{py36}-aiobotocore{02,03,04,05,07,08,09,010,011,012}
    # aiobotocore 0.2 and 0.4 do not work because they use async as a reserved keyword
    aiobotocore_contrib-py{37,38}-aiobotocore{03,05,07,08,09,010,011,012}
    aiobotocore_contrib-py39-aiobotocore{010,011,012}
    # Python 3.7 needs at least aiohttp 2.3
    aiohttp_contrib-{py35,py36}-aiohttp{20,21,22}-aiohttp_jinja{012,013}-yarl-pytest3
    aiohttp_contrib-{py35,py36,py37,py38}-aiohttp23-aiohttp_jinja015-yarl10-pytest3
    aiohttp_contrib-{py35,py36,py37}-aiohttp{30,31,32,33,35,36}-aiohttp_jinja{015}-yarl10-pytest3
    aiohttp_contrib-py{38,39}-aiohttp{30,31,32,33,36}-aiohttp_jinja015-yarl10-pytest3
    algoliasearch_contrib-py{27,35,36,37,38,39}-algoliasearch{1,2,}
    asyncio_contrib-py{35,36,37,38,39}
    bottle_contrib{,_autopatch}-py{27,35,36,37,38,39}-bottle{11,12,}-webtest
    consul_contrib-py{27,35,36,37,38,39}-consul{07,10,11,}
    dbapi_contrib-py{27,35,36,37,38,39}
    dogpile_contrib-py{27,35}-dogpilecache{06,07,08,09}
    dogpile_contrib-py{36,37,38,39}-dogpilecache{06,07,08,09,10,}
    futures_contrib-py27-futures{30,31,32,}
    futures_contrib-py{35,36,37,38,39}
    gevent_contrib-py27-gevent{11,12,13}-sslmodules
    gevent_contrib-py{35,36}-gevent{11,12,13}-sslmodules3-sslmodules
    gevent_contrib-py{37,38}-gevent{13,14}-sslmodules3-sslmodules
    gevent_contrib-py39-gevent{209,2012,211}-sslmodules3-sslmodules
    httplib_contrib-py{27,35,36,37,38,39}
    kombu_contrib-py{27,35,36}-kombu{40,41,42,43,44,45,46,}
# Kombu >= 4.2 only supports Python 3.7+
    kombu_contrib-py{37,38,39}-kombu{42,43,44,45,46,}
    molten_contrib-py{36,37,38,39}-molten{06,07,10,}
    mysqldb_contrib-py{27,35,36,37,38,39}-mysqlclient{13,14,}
    pylibmc_contrib-py{27,35,36,37,38,39}-pylibmc{140,150,}
    pylons_contrib-py27-pylons{096,097,010,10,}
    pymongo_contrib-py{27,35,36,37}-pymongo{30,31,32,33,34,35,36,37,38,39,310,}-mongoengine
# pymongo does not yet support Python 3.8: https://github.com/pymssql/pymssql/issues/586
# but these tests still work.
    pymongo_contrib-py38-pymongo{30,31,32,33,35,36,37,38,39,310,}-mongoengine
    pymysql_contrib-py{27,35,36,37,38}-pymysql{07,08,09,}
    pynamodb_contrib-{py27,py35,py36,py37,py38}-pynamodb{40,41,42,43,}-moto1
    pyodbc_contrib-py{27,35,36,37,38}-pyodbc{3,4}

    pyramid_contrib{,_autopatch}-py{27,35,36,37,38}-pyramid{17,18,19,110,}-webtest
    redis_contrib-py{27,35,36,37,38}-redis{210,30,32,33,34,35,}
    rediscluster_contrib-py{27,35,36,37,38}-rediscluster{135,136,200,}-redis210
    requests_contrib{,_autopatch}-{py27,py35,py36,py37,py38}-requests{208,209,210,211,212,213,219}
    pymysql_contrib-py{27,35,36,37,38,39}-pymysql{07,08,09,}
    pyodbc_contrib-py{27,35,36,37,38,39}-pyodbc{3,4}
    pyramid_contrib{,_autopatch}-py{27,35,36,37,38,39}-pyramid{17,18,19,110,}-webtest
    redis_contrib-py{27,35,36,37,38,39}-redis{210,30,32,33,34,35,}
    rediscluster_contrib-py{27,35,36,37,38,39}-rediscluster{135,136,200,}-redis210
    sanic_contrib-py{37,38,39}-sanic{1906,1909,1912,2003,2006,2103,}
    sqlite3_contrib-py{27,35,36,37,38,39}-sqlite3
    tornado_contrib-py{27,35,36,37,38,39}-tornado{44,45}
    tornado_contrib-py{37,38,39}-tornado{50,51,60,}
    tornado_contrib-py27-tornado{44,45}-futures{30,31,32,}
    vertica_contrib-py{27,35,36,37,38,39}-vertica{060,070}
# Opentracer
    py{27,35,36,37,38,39}-opentracer
    py{35,36,37,38}-opentracer_asyncio
    py{35,36,37,38,39}-opentracer_tornado-tornado{44,45,50,60,}
    py{27,35,36}-opentracer_gevent-gevent{11,12}
    py{37,38}-opentracer_gevent-gevent{13,14}
    py39-opentracer_gevent-gevent{209,2012,211}

isolated_build = true

requires = virtualenv<=20.2.1

[testenv]
# Wheels for gevent segfault pretty easily
install_command=python -m pip install --no-binary gevent {opts} {packages}
usedevelop = true

setenv =
    DD_TESTING_RAISE=1
    profile-gevent: DD_PROFILE_TEST_GEVENT=1
    integration-v5: AGENT_VERSION=v5
    integration-latest: AGENT_VERSION=latest
    integration-snapshot: AGENT_VERSION=testagent
    bottle_contrib_autopatch: DATADOG_SERVICE_NAME=bottle-app
    pyramid_contrib_autopatch: DATADOG_SERVICE_NAME=foobar
    pyramid_contrib_autopatch: DATADOG_PYRAMID_DISTRIBUTED_TRACING=True

extras =
  profile: profiling

deps =
    cython
    pytest-cov
    pytest-mock
    opentracing
# test dependencies installed in all envs
    mock
# used to test our custom msgpack encoder
    integration: msgpack
    profile: pytest-benchmark
    profile: uwsgi
    profile-minreqs: protobuf==3.0.0
    profile-minreqs: tenacity==5.0.1
    profile-!minreqs-gevent: gevent
    py27-profile-minreqs-gevent: gevent==1.1.0
    py{35,36,37,38}-profile-minreqs-gevent: gevent==1.4.0
    py39-profile-minreqs-gevent: gevent==20.6.0
    py39-profile-minreqs-gevent: greenlet==0.4.16
# force the downgrade as a workaround
# https://github.com/aio-libs/aiohttp/issues/2662
    yarl: yarl==0.18.0
    yarl10: yarl>=1.0,<1.1
# backports
    py27: enum34
# integrations
    # aiobotocore: aiobotocore>=1.0 not yet supported
    aiobotocore012: aiobotocore>=0.12,<0.13
    aiobotocore011: aiobotocore>=0.11,<0.12
    aiobotocore010: aiobotocore>=0.10,<0.11
    aiobotocore09: aiobotocore>=0.9,<0.10
    aiobotocore08: aiobotocore>=0.8,<0.9
    aiobotocore07: aiobotocore>=0.7,<0.8
    # aiobotocore06 does not work
    aiobotocore05: aiobotocore>=0.5,<0.6
    aiobotocore04: aiobotocore>=0.4,<0.5
    aiobotocore03: aiobotocore>=0.3,<0.4
    aiobotocore02: aiobotocore>=0.2,<0.3
    aiobotocore02: multidict==4.5.2
    aiohttp_contrib: pytest-aiohttp
    aiohttp20: aiohttp>=2.0,<2.1
    aiohttp21: aiohttp>=2.1,<2.2
    aiohttp22: aiohttp>=2.2,<2.3
    aiohttp23: aiohttp>=2.3,<2.4
    aiohttp30: aiohttp>=3.0,<3.1
    aiohttp31: aiohttp>=3.1,<3.2
    aiohttp32: aiohttp>=3.2,<3.3
    aiohttp33: aiohttp>=3.3,<3.4
    aiohttp34: aiohttp>=3.4,<3.5
    aiohttp35: aiohttp>=3.5,<3.6
    aiohttp36: aiohttp>=3.6,<3.7
    aiohttp_jinja012: aiohttp_jinja2>=0.12,<0.13
    aiohttp_jinja013: aiohttp_jinja2>=0.13,<0.14
    aiohttp_jinja015: aiohttp_jinja2>=0.15,<0.16
    algoliasearch: algoliasearch
    algoliasearch1: algoliasearch>=1.2,<2
    algoliasearch2: algoliasearch>=2,<3
    blinker: blinker
    bottle: bottle
    bottle11: bottle>=0.11,<0.12
    bottle12: bottle>=0.12,<0.13
    consul: python-consul
    consul07: python-consul>=0.7,<1.0
    consul10: python-consul>=1.0,<1.1
    consul11: python-consul>=1.1,<1.2
# decorator 5 dropped support for Python 2
    dogpile_contrib-py27: decorator<5
    dogpilecache: dogpile.cache
    dogpilecache06: dogpile.cache==0.6.*
    dogpilecache07: dogpile.cache==0.7.*
    dogpilecache08: dogpile.cache==0.8.*
    dogpilecache09: dogpile.cache==0.9.*
    dogpilecache10: dogpile.cache==1.0.*
    futures: futures
    futures30: futures>=3.0,<3.1
    futures31: futures>=3.1,<3.2
    futures32: futures>=3.2,<3.3
    gevent11: gevent>=1.1,<1.2
    gevent12: gevent>=1.2,<1.3
    gevent13: gevent>=1.3,<1.4
    gevent14: gevent>=1.4,<1.5
    gevent209: gevent>=20.9,<20.10
    gevent2012: gevent>=20.12,<20.13
    gevent211: gevent>=21.1,<21.2
    kombu: kombu
    kombu40: kombu>=4.0,<4.1
    kombu41: kombu>=4.1,<4.2
    kombu42: kombu>=4.2,<4.3
    kombu43: kombu>=4.3,<4.4
    kombu44: kombu>=4.4,<4.5
    kombu45: kombu>=4.5,<4.6
    kombu46: kombu>=4.6,<4.7
    memcached: python-memcached
    moto: moto
    moto1: moto>=1,<2
    molten: molten
    molten06: molten>=0.6,<0.7
    molten07: molten>=0.7,<0.8
    molten10: molten>=1.0,<1.1
    mongoengine: mongoengine
    mysqlclient: mysqlclient
    mysqlclient13: mysqlclient>=1.3,<1.4
    mysqlclient14: mysqlclient>=1.4,<1.5
    pylibmc: pylibmc
    pylibmc140: pylibmc>=1.4,<1.5
    pylibmc150: pylibmc>=1.5,<1.6
    pylibmc160: pylibmc>=1.6,<1.7
# webob is required for Pylons < 1.0
    pylons: pylons
# decorator 5 dropped support for Python 2
    pylons_contrib: decorator<5
    pylons096: pylons>=0.9.6,<0.9.7
    pylons096: webob<1.1
    pylons097: pylons>=0.9.7,<0.9.8
    pylons097: webob<1.1
    pylons010: pylons>=0.10,<0.11
    pylons010: webob<1.1
    pylons10: pylons>=1.0,<1.1
    pymysql: pymysql
    pymysql07: pymysql>=0.7,<0.8
    pymysql08: pymysql>=0.8,<0.9
    pymysql09: pymysql>=0.9,<0.10
    pyramid: pyramid
    pyramid17: pyramid>=1.7,<1.8
    pyramid18: pyramid>=1.8,<1.9
    pyramid19: pyramid>=1.9,<1.10
    pyramid110: pyramid>=1.10,<1.11
    pyodbc: pyodbc
    pyodbc4: pyodbc>=4.0,<5.0
    pyodbc3: pyodbc>=3.0,<4.0
    pytest: pytest>=3
    pytest3: pytest>=3.0,<4.0
    redis: redis
    redis210: redis>=2.10,<2.11
    redis30: redis>=3.0,<3.1
    redis32: redis>=3.2,<3.3
    redis33: redis>=3.3,<3.4
    redis34: redis>=3.4,<3.5
    redis35: redis>=3.5,<3.6
    rediscluster: redis-py-cluster
    rediscluster135: redis-py-cluster>=1.3.5,<1.3.6
    rediscluster136: redis-py-cluster>=1.3.6,<1.3.7
    rediscluster200: redis-py-cluster>=2.0.0,<2.1.0
    rediscluster210: redis-py-cluster>=2.1.0,<2.2.0
    sanic_contrib: pytest-asyncio==0.15.1
    sanic1906: sanic~=19.6.0
    sanic1906: pytest-sanic==1.6.2
    sanic1906: httpx==0.9.3
    sanic1909: sanic~=19.9.0
    sanic1909: pytest-sanic==1.6.2
    sanic1909: httpx==0.9.3
    sanic1912: sanic~=19.12.0
    sanic1912: pytest-sanic==1.6.2
    sanic1912: httpx==0.9.3
    sanic2003: sanic~=20.3.0
    sanic2003: pytest-sanic==1.6.2
    sanic2003: httpx==0.11.1
    sanic2006: sanic~=20.6.0
    sanic2006: pytest-sanic==1.6.2
    sanic2006: httpx==0.11.1
    sanic2103: sanic~=21.3.0
    sanic2103: pytest-sanic==1.7.1
    sanic2103: httpx==0.15.4
    sanic: sanic
    sanic: pytest-sanic==1.7.1
    sanic: httpx==0.15.4
    sqlalchemy: sqlalchemy
    sslmodules3: aiohttp
    sslmodules3: aiobotocore
    sslmodules: botocore
    sslmodules: requests
    sslmodules: elasticsearch
    sslmodules: pynamodb
    tornado: tornado
    tornado44: tornado>=4.4,<4.5
    tornado45: tornado>=4.5,<4.6
    tornado50: tornado>=5.0,<5.1
    tornado51: tornado>=5.1,<5.2
    tornado60: tornado>=6.0,<6.1
    vertica060: vertica-python>=0.6.0,<0.7.0
    vertica070: vertica-python>=0.7.0,<0.8.0
    webtest: WebTest
    asyncio_contrib: pytest-asyncio
    opentracer_asyncio: pytest-asyncio
    aiobotocore_contrib: pytest-asyncio

# pass along test env variables
passenv=
    TEST_*
    # https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables
    CI
    CI_*
    CIRCLECI
    CIRCLE_*
    DD_TRACE_AGENT_URL

commands =
# run only essential tests related to the tracing client
    tracer: pytest {posargs} tests/tracer
    # Coverage is excluded from profile because of an issue with Python 3.5.
    profile: python -m tests.profiling.run pytest --no-cov --capture=no --verbose --benchmark-disable {posargs} tests/profiling
# run only the opentrace tests
    opentracer: pytest {posargs} tests/opentracer/core
    opentracer_asyncio: pytest {posargs} tests/opentracer/test_tracer_asyncio.py
    opentracer_tornado-tornado{40,41,42,43,44}: pytest {posargs} tests/opentracer/test_tracer_tornado.py
    opentracer_gevent: pytest {posargs} tests/opentracer/test_tracer_gevent.py
    integration-{v5,latest,snapshot}: pytest --no-cov {posargs} tests/integration/
# Contribs
    aiobotocore_contrib: pytest {posargs} tests/contrib/aiobotocore
    aiohttp_contrib: pytest {posargs} tests/contrib/aiohttp
    algoliasearch_contrib: pytest {posargs} tests/contrib/algoliasearch
    asyncio_contrib: pytest {posargs} tests/contrib/asyncio
    bottle_contrib: pytest {posargs} --ignore="tests/contrib/bottle/test_autopatch.py" tests/contrib/bottle/
    bottle_contrib_autopatch: python tests/ddtrace_run.py pytest {posargs} tests/contrib/bottle/test_autopatch.py
    consul_contrib: pytest {posargs} tests/contrib/consul
    dbapi_contrib: pytest {posargs} tests/contrib/dbapi
    dogpile_contrib: pytest {posargs} tests/contrib/dogpile_cache
    futures_contrib: pytest {posargs} tests/contrib/futures
    gevent_contrib: pytest {posargs} tests/contrib/gevent
    httplib_contrib: pytest {posargs} tests/contrib/httplib
    molten_contrib: pytest {posargs} tests/contrib/molten
    mysql_contrib: pytest {posargs} tests/contrib/mysql
    mysqldb_contrib: pytest {posargs} tests/contrib/mysqldb
    pylibmc_contrib: pytest {posargs} tests/contrib/pylibmc
    pylons_contrib: python -m pytest {posargs} tests/contrib/pylons
    pymysql_contrib: pytest {posargs} tests/contrib/pymysql
    pyodbc_contrib: pytest {posargs} tests/contrib/pyodbc
    pyramid_contrib: pytest {posargs} tests/contrib/pyramid/test_pyramid.py
    pyramid_contrib_autopatch: python tests/ddtrace_run.py pytest {posargs} tests/contrib/pyramid/test_pyramid_autopatch.py
    redis_contrib: pytest {posargs} tests/contrib/redis
    rediscluster_contrib: pytest {posargs} tests/contrib/rediscluster
    kombu_contrib: pytest {posargs} tests/contrib/kombu
    sanic_contrib: pytest {posargs} tests/contrib/sanic/test_sanic.py
    sanic_contrib: pytest {posargs} tests/contrib/sanic/test_sanic_server.py
    sqlite3_contrib: pytest {posargs} tests/contrib/sqlite3
    tornado_contrib: pytest {posargs} tests/contrib/tornado
    vertica_contrib: pytest {posargs} tests/contrib/vertica/

[testenv:wait]
skip_install=true
commands=python tests/wait-for-services.py {posargs}
basepython=python
deps=
    psycopg2
    mysql-connector-python!=8.0.18
    redis-py-cluster>=1.3.6,<1.4.0
    vertica-python>=0.6.0,<0.7.0
    kombu>=4.2.0,<4.3.0

# this is somewhat flaky (can fail and still be up) so try the tests anyway
ignore_outcome=true

# DEV: We use `conftest.py` as a local pytest plugin to configure hooks for collection
[pytest]
# --cov-report is intentionally empty else pytest-cov will default to generating a report
addopts = -p tests.cache.conftest --cov=ddtrace/ --cov=tests/ --cov-append --cov-report= --durations=10 --junitxml=test-results/junit.xml
# DEV: The default is `test_*\.py` which will miss `test.py` files
python_files = test*\.py
filterwarnings =
    # Show any DeprecationWarnings once
    once::DeprecationWarning

[flake8]
max-line-length=120
exclude=
  .ddtox,.tox,.riot,.venv*
  .git,__pycache__,
  .eggs,*.egg,
  build,
  # We shouldn't lint our vendored dependencies
  ddtrace/vendor/
  ddtrace/profiling/exporter/pprof_pb2.py
  ddtrace/profiling/exporter/pprof_pre312_pb2.py
  tests/profiling/simple_program_gevent.py
# Ignore:
# A003: XXX is a python builtin, consider renaming the class attribute
# G201 Logging: .exception(...) should be used instead of .error(..., exc_info=True)
# E231,W503,E203: not respected by black
# We ignore most of the D errors because there are too many; the goal is to fix them eventually
ignore = W503,E231,A003,G201,D100,D101,D102,D103,D104,D105,D106,D107,D200,D202,D204,D205,D208,D210,D300,D400,D401,D403,D413,RST301,B902,E203
enable-extensions=G
rst-roles = class,meth,obj,ref
rst-directives = py:data
