# the tox file specifies a way of running our test suite
# against different combinations of libraries and python
# versions.

[tox]
# By default the tox process includes a 'dist'->'install'->'test' workflow.
# Instead of creating a dist and install it at every step, some tests can directly use the source code to run
# tests: `skipsdist=True`. This is much faster.
# On the other hand, both autopatch tests and the ddtracerun test cannot use the source code as they required the
# module to be installed.
# This variable can be set to True in our circleci env to speed up the process, but still we default to false so
# locally we can run `tox` without any further requirement.
skipsdist={env:TOX_SKIP_DIST:False}

# Our various test environments. The py*-all tasks will run the core
# library tests and all contrib tests with the latest library versions.
# The others will test specific versions of libraries.
#
# FIXME[gabin]:
# If the env name is longer than 128 characters (linux kernel limit specified
# in "master/include/linux/binfmts.h"), we'll get a "bad interpreter: No such file or directory" error.
#
#See linux kernel limitation:
# - https://github.com/torvalds/linux/blob/master/include/linux/binfmts.h#L12
#
#See related github topic:
# - https://github.com/pypa/virtualenv/issues/596
envlist =
    flake8
    wait
    {py27,py34,py35,py36}-tracer
    {py27,py34,py35,py36}-integration
    {py27,py34,py35,py36}-ddtracerun
    {py27,py34,py35,py36}-test_utils
    {py27,py34,py35,py36}-test_logging
# Integrations environments
    aiobotocore_contrib-{py34,py35,py36}-aiobotocore{02,03,04}
    aiohttp_contrib-{py34,py35,py36}-aiohttp{12,13,20,21,22}-aiohttp_jinja{012,013}-yarl
    aiohttp_contrib-{py34,py35,py36}-aiohttp{23}-aiohttp_jinja{015}-yarl10
    aiopg_contrib-{py34,py35,py36}-aiopg{012,015}
    asyncio_contrib-{py34,py35,py36}
    boto_contrib-{py27,py34}-boto
    botocore_contrib-{py27,py34,py35,py36}-botocore
    bottle_contrib{,_autopatch}-{py27,py34,py35,py36}-bottle{11,12}-webtest
    cassandra_contrib-{py27,py34,py35,py36}-cassandra{35,36,37,38,315}
    celery_contrib-{py27,py34,py35,py36}-celery{31,40,41,42}-redis{210}
    dbapi_contrib-{py27,py34,py35,py36}
    django_contrib{,_autopatch}-{py27,py34,py35,py36}-django{18,111}-djangopylibmc06-djangoredis45-pylibmc-redis{210}-memcached
    django_contrib{,_autopatch}-{py34,py35,py36}-django{200}-djangopylibmc06-djangoredis45-pylibmc-redis{210}-memcached
    django_drf_contrib-{py27,py34,py35,py36}-django{111}-djangorestframework{34,37,38}
    django_drf_contrib-{py34,py35,py36}-django{200}-djangorestframework{37,38}
    elasticsearch_contrib-{py27,py34,py35,py36}-elasticsearch{16,17,18,23,24,51,52,53,54,63}
    elasticsearch_contrib-{py27,py34,py35,py36}-elasticsearch1{100}
    elasticsearch_contrib-{py27,py34,py35,py36}-elasticsearch2{50}
    elasticsearch_contrib-{py27,py34,py35,py36}-elasticsearch5{50}
    falcon_contrib{,_autopatch}-{py27,py34,py35,py36}-falcon{10,11,12,13,14}
    flask_contrib{,_autopatch}-{py27,py34,py35,py36}-flask{010,011,012,10}-blinker
# Flask <=0.9 does not support Python 3
    flask_contrib{,_autopatch}-{py27}-flask{09}-blinker
    flask_cache_contrib{,_autopatch}-{py27,py34,py35,py36}-flask{010,011,012}-flaskcache{013}-memcached-redis{210}-blinker
    flask_cache_contrib{,_autopatch}-{py27}-flask{010,011}-flaskcache{012}-memcached-redis{210}-blinker
    futures_contrib-{py27}-futures{30,31,32}
    futures_contrib-{py34,py35,py36}
    gevent_contrib-{py27,py34,py35,py36}-gevent{11,12,13}
# gevent 1.0 is not python 3 compatible
    gevent_contrib-{py27}-gevent{10}
    grpc_contrib-{py27,py34,py35,py36}-grpc
    httplib_contrib-{py27,py34,py35,py36}
    jinja2_contrib-{py27,py34,py35,py36}-jinja{27,28,29,210}
    mako_contrib-{py27,py34,py35,py36}-mako{010,100}
    molten_contrib-{py36}-molten{070,072}
    mongoengine_contrib-{py27,py34,py35,py36}-mongoengine{015}
    msgpack_contrib-{py27,py34}-msgpack{03,04,05}
    mysql_contrib-{py27,py34,py35,py36}-mysqlconnector{21}
    mysqldb_contrib-{py27}-mysqldb{12}
    mysqldb_contrib-{py27,py34,py35,py36}-mysqlclient{13}
    psycopg_contrib-{py27,py34,py35,py36}-psycopg2{24,25,26,27}
    pylibmc_contrib-{py27,py34,py35,py36}-pylibmc{140,150}
    pylons_contrib-{py27}-pylons{096,097,010,10}
    pymemcache_contrib{,_autopatch}-{py27,py34,py35,py36}-pymemcache{130,140}
    pymongo_contrib-{py27,py34,py35,py36}-pymongo{30,31,32,33,34,36}-mongoengine{015}
    pymysql_contrib-{py27,py34,py35,py36}-pymysql{07,08,09}
    pyramid_contrib{,_autopatch}-{py27,py34,py35,py36}-pyramid{17,18,19}-webtest
    redis_contrib-{py27,py34,py35,py36}-redis{26,27,28,29,210,300}
    rediscluster_contrib-{py27,py34,py35,py36}-rediscluster{135,136}-redis210
    requests_contrib{,_autopatch}-{py27,py34,py35,py36}-requests{208,209,210,211,212,213,219}
    kombu_contrib-{py27,py34,py35,py36}-kombu{40,41,42}
# python 3.6 requests + gevent regression test
# DEV: This is a known issue for gevent 1.1, suggestion is to upgrade to gevent > 1.2
#      https://github.com/gevent/gevent/issues/903
    requests_gevent_contrib-{py36}-requests{208,209,210,211,212,213,219}-gevent{12,13}
    sqlalchemy_contrib-{py27,py34,py35,py36}-sqlalchemy{10,11,12}-psycopg2{27}-mysqlconnector{21}
    sqlite3_contrib-{py27,py34,py35,py36}-sqlite3
    tornado_contrib-{py27,py34,py35,py36}-tornado{40,41,42,43,44,45}
    tornado_contrib-{py27}-tornado{40,41,42,43,44,45}-futures{30,31,32}
    vertica_contrib-{py27,py34,py35,py36}-vertica{060,070}
# Opentracer
    {py27,py34,py35,py36}-opentracer
    {py34,py35,py36}-opentracer_asyncio
    {py34,py35,py36}-opentracer_tornado-tornado{40,41,42,43,44}
    {py27}-opentracer_gevent-gevent{10}
    {py27,py34,py35,py36}-opentracer_gevent-gevent{11,12}
# Unit tests: pytest based test suite that do not require any additional dependency
    unit_tests-{py27,py34,py35,py36}

[testenv]
basepython =
    py27: python2.7
    py34: python3.4
    py35: python3.5
    py36: python3.6

deps =
# Avoid installing wrapt and msgpack-python, our only packages declared, dependencies, when we are testing the real
# distribution build.
    !ddtracerun: wrapt
    !msgpack03-!msgpack04-!msgpack05-!ddtracerun: msgpack-python
    pytest>=3.0.0,<4.0.0
    opentracing
# test dependencies installed in all envs
    mock
    nose
# force the downgrade as a workaround
# https://github.com/aio-libs/aiohttp/issues/2662
    yarl: yarl==0.18.0
    yarl10: yarl>=1.0,<1.1
# integrations
    aiobotocore04: aiobotocore>=0.4,<0.5
    aiobotocore03: aiobotocore>=0.3,<0.4
    aiobotocore02: aiobotocore>=0.2,<0.3
    aiobotocore{02,03,04}-{py34}: typing
    aiopg012: aiopg>=0.12,<0.13
    aiopg015: aiopg>=0.15,<0.16
    aiopg: sqlalchemy
    aiohttp12: aiohttp>=1.2,<1.3
    aiohttp13: aiohttp>=1.3,<1.4
    aiohttp20: aiohttp>=2.0,<2.1
    aiohttp21: aiohttp>=2.1,<2.2
    aiohttp22: aiohttp>=2.2,<2.3
    aiohttp23: aiohttp>=2.3,<2.4
    aiohttp_jinja012: aiohttp_jinja2>=0.12,<0.13
    aiohttp_jinja013: aiohttp_jinja2>=0.13,<0.14
    aiohttp_jinja015: aiohttp_jinja2>=0.15,<0.16
    blinker: blinker
    boto: boto
    boto: moto<1.0
    botocore: botocore
    botocore: moto>=1.0,<2
    bottle11: bottle>=0.11,<0.12
    bottle12: bottle>=0.12,<0.13
    cassandra35: cassandra-driver>=3.5,<3.6
    cassandra36: cassandra-driver>=3.6,<3.7
    cassandra37: cassandra-driver>=3.7,<3.8
    cassandra38: cassandra-driver>=3.8,<3.9
    cassandra315: cassandra-driver>=3.15,<3.16
    celery31: celery>=3.1,<3.2
    celery40: celery>=4.0,<4.1
    celery41: celery>=4.1,<4.2
    celery42: celery>=4.2,<4.3
    ddtracerun: redis
    django18: django>=1.8,<1.9
    django111: django>=1.11,<1.12
    django200: django>=2.0,<2.1
    djangopylibmc06: django-pylibmc>=0.6,<0.7
    djangoredis45: django-redis>=4.5,<4.6
    djangorestframework34: djangorestframework>=3.4,<3.5
    djangorestframework37: djangorestframework>=3.7,<3.8
    djangorestframework38: djangorestframework>=3.8,<3.9
    elasticsearch16: elasticsearch>=1.6,<1.7
    elasticsearch17: elasticsearch>=1.7,<1.8
    elasticsearch18: elasticsearch>=1.8,<1.9
    elasticsearch23: elasticsearch>=2.3,<2.4
    elasticsearch24: elasticsearch>=2.4,<2.5
    elasticsearch51: elasticsearch>=5.1,<5.2
    elasticsearch52: elasticsearch>=5.2,<5.3
    elasticsearch53: elasticsearch>=5.3,<5.4
    elasticsearch54: elasticsearch>=5.4,<5.5
    elasticsearch63: elasticsearch>=6.3,<6.4
    # elasticsearch1 package
    elasticsearch1100: elasticsearch1>=1.10.0,<1.11.0
    # elasticsearch2 package
    elasticsearch250: elasticsearch2>=2.5.0,<2.6.0
    # elasticsearch5 package
    elasticsearch550: elasticsearch5>=5.5.0,<5.6.0
    falcon10: falcon>=1.0,<1.1
    falcon11: falcon>=1.1,<1.2
    falcon12: falcon>=1.2,<1.3
    falcon13: falcon>=1.3,<1.4
    falcon14: falcon>=1.4,<1.5
    flask09: flask>=0.9,<0.10
    flask010: flask>=0.10,<0.11
    flask011: flask>=0.11,<0.12
    flask012: flask>=0.12,<0.13
    flask10: flask>=1.0,<1.1
    flaskcache012: flask_cache>=0.12,<0.13
    flaskcache013: flask_cache>=0.13,<0.14
    futures: futures
    futures30: futures>=3.0,<3.1
    futures31: futures>=3.1,<3.2
    futures32: futures>=3.2,<3.3
    gevent10: gevent>=1.0,<1.1
    gevent11: gevent>=1.1,<1.2
    gevent12: gevent>=1.2,<1.3
    gevent13: gevent>=1.3,<1.4
    grpc: grpcio>=1.8.0
    grpc: googleapis-common-protos
    jinja27: jinja2>=2.7,<2.8
    jinja28: jinja2>=2.8,<2.9
    jinja29: jinja2>=2.9,<2.10
    jinja210: jinja2>=2.10,<2.11
    mako100: mako>=1.0.0,<1.1.0
    mako010: mako>=0.1.0,<1.0.0
    memcached: python-memcached
    molten070: molten>=0.7.0,<0.7.2
    molten072: molten>=0.7.2,<0.8.0
    mongoengine015: mongoengine>=0.15<0.16
    msgpack03: msgpack-python>=0.3,<0.4
    msgpack04: msgpack-python>=0.4,<0.5
    msgpack05: msgpack-python>=0.5,<0.6
    mysqlconnector21: mysql-connector>=2.1,<2.2
    mysqldb12: mysql-python>=1.2,<1.3
    mysqlclient13: mysqlclient>=1.3,<1.4
# webob is required for Pylons < 1.0
    pylons096: pylons>=0.9.6,<0.9.7
    pylons096: webob<1.1
    pylons097: pylons>=0.9.7,<0.9.8
    pylons097: webob<1.1
    pylons010: pylons>=0.10,<0.11
    pylons010: webob<1.1
    pylons10: pylons>=1.0,<1.1
    pylibmc: pylibmc
    pylibmc140: pylibmc>=1.4.0,<1.5.0
    pylibmc150: pylibmc>=1.5.0,<1.6.0
    pymemcache130: pymemcache>=1.3.0,<1.4.0
    pymemcache140: pymemcache>=1.4.0,<1.5.0
    pymongo30: pymongo>=3.0,<3.1
    pymongo31: pymongo>=3.1,<3.2
    pymongo32: pymongo>=3.2,<3.3
    pymongo33: pymongo>=3.3,<3.4
    pymongo34: pymongo>=3.4,<3.5
    pymongo36: pymongo>=3.6,<3.7
    pymysql07: pymysql>=0.7,<0.8
    pymysql08: pymysql>=0.8,<0.9
    pymysql09: pymysql>=0.9,<0.10
    pyramid17: pyramid>=1.7,<1.8
    pyramid18: pyramid>=1.8,<1.9
    pyramid19: pyramid>=1.9,<1.10
    psycopg224: psycopg2>=2.4,<2.5
    psycopg225: psycopg2>=2.5,<2.6
    psycopg226: psycopg2>=2.6,<2.7
    psycopg227: psycopg2>=2.7,<2.8
    redis26: redis>=2.6,<2.7
    redis27: redis>=2.7,<2.8
    redis28: redis>=2.8,<2.9
    redis29: redis>=2.9,<2.10
    redis210: redis>=2.10,<2.11
    redis300: redis>=3.0.0,<3.1.0
    rediscluster135: redis-py-cluster>=1.3.5,<1.3.6
    rediscluster136: redis-py-cluster>=1.3.6,<1.3.7
    kombu42:  kombu>=4.2,<4.3
    kombu41:  kombu>=4.1,<4.2
    kombu40:  kombu>=4.0,<4.1
    requests200: requests>=2.0,<2.1
    requests200: requests-mock>=1.3
    requests208: requests>=2.8,<2.9
    requests208: requests-mock>=1.3
    requests209: requests>=2.9,<2.10
    requests209: requests-mock>=1.3
    requests210: requests>=2.10,<2.11
    requests210: requests-mock>=1.3
    requests211: requests>=2.11,<2.12
    requests211: requests-mock>=1.3
    requests212: requests>=2.12,<2.13
    requests212: requests-mock>=1.3
    requests213: requests>=2.13,<2.14
    requests213: requests-mock>=1.3
    requests218: requests>=2.18,<2.19
    requests218: requests-mock>=1.4
    requests219: requests>=2.19,<2.20
    requests219: requests-mock>=1.4
    sqlalchemy10: sqlalchemy>=1.0,<1.1
    sqlalchemy11: sqlalchemy>=1.1,<1.2
    sqlalchemy12: sqlalchemy>=1.2,<1.3
    tornado40: tornado>=4.0,<4.1
    tornado41: tornado>=4.1,<4.2
    tornado42: tornado>=4.2,<4.3
    tornado43: tornado>=4.3,<4.4
    tornado44: tornado>=4.4,<4.5
    tornado45: tornado>=4.5,<4.6
    vertica060: vertica-python>=0.6.0,<0.7.0
    vertica070: vertica-python>=0.7.0,<0.8.0
    webtest: WebTest

# pass along test env variables
passenv=TEST_*

commands =
# run only essential tests related to the tracing client
    tracer: pytest {posargs} --ignore="tests/contrib" --ignore="tests/integration" --ignore="tests/commands" --ignore="tests/opentracer" --ignore="tests/unit" tests
# run only the opentrace tests
    opentracer: pytest {posargs} tests/opentracer/test_tracer.py tests/opentracer/test_span.py tests/opentracer/test_span_context.py tests/opentracer/test_dd_compatibility.py tests/opentracer/test_utils.py
    opentracer_asyncio: pytest {posargs} tests/opentracer/test_tracer_asyncio.py
    opentracer_tornado-tornado{40,41,42,43,44}: pytest {posargs} tests/opentracer/test_tracer_tornado.py
    opentracer_gevent: pytest {posargs} tests/opentracer/test_tracer_gevent.py
# integration tests
    integration: pytest {posargs} tests/test_integration.py
# Contribs
    aiobotocore_contrib-{py34,py35,py36}: pytest {posargs} tests/contrib/aiobotocore
    aiopg_contrib-{py34,py35,py36}: pytest {posargs} tests/contrib/aiopg
    aiohttp_contrib: pytest {posargs} tests/contrib/aiohttp
    asyncio_contrib: pytest {posargs} tests/contrib/asyncio
    boto_contrib: pytest {posargs} tests/contrib/boto
    botocore_contrib: pytest {posargs} tests/contrib/botocore
    bottle_contrib: pytest {posargs} --ignore="tests/contrib/bottle/test_autopatch.py" tests/contrib/bottle/
    bottle_contrib_autopatch: python tests/ddtrace_run.py pytest {posargs} tests/contrib/bottle/test_autopatch.py
    cassandra_contrib: nosetests {posargs} tests/contrib/cassandra
    celery_contrib: pytest {posargs} tests/contrib/celery
    dbapi_contrib: pytest {posargs} tests/contrib/dbapi
    django_contrib: python tests/contrib/django/runtests.py {posargs}
    django_contrib_autopatch: python tests/ddtrace_run.py python tests/contrib/django/runtests.py {posargs}
    django_drf_contrib: python tests/contrib/djangorestframework/runtests.py {posargs}
    elasticsearch_contrib: pytest {posargs} tests/contrib/elasticsearch
    falcon_contrib: pytest {posargs} tests/contrib/falcon/test_middleware.py tests/contrib/falcon/test_distributed_tracing.py
    falcon_contrib_autopatch: python tests/ddtrace_run.py pytest {posargs} tests/contrib/falcon/test_autopatch.py
    flask_contrib: pytest {posargs} tests/contrib/flask
    flask_contrib_autopatch: python tests/ddtrace_run.py pytest {posargs} tests/contrib/flask_autopatch
    flask_cache_contrib: pytest {posargs} tests/contrib/flask_cache
    futures_contrib: pytest {posargs} tests/contrib/futures
    gevent_contrib: pytest {posargs} tests/contrib/gevent
    grpc_contrib: pytest {posargs} tests/contrib/grpc
    httplib_contrib: pytest {posargs} tests/contrib/httplib
    jinja2_contrib: pytest {posargs} tests/contrib/jinja2
    mako_contrib: pytest {posargs} tests/contrib/mako
    molten_contrib: pytest {posargs} tests/contrib/molten
    mongoengine_contrib: nosetests {posargs} tests/contrib/mongoengine
    msgpack_contrib: pytest {posargs} tests/test_encoders.py
    mysql_contrib: nosetests {posargs} tests/contrib/mysql
    mysqldb_contrib: nosetests {posargs} tests/contrib/mysqldb
    psycopg_contrib: pytest {posargs} tests/contrib/psycopg
    pylibmc_contrib: nosetests {posargs} tests/contrib/pylibmc
    pylons_contrib: pytest {posargs} tests/contrib/pylons
    pymemcache_contrib: pytest {posargs} --ignore="tests/contrib/pymemcache/autopatch" tests/contrib/pymemcache/
    pymemcache_contrib_autopatch: python tests/ddtrace_run.py pytest {posargs} tests/contrib/pymemcache/autopatch/
    pymongo_contrib: nosetests {posargs} tests/contrib/pymongo
    pymysql_contrib: pytest {posargs} tests/contrib/pymysql
    pyramid_contrib: nosetests {posargs} tests/contrib/pyramid/test_pyramid.py
    pyramid_contrib_autopatch: python tests/ddtrace_run.py nosetests {posargs} tests/contrib/pyramid/test_pyramid_autopatch.py
    redis_contrib: nosetests {posargs} tests/contrib/redis
    rediscluster_contrib: nosetests {posargs} tests/contrib/rediscluster
    requests_contrib: pytest {posargs} tests/contrib/requests
    requests_gevent_contrib: nosetests {posargs} tests/contrib/requests_gevent
    kombu_contrib: nosetests {posargs} tests/contrib/kombu
    sqlalchemy_contrib: pytest {posargs} tests/contrib/sqlalchemy
    sqlite3_contrib: nosetests {posargs} tests/contrib/sqlite3
    tornado_contrib: pytest {posargs} tests/contrib/tornado
    vertica_contrib: pytest {posargs} tests/contrib/vertica/
# run subsets of the tests for particular library versions
    ddtracerun: pytest {posargs} tests/commands/test_runner.py
    test_utils: pytest {posargs} tests/contrib/test_utils.py
    test_logging: pytest {posargs} tests/contrib/logging/
# Unit tests: pytest based test suite that do not require any additional dependency.
    unit_tests: pytest {posargs} tests/unit

setenv =
    DJANGO_SETTINGS_MODULE = app.settings

[testenv:wait]
commands=python tests/wait-for-services.py {posargs}
basepython=python
deps=
    cassandra-driver
    psycopg2
    mysql-connector>=2.1,<2.2
    redis-py-cluster>=1.3.6,<1.4.0
    vertica-python>=0.6.0,<0.7.0
    kombu>=4.2.0,<4.3.0


# this is somewhat flaky (can fail and still be up) so try the tests anyway
ignore_outcome=true

[testenv:flake8]
deps=flake8==3.5.0
commands=flake8 .
basepython=python2

[falcon_autopatch]
setenv =
    DATADOG_SERVICE_NAME=my-falcon
[testenv:falcon_contrib_autopatch-py27-falcon10]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py27-falcon11]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py27-falcon12]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py27-falcon13]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py27-falcon14]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py34-falcon10]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py34-falcon11]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py34-falcon12]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py34-falcon13]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py34-falcon14]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py35-falcon10]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py35-falcon11]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py35-falcon12]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py35-falcon13]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py35-falcon14]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py36-falcon10]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py36-falcon11]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py36-falcon12]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py36-falcon13]
setenv =
    {[falcon_autopatch]setenv}
[testenv:falcon_contrib_autopatch-py36-falcon14]
setenv =
    {[falcon_autopatch]setenv}


[pyramid_autopatch]
setenv =
    DATADOG_SERVICE_NAME = foobar
    DATADOG_PYRAMID_DISTRIBUTED_TRACING = True
[testenv:pyramid_contrib_autopatch-py27-pyramid17-webtest]
setenv =
    {[pyramid_autopatch]setenv}

[testenv:pyramid_contrib_autopatch-py27-pyramid18-webtest]
setenv =
    {[pyramid_autopatch]setenv}
[testenv:pyramid_contrib_autopatch-py27-pyramid19-webtest]
setenv =
    {[pyramid_autopatch]setenv}
[testenv:pyramid_contrib_autopatch-py34-pyramid17-webtest]
setenv =
    {[pyramid_autopatch]setenv}
[testenv:pyramid_contrib_autopatch-py34-pyramid18-webtest]
setenv =
    {[pyramid_autopatch]setenv}
[testenv:pyramid_contrib_autopatch-py34-pyramid19-webtest]
setenv =
    {[pyramid_autopatch]setenv}
[testenv:pyramid_contrib_autopatch-py35-pyramid17-webtest]
setenv =
    {[pyramid_autopatch]setenv}
[testenv:pyramid_contrib_autopatch-py35-pyramid18-webtest]
setenv =
    {[pyramid_autopatch]setenv}
[testenv:pyramid_contrib_autopatch-py35-pyramid19-webtest]
setenv =
    {[pyramid_autopatch]setenv}
[testenv:pyramid_contrib_autopatch-py36-pyramid17-webtest]
setenv =
    {[pyramid_autopatch]setenv}
[testenv:pyramid_contrib_autopatch-py36-pyramid18-webtest]
setenv =
    {[pyramid_autopatch]setenv}
[testenv:pyramid_contrib_autopatch-py36-pyramid19-webtest]
setenv =
    {[pyramid_autopatch]setenv}


[flask_autopatch]
setenv =
    DATADOG_SERVICE_NAME = test.flask.service
    DATADOG_PATCH_MODULES = jinja2:false
[testenv:flask_contrib_autopatch-py27-flask010-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py27-flask011-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py27-flask012-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py27-flask10-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py34-flask010-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py34-flask011-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py34-flask012-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py34-flask10-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py35-flask010-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py35-flask011-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py35-flask012-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py35-flask10-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py36-flask010-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py36-flask011-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py36-flask012-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py36-flask10-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py27-flask010-flaskcache013-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py27-flask011-flaskcache013-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py27-flask012-flaskcache013-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py34-flask010-flaskcache013-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py34-flask011-flaskcache013-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py34-flask012-flaskcache013-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py35-flask010-flaskcache013-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py35-flask011-flaskcache013-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py35-flask012-flaskcache013-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py36-flask010-flaskcache013-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py36-flask011-flaskcache013-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py36-flask012-flaskcache013-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py27-flask010-flaskcache012-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}
[testenv:flask_contrib_autopatch-py27-flask011-flaskcache012-memcached-redis210-blinker]
setenv =
    {[flask_autopatch]setenv}


[bottle_autopatch]
setenv =
    DATADOG_SERVICE_NAME = bottle-app
[testenv:bottle_contrib_autopatch-py27-bottle11-webtest]
setenv =
    {[bottle_autopatch]setenv}
[testenv:bottle_contrib_autopatch-py34-bottle11-webtest]
setenv =
    {[bottle_autopatch]setenv}
[testenv:bottle_contrib_autopatch-py35-bottle11-webtest]
setenv =
    {[bottle_autopatch]setenv}
[testenv:bottle_contrib_autopatch-py36-bottle11-webtest]
setenv =
    {[bottle_autopatch]setenv}
[testenv:bottle_contrib_autopatch-py27-bottle12-webtest]
setenv =
    {[bottle_autopatch]setenv}
[testenv:bottle_contrib_autopatch-py34-bottle12-webtest]
setenv =
    {[bottle_autopatch]setenv}
[testenv:bottle_contrib_autopatch-py35-bottle12-webtest]
setenv =
    {[bottle_autopatch]setenv}
[testenv:bottle_contrib_autopatch-py36-bottle12-webtest]
setenv =
    {[bottle_autopatch]setenv}


# DEV: We use `conftest.py` as a local pytest plugin to configure hooks for collection
[pytest]
# Common directories to ignore
addopts = --ignore "tests/utils" --ignore "tests/base"
# DEV: The default is `test_*\.py` which will miss `test.py` files
python_files = test*\.py

[flake8]
max-line-length=120
exclude=
  .ddtox,.tox,
  .git,__pycache__,
  .eggs,*.egg
