# the tox file specifies a way of running our test suite
# against different combinations of libraries and python
# versions.

[tox]
# Our various test environments. The py*-all tasks will run the core
# library tests and all contrib tests with the latest library versions.
# The others will test specific versions of libraries.
#
# FIXME[gabin]:
# If the env name is longer than 128 characters (linux kernel limit specified
# in "master/include/linux/binfmts.h"), we'll get a "bad interpreter: No such file or directory" error.
#
#See linux kernel limitation:
# - https://github.com/torvalds/linux/blob/master/include/linux/binfmts.h#L12
#
#See related github topic:
# - https://github.com/pypa/virtualenv/issues/596
envlist =
    flake8
    black
    wait
    {py27,py35,py36,py37,py38}-tracer
    {py27,py35,py36,py37,py38,py39}-profile{,-gevent}
    {py27,py35,py36,py37,py38,py39}-profile-minreqs{,-gevent}
    {py27,py35,py36,py37,py38}-integration
    py{27,35,36,37,38}-vendor
    {py27,py35,py36,py37,py38}-ddtracerun
    {py27,py35,py36,py37,py38}-test_logging
# Integrations environments
    # aiobotocore dropped Python 3.5 support in 0.12
    aiobotocore_contrib-{py35}-aiobotocore{02,03,04,05,07,08,09,010,011}
    aiobotocore_contrib-{py36}-aiobotocore{02,03,04,05,07,08,09,010,011,012}
    # aiobotocore 0.2 and 0.4 do not work because they use async as a reserved keyword
    aiobotocore_contrib-py{37,38}-aiobotocore{03,05,07,08,09,010,011,012}
    # Python 3.7 needs at least aiohttp 2.3
    aiohttp_contrib-{py35,py36}-aiohttp{12,13,20,21,22}-aiohttp_jinja{012,013}-yarl
    aiohttp_contrib-{py35,py36,py37,py38}-aiohttp23-aiohttp_jinja015-yarl10
    aiohttp_contrib-{py35,py36,py37}-aiohttp{30,31,32,33,35,36}-aiohttp_jinja{015}-yarl10
    aiohttp_contrib-py38-aiohttp{30,31,32,33,36}-aiohttp_jinja015-yarl10
    aiopg_contrib-{py35,py36}-aiopg{012,015}
    aiopg_contrib-py{37,38}-aiopg015
    algoliasearch_contrib-py{27,35,36,37,38}-algoliasearch{1,2,}
    asgi_contrib-{py36,py37,py38}-asgiref{min,}
    asyncio_contrib-{py35,py36,py37,py38}
# boto needs moto<1 and moto<1 does not support Python >= 3.7
    boto_contrib-{py27,py35,py36}-boto
    botocore_contrib-{py27,py35,py36,py37,py38}-botocore
    bottle_contrib{,_autopatch}-py{27,35,36,37,38}-bottle{11,12,}-webtest
    cassandra_contrib-{py27,py35,py36,py37,py38}-cassandra{35,36,37,38,315}
# Non-4.x celery should be able to use the older redis lib, since it locks to an older kombu
    celery_contrib-py{27,35,36}-celery31-redis210
# 4.x celery bumps kombu to 4.4+, which requires redis 3.2 or later, this tests against
# older redis with an older kombu, and newer kombu/newer redis.
# https://github.com/celery/kombu/blob/3e60e6503a77b9b1a987cf7954659929abac9bac/Changelog#L35
    celery_contrib-py{27,35,36}-celery{40,41}-{redis210-kombu43,redis32-kombu44}
# Celery 4.2 is now limited to Kombu 4.3
# https://github.com/celery/celery/commit/1571d414461f01ae55be63a03e2adaa94dbcb15d
    celery_contrib-py{27,35,36}-celery42-redis210-kombu43
# Celery 4.3 wants Kombu >= 4.4 and Redis >= 3.2
# Python 3.7 needs Celery 4.3
    celery_contrib-py{27,35,36,37,38}-celery43-redis32-kombu44
    consul_contrib-py{27,35,36,37,38}-consul{07,10,11,}
    dbapi_contrib-py{27,35,36,37,38}
# Django  Python version support
# 1.11  2.7, 3.4, 3.5, 3.6, 3.7 (added in 1.11.17)
# 2.0   3.4, 3.5, 3.6, 3.7
# 2.1   3.5, 3.6, 3.7
# 2.2   3.5, 3.6, 3.7, 3.8 (added in 2.2.8)
# 3.0   3.6, 3.7, 3.8
# 3.1   3.6, 3.7, 3.8
# Source: https://docs.djangoproject.com/en/dev/faq/install/#what-python-version-can-i-use-with-django
    django_contrib{,_migration}-py{27,35,36}-django{18,111}-djangopylibmc06-djangoredis45-pylibmc-redis{210}-memcached-test_django
    django_contrib{,_migration}-py35-django{20,21,22}-djangopylibmc06-djangoredis45-pylibmc-redis{210}-memcached-test_django
    django_contrib{,_migration}-py{36,37,38}-django{20,21,22,30,}-djangopylibmc06-djangoredis45-pylibmc-redis{210}-memcached-test_django
    django_drf_contrib-py{27,35,36}-django{111}-djangorestframework{34,37}-test_django
    django_drf_contrib-py35-django{22}-djangorestframework{38,310,}-test_django
    django_drf_contrib-py{36,37}-django{22}-djangorestframework{38,310,}-test_django
    django_drf_contrib-py{36,37,38}-django30-djangorestframework310-test_django
    django_drf_contrib-py{36,37,38}-django-djangorestframework311-test_django
    dogpile_contrib-py{27,35}-dogpilecache{06,07,08,09}
    dogpile_contrib-py{36,37,38}-dogpilecache{06,07,08,09,10,}
    elasticsearch_contrib-{py27,py35,py36}-elasticsearch{16,17,18,23,24,51,52,53,54,63,64}
    elasticsearch_contrib-{py27,py35,py36}-elasticsearch1{100}
    elasticsearch_contrib-{py27,py35,py36}-elasticsearch2{50}
    elasticsearch_contrib-{py27,py35,py36}-elasticsearch5{50}
    elasticsearch_contrib-{py27,py35,py36}-elasticsearch6{40}
    falcon_contrib{,_autopatch}-{py27,py35,py36,py37}-falcon{10,11,12,13,14}
    falcon_contrib{,_autopatch}-{py35,py36,py37}-falcon{20}
    flask_contrib{,_autopatch}-{py27,py35,py36}-flask{010,011,012,10}-blinker
# Flask <=0.9 does not support Python 3
    flask_contrib{,_autopatch}-{py27}-flask{09}-blinker
    flask_cache_contrib{,_autopatch}-{py27,py35,py36,py37,py38}-flask{010,011,012}-flaskcache{013}-memcached-redis{210}-blinker
    flask_cache_contrib{,_autopatch}-{py27}-flask{010,011}-flaskcache{012}-memcached-redis{210}-blinker
    futures_contrib-py27-futures{30,31,32,}
    futures_contrib-py{35,36,37,38}
    gevent_contrib-py27-gevent{11,12,13}-sslmodules
    gevent_contrib-py{35,36}-gevent{11,12,13}-sslmodules3-sslmodules
    gevent_contrib-py{37,38}-gevent{13,14}-sslmodules3-sslmodules
# gevent 1.0 is not python 3 compatible
    gevent_contrib-py27-gevent10-sslmodules
# use grpcio versions with bdist_wheel packages for python versions
# py27,py35,py36: grpcio>=1.13.0
# py37: grpcio>=1.13.0
# py38: grpcio>=1.24.3
    grpc_contrib-py{27,35,36}-grpc{112,114,118,120,121,122}-googleapis-common-protos
    grpc_contrib-py{37}-grpc{114,118,120,121,122,124,126,128,}-googleapis-common-protos
    grpc_contrib-py{38}-grpc{124,126,128,}-googleapis-common-protos
    httplib_contrib-py{27,35,36,37,38}
    jinja2_contrib-py{27,35,36,37,38}-jinja{27,28,29,210,211,}
    kombu_contrib-py{27,35,36}-kombu{40,41,42,43,44,45,46,}
# Kombu >= 4.2 only supports Python 3.7+
    kombu_contrib-py{37,38}-kombu{42,43,44,45,46,}
    mako_contrib-py{27,35,36,37,38}-mako{010,100,110,}
    molten_contrib-py{36,37,38}-molten{06,07,10,}
    mongoengine_contrib-py{27,35,36,37,38}-mongoengine{015,016,017,018,}-pymongo
    mysql_contrib-py{27,35,36,37,38}-mysqlconnector{80,}
    mysqldb_contrib-py27-mysqldb{12,}
    mysqldb_contrib-py{27,35,36,37,38}-mysqlclient{13,14,}
    psycopg_contrib-py{27,35,36}-psycopg2{24,25,26,27,28}
    psycopg_contrib-py37-psycopg2{27,28}
# psycopg <2.7 doesn't support Python 3.8: https://github.com/psycopg/psycopg2/issues/854
    psycopg_contrib-py{38}-psycopg2{28}
    pylibmc_contrib-py{27,35,36,37,38}-pylibmc{140,150,}
    pylons_contrib-py27-pylons{096,097,010,10,}
    pymemcache_contrib{,_autopatch}-{py27,py35,py36,py37,py38}-pymemcache{130,140}
    pymongo_contrib-py{27,35,36,37}-pymongo{30,31,32,33,34,35,36,37,38,39,310,}-mongoengine
# pymongo does not yet support Python 3.8: https://github.com/pymssql/pymssql/issues/586
# but these tests still work.
    pymongo_contrib-py38-pymongo{30,31,32,33,35,36,37,38,39,310,}-mongoengine
    pymysql_contrib-py{27,35,36,37,38}-pymysql{07,08,09,}
    pynamodb_contrib-{py27,py35,py36,py37,py38}-pynamodb{40,41,42,43,}-moto1
    pyramid_contrib{,_autopatch}-py{27,35,36,37,38}-pyramid{17,18,19,110,}-webtest
    redis_contrib-py{27,35,36,37,38}-redis{210,30,32,33,34,35,}
    rediscluster_contrib-py{27,35,36,37,38}-rediscluster{135,136,200,}-redis210
    requests_contrib{,_autopatch}-{py27,py35,py36,py37,py38}-requests{208,209,210,211,212,213,219}
# python 3.6 requests + gevent regression test
# DEV: This is a known issue for gevent 1.1, suggestion is to upgrade to gevent > 1.2
#      https://github.com/gevent/gevent/issues/903
    requests_gevent_contrib-{py36}-requests{208,209,210,211,212,213,219}-gevent{12,13}
    requests_gevent_contrib-py{37,38}-requests{208,209,210,211,212,213,219}-gevent13
    sanic_contrib-py{36,37,38}-sanic
    sqlalchemy_contrib-py{27,35,36,37,38}-sqlalchemy{10,11,12,13,}-psycopg228-mysqlconnector
    sqlite3_contrib-{py27,py35,py36,py37,py38}-sqlite3
    tornado_contrib-py{27,35,36,37,38}-tornado{44,45}
    tornado_contrib-py{37,38}-tornado{50,51,60,}
    tornado_contrib-py27-tornado{44,45}-futures{30,31,32,}
    vertica_contrib-{py27,py35,py36,py37,py38}-vertica{060,070}
# Opentracer
    {py27,py35,py36,py37,py38}-opentracer
    {py35,py36,py37,py38}-opentracer_asyncio
    py{35,36,37,38}-opentracer_tornado-tornado{44,45,50,60,}
    {py27}-opentracer_gevent-gevent{10}
    {py27,py35,py36}-opentracer_gevent-gevent{11,12}
    py{37,38}-opentracer_gevent-gevent{13,14}
    benchmarks-{py27,py35,py36,py37,py38}

isolated_build = true

[testenv]
# Always re-run `setup.py develop` to ensure the proper C-extension .so files are created
# DEV: If we don't do this sometimes CircleCI gets messed up and only has the py27 .so
#      meaning running on py3.x will fail
#      https://stackoverflow.com/questions/57459123/why-do-i-need-to-run-tox-twice-to-test-a-python-package-with-c-extension
whitelist_externals=rm
commands_pre={envpython} {toxinidir}/setup.py develop
usedevelop =
  # do not use develop mode with celery as running multiple python versions within
  # same job will cause problem for tests that use ddtrace-run
  celery_contrib: False
  !celery_contrib: True

setenv =
    profile-gevent: DD_PROFILE_TEST_GEVENT=1
    # DEV: envs to test migration of django instrumentation to ddtrace config api
    django_contrib_migration: TEST_DATADOG_DJANGO_MIGRATION=1
    bottle_contrib_autopatch: DATADOG_SERVICE_NAME=bottle-app
    flask_contrib_autopatch: DATADOG_SERVICE_NAME=test.flask.service
    flask_contrib_autopatch: DATADOG_PATCH_MODULES=jinja2:false
    pyramid_contrib_autopatch: DATADOG_SERVICE_NAME=foobar
    pyramid_contrib_autopatch: DATADOG_PYRAMID_DISTRIBUTED_TRACING=True
    falcon_contrib_autopatch: DATADOG_SERVICE_NAME=my-falcon

extras =
  profile: profiling

deps =
    cython
# use pytest >= 3 for all but celery versions
    !celery40-!celery41-!celery42: pytest>=3
    celery40,celery41,celery42: pytest>=3,<4
    pytest-mock
    opentracing
# test dependencies installed in all envs
    mock
# used to test our custom msgpack encoder
    tracer: msgpack
    integration: msgpack
    benchmarks: pytest-benchmark
    profile: pytest-benchmark
    profile-minreqs: protobuf==3.0.0
    profile-minreqs: tenacity==5.0.1
    profile-!minreqs-gevent: gevent
    py27-profile-minreqs-gevent: gevent==1.1.0
    py{35,36,37,38}-profile-minreqs-gevent: gevent==1.4.0
    py39-profile-minreqs-gevent: gevent==20.6.0
# force the downgrade as a workaround
# https://github.com/aio-libs/aiohttp/issues/2662
    yarl: yarl==0.18.0
    yarl10: yarl>=1.0,<1.1
# backports
    py27: enum34
# integrations
    # aiobotocore: aiobotocore>=1.0 not yet supported
    aiobotocore012: aiobotocore>=0.12,<0.13
    aiobotocore011: aiobotocore>=0.11,<0.12
    aiobotocore010: aiobotocore>=0.10,<0.11
    aiobotocore09: aiobotocore>=0.9,<0.10
    aiobotocore08: aiobotocore>=0.8,<0.9
    aiobotocore07: aiobotocore>=0.7,<0.8
    # aiobotocore06 does not work
    aiobotocore05: aiobotocore>=0.5,<0.6
    aiobotocore04: aiobotocore>=0.4,<0.5
    aiobotocore03: aiobotocore>=0.3,<0.4
    aiobotocore02: aiobotocore>=0.2,<0.3
    aiobotocore02: multidict==4.5.2
    aiopg012: aiopg>=0.12,<0.13
    aiopg015: aiopg>=0.15,<0.16
    aiopg: sqlalchemy
    aiohttp12: aiohttp>=1.2,<1.3
    aiohttp13: aiohttp>=1.3,<1.4
    aiohttp20: aiohttp>=2.0,<2.1
    aiohttp21: aiohttp>=2.1,<2.2
    aiohttp22: aiohttp>=2.2,<2.3
    aiohttp23: aiohttp>=2.3,<2.4
    aiohttp30: aiohttp>=3.0,<3.1
    aiohttp31: aiohttp>=3.1,<3.2
    aiohttp32: aiohttp>=3.2,<3.3
    aiohttp33: aiohttp>=3.3,<3.4
    aiohttp34: aiohttp>=3.4,<3.5
    aiohttp35: aiohttp>=3.5,<3.6
    aiohttp36: aiohttp>=3.6,<3.7
    aiohttp_jinja012: aiohttp_jinja2>=0.12,<0.13
    aiohttp_jinja013: aiohttp_jinja2>=0.13,<0.14
    aiohttp_jinja015: aiohttp_jinja2>=0.15,<0.16
    algoliasearch: algoliasearch
    algoliasearch1: algoliasearch>=1.2,<2
    algoliasearch2: algoliasearch>=2,<3
    asgirefmin: asgiref~=3.0.0
    asgiref: asgiref~=3.0
    asgi_contrib: pytest-asyncio
    asgi_contrib: httpx
    blinker: blinker
    boto: boto
    boto: moto<1.0
    botocore: botocore
    botocore: moto>=1.0,<2
    bottle: bottle
    bottle11: bottle>=0.11,<0.12
    bottle12: bottle>=0.12,<0.13
    cassandra35: cassandra-driver>=3.5,<3.6
    cassandra36: cassandra-driver>=3.6,<3.7
    cassandra37: cassandra-driver>=3.7,<3.8
    cassandra38: cassandra-driver>=3.8,<3.9
    cassandra315: cassandra-driver>=3.15,<3.16
    celery31: celery>=3.1,<3.2
    celery40: celery>=4.0,<4.1
    celery41: celery>=4.1,<4.2
    celery42: celery>=4.2,<4.3
    celery43: celery>=4.3,<4.4
    celery43: vine==1.3
    consul: python-consul
    consul07: python-consul>=0.7,<1.0
    consul10: python-consul>=1.0,<1.1
    consul11: python-consul>=1.1,<1.2
    ddtracerun: redis
    test_django: pytest-django
    django: django
    django18: django>=1.8,<1.9
    django111: django>=1.11,<1.12
    django20: django>=2.0,<2.1
    django21: django>=2.1,<2.2
    django22: django>=2.2,<2.3
    django30: django>=3.0,<3.1
    djangopylibmc06: django-pylibmc>=0.6,<0.7
    djangoredis45: django-redis>=4.5,<4.6
    djangorestframework: djangorestframework
    djangorestframework34: djangorestframework>=3.4,<3.5
    djangorestframework37: djangorestframework>=3.7,<3.8
    djangorestframework38: djangorestframework>=3.8,<3.9
    djangorestframework39: djangorestframework>=3.9,<3.10
    djangorestframework310: djangorestframework>=3.10,<3.11
    djangorestframework311: djangorestframework>=3.11,<3.12
    dogpilecache: dogpile.cache
    dogpilecache06: dogpile.cache==0.6.*
    dogpilecache07: dogpile.cache==0.7.*
    dogpilecache08: dogpile.cache==0.8.*
    dogpilecache09: dogpile.cache==0.9.*
    dogpilecache10: dogpile.cache==1.0.*
    elasticsearch16: elasticsearch>=1.6,<1.7
    elasticsearch17: elasticsearch>=1.7,<1.8
    elasticsearch18: elasticsearch>=1.8,<1.9
    elasticsearch23: elasticsearch>=2.3,<2.4
    elasticsearch24: elasticsearch>=2.4,<2.5
    elasticsearch51: elasticsearch>=5.1,<5.2
    elasticsearch52: elasticsearch>=5.2,<5.3
    elasticsearch53: elasticsearch>=5.3,<5.4
    elasticsearch54: elasticsearch>=5.4,<5.5
    elasticsearch63: elasticsearch>=6.3,<6.4
    elasticsearch64: elasticsearch>=6.4,<6.5
    # elasticsearch1 package
    elasticsearch1100: elasticsearch1>=1.10.0,<1.11.0
    # elasticsearch2 package
    elasticsearch250: elasticsearch2>=2.5.0,<2.6.0
    # elasticsearch5 package
    elasticsearch550: elasticsearch5>=5.5.0,<5.6.0
    # elasticsearch6 package
    elasticsearch640: elasticsearch6>=6.4.0,<6.5.0
    falcon10: falcon>=1.0,<1.1
    falcon11: falcon>=1.1,<1.2
    falcon12: falcon>=1.2,<1.3
    falcon13: falcon>=1.3,<1.4
    falcon14: falcon>=1.4,<1.5
    falcon20: falcon>=2.0,<2.1
    flask09: flask>=0.9,<0.10
    flask09: Werkzeug<1
    flask010: flask>=0.10,<0.11
    flask010: Werkzeug<1
    flask011: flask>=0.11,<0.12
    flask011: Werkzeug<1
    flask012: flask>=0.12,<0.13
    flask10: flask>=1.0,<1.1
    flaskcache012: flask_cache>=0.12,<0.13
    flaskcache013: flask_cache>=0.13,<0.14
    futures: futures
    futures30: futures>=3.0,<3.1
    futures31: futures>=3.1,<3.2
    futures32: futures>=3.2,<3.3
    gevent10: gevent>=1.0,<1.1
    gevent11: gevent>=1.1,<1.2
    gevent12: gevent>=1.2,<1.3
    gevent13: gevent>=1.3,<1.4
    gevent14: gevent>=1.4,<1.5
    grpc: grpcio
    googleapis-common-protos: googleapis-common-protos
    grpc112: grpcio>=1.12,<1.13
    grpc114: grpcio>=1.14,<1.15
    grpc118: grpcio>=1.18,<1.19
    grpc120: grpcio>=1.20,<1.21
    grpc121: grpcio>=1.21,<1.22
    grpc122: grpcio>=1.22,<1.23
    grpc124: grpcio>=1.24,<1.25
    grpc126: grpcio>=1.26,<1.27
    grpc128: grpcio>=1.28,<1.29
    jinja: jinja2
    jinja27: jinja2>=2.7,<2.8
    jinja28: jinja2>=2.8,<2.9
    jinja29: jinja2>=2.9,<2.10
    jinja210: jinja2>=2.10,<2.11
    jinja211: jinja2>=2.11,<2.12
    kombu: kombu
    kombu40: kombu>=4.0,<4.1
    kombu41: kombu>=4.1,<4.2
    kombu42: kombu>=4.2,<4.3
    kombu43: kombu>=4.3,<4.4
    kombu44: kombu>=4.4,<4.5
    kombu45: kombu>=4.5,<4.6
    kombu46: kombu>=4.6,<4.7
    mako: mako
    mako010: mako>=0.1,<1.0
    mako100: mako>=1.0,<1.1
    mako110: mako>=1.1,<1.2
    memcached: python-memcached
    moto: moto
    moto1: moto>=1,<2
    molten: molten
    molten06: molten>=0.6,<0.7
    molten07: molten>=0.7,<0.8
    molten10: molten>=1.0,<1.1
    mongoengine: mongoengine
    mongoengine015: mongoengine>=0.15<0.16
    mongoengine016: mongoengine>=0.16<0.17
    mongoengine017: mongoengine>=0.17<0.18
    mongoengine018: mongoengine>=0.18<0.19
    mongoengine019: mongoengine>=0.19<0.20
    mysqlconnector: mysql-connector-python
    mysqlconnector80: mysql-connector-python>=8.0<8.1
    mysqldb: mysql-python
    mysqldb12: mysql-python>=1.2,<1.3
    mysqlclient: mysqlclient
    mysqlclient13: mysqlclient>=1.3,<1.4
    mysqlclient14: mysqlclient>=1.4,<1.5
    pylibmc: pylibmc
    pylibmc140: pylibmc>=1.4,<1.5
    pylibmc150: pylibmc>=1.5,<1.6
    pylibmc160: pylibmc>=1.6,<1.7
# webob is required for Pylons < 1.0
    pylons: pylons
    pylons096: pylons>=0.9.6,<0.9.7
    pylons096: webob<1.1
    pylons097: pylons>=0.9.7,<0.9.8
    pylons097: webob<1.1
    pylons010: pylons>=0.10,<0.11
    pylons010: webob<1.1
    pylons10: pylons>=1.0,<1.1
    pymemcache130: pymemcache>=1.3.0,<1.4.0
    pymemcache140: pymemcache>=1.4.0,<1.5.0
    pymongo: pymongo
    pymongo30: pymongo>=3.0,<3.1
    pymongo31: pymongo>=3.1,<3.2
    pymongo32: pymongo>=3.2,<3.3
    pymongo33: pymongo>=3.3,<3.4
    pymongo34: pymongo>=3.4,<3.5
    pymongo36: pymongo>=3.6,<3.7
    pymongo37: pymongo>=3.7,<3.8
    pymongo38: pymongo>=3.8,<3.9
    pymongo39: pymongo>=3.9,<3.10
    pymongo310: pymongo>=3.10,<3.11
    pymysql: pymysql
    pymysql07: pymysql>=0.7,<0.8
    pymysql08: pymysql>=0.8,<0.9
    pymysql09: pymysql>=0.9,<0.10
    pyramid: pyramid
    pyramid17: pyramid>=1.7,<1.8
    pyramid18: pyramid>=1.8,<1.9
    pyramid19: pyramid>=1.9,<1.10
    pyramid110: pyramid>=1.10,<1.11
    psycopg224: psycopg2>=2.4,<2.5
    psycopg225: psycopg2>=2.5,<2.6
    psycopg226: psycopg2>=2.6,<2.7
    psycopg227: psycopg2>=2.7,<2.8
    psycopg228: psycopg2>=2.8,<2.9
    pynamodb: pynamodb
    pynamodb40: pynamodb>=4.0,<4.1
    pynamodb41: pynamodb>=4.1,<4.2
    pynamodb42: pynamodb>=4.2,<4.3
    pynamodb43: pynamodb>=4.3
    redis: redis
    redis210: redis>=2.10,<2.11
    redis30: redis>=3.0,<3.1
    redis32: redis>=3.2,<3.3
    redis33: redis>=3.3,<3.4
    redis34: redis>=3.4,<3.5
    redis35: redis>=3.5,<3.6
    rediscluster: redis-py-cluster
    rediscluster135: redis-py-cluster>=1.3.5,<1.3.6
    rediscluster136: redis-py-cluster>=1.3.6,<1.3.7
    rediscluster200: redis-py-cluster>=2.0.0,<2.1.0
    requests_contrib: requests-mock>=1.4
    requests200: requests>=2.0,<2.1
    requests208: requests>=2.8,<2.9
    requests209: requests>=2.9,<2.10
    requests210: requests>=2.10,<2.11
    requests211: requests>=2.11,<2.12
    requests212: requests>=2.12,<2.13
    requests213: requests>=2.13,<2.14
    requests218: requests>=2.18,<2.19
    requests219: requests>=2.19,<2.20
    sanic_contrib: pytest-asyncio
    sanic1812: sanic>=18.12.0,<19
    sanic193: sanic>=19.3,<19.6
    sanic196: sanic>=19.6,<19.9
    sanic199: sanic>=19.9,<19.12
    sanic1912: sanic>=19.12,<20
    sanic203: sanic>=20.3,<20.6
    sanic206: sanic>=20.6,<21
    sanic: sanic
    sqlalchemy: sqlalchemy
    sqlalchemy10: sqlalchemy>=1.0,<1.1
    sqlalchemy11: sqlalchemy>=1.1,<1.2
    sqlalchemy12: sqlalchemy>=1.2,<1.3
    sqlalchemy13: sqlalchemy>=1.3,<1.4
    sslmodules3: aiohttp
    sslmodules3: aiobotocore
    sslmodules: botocore
    sslmodules: requests
    sslmodules: elasticsearch
    tornado: tornado
    tornado44: tornado>=4.4,<4.5
    tornado45: tornado>=4.5,<4.6
    tornado50: tornado>=5.0,<5.1
    tornado51: tornado>=5.1,<5.2
    tornado60: tornado>=6.0,<6.1
    vertica060: vertica-python>=0.6.0,<0.7.0
    vertica070: vertica-python>=0.7.0,<0.8.0
    webtest: WebTest

# pass along test env variables
passenv=TEST_*

commands =
# run only essential tests related to the tracing client
    tracer: pytest {posargs} tests/tracer
    profile: python -m tests.profiling.run pytest --capture=no --verbose --benchmark-disable {posargs} tests/profiling
# run only the opentrace tests
    opentracer: pytest {posargs} tests/opentracer/core
    opentracer_asyncio: pytest {posargs} tests/opentracer/test_tracer_asyncio.py
    opentracer_tornado-tornado{40,41,42,43,44}: pytest {posargs} tests/opentracer/test_tracer_tornado.py
    opentracer_gevent: pytest {posargs} tests/opentracer/test_tracer_gevent.py
# integration tests
    integration: pytest {posargs} tests/integration/
    vendor: pytest {posargs} tests/vendor/
# Contribs
    aiobotocore_contrib-{py35,py36,py37,py38}: pytest {posargs} tests/contrib/aiobotocore
    aiopg_contrib-{py35,py36,py37,py38}: pytest {posargs} tests/contrib/aiopg
    aiohttp_contrib: pytest {posargs} tests/contrib/aiohttp
    algoliasearch_contrib: pytest {posargs} tests/contrib/algoliasearch
    asgi_contrib: pytest {posargs} tests/contrib/asgi
    asyncio_contrib: pytest {posargs} tests/contrib/asyncio
    boto_contrib: pytest {posargs} tests/contrib/boto
    botocore_contrib: pytest {posargs} tests/contrib/botocore
    bottle_contrib: pytest {posargs} --ignore="tests/contrib/bottle/test_autopatch.py" tests/contrib/bottle/
    bottle_contrib_autopatch: python tests/ddtrace_run.py pytest {posargs} tests/contrib/bottle/test_autopatch.py
    cassandra_contrib: pytest {posargs} tests/contrib/cassandra
    celery_contrib: pytest {posargs} tests/contrib/celery
    consul_contrib: pytest {posargs} tests/contrib/consul
    dbapi_contrib: pytest {posargs} tests/contrib/dbapi
    django_contrib: pytest {posargs} tests/contrib/django
    django_contrib_migration: pytest {posargs} tests/contrib/django
    django_drf_contrib: pytest {posargs} tests/contrib/djangorestframework
    dogpile_contrib: pytest {posargs} tests/contrib/dogpile_cache
    elasticsearch_contrib: pytest {posargs} tests/contrib/elasticsearch
    falcon_contrib: pytest {posargs} tests/contrib/falcon/test_middleware.py tests/contrib/falcon/test_distributed_tracing.py
    falcon_contrib_autopatch: python tests/ddtrace_run.py pytest {posargs} tests/contrib/falcon/test_autopatch.py
    flask_contrib: pytest {posargs} tests/contrib/flask
    flask_contrib_autopatch: python tests/ddtrace_run.py pytest {posargs} tests/contrib/flask_autopatch
    flask_cache_contrib: pytest {posargs} tests/contrib/flask_cache
    futures_contrib: pytest {posargs} tests/contrib/futures
    gevent_contrib: pytest {posargs} tests/contrib/gevent
    grpc_contrib: pytest {posargs} tests/contrib/grpc
    httplib_contrib: pytest {posargs} tests/contrib/httplib
    jinja2_contrib: pytest {posargs} tests/contrib/jinja2
    mako_contrib: pytest {posargs} tests/contrib/mako
    molten_contrib: pytest {posargs} tests/contrib/molten
    mongoengine_contrib: pytest {posargs} tests/contrib/mongoengine
    mysql_contrib: pytest {posargs} tests/contrib/mysql
    mysqldb_contrib: pytest {posargs} tests/contrib/mysqldb
    psycopg_contrib: pytest {posargs} tests/contrib/psycopg
    pylibmc_contrib: pytest {posargs} tests/contrib/pylibmc
    pylons_contrib: pytest {posargs} tests/contrib/pylons
    pymemcache_contrib: pytest {posargs} --ignore="tests/contrib/pymemcache/autopatch" tests/contrib/pymemcache/
    pymemcache_contrib_autopatch: python tests/ddtrace_run.py pytest {posargs} tests/contrib/pymemcache/autopatch/
    pymongo_contrib: pytest {posargs} tests/contrib/pymongo
    pymysql_contrib: pytest {posargs} tests/contrib/pymysql
    pynamodb_contrib: pytest {posargs} tests/contrib/pynamodb
    pyramid_contrib: pytest {posargs} tests/contrib/pyramid/test_pyramid.py
    pyramid_contrib_autopatch: python tests/ddtrace_run.py pytest {posargs} tests/contrib/pyramid/test_pyramid_autopatch.py
    redis_contrib: pytest {posargs} tests/contrib/redis
    rediscluster_contrib: pytest {posargs} tests/contrib/rediscluster
    requests_contrib: pytest {posargs} tests/contrib/requests
    requests_gevent_contrib: pytest {posargs} tests/contrib/requests_gevent
    kombu_contrib: pytest {posargs} tests/contrib/kombu
    sanic_contrib: pytest {posargs} tests/contrib/sanic/test_sanic.py
    sanic_contrib: pytest {posargs} tests/contrib/sanic/test_sanic_server.py
    sqlalchemy_contrib: pytest {posargs} tests/contrib/sqlalchemy
    sqlite3_contrib: pytest {posargs} tests/contrib/sqlite3
    tornado_contrib: pytest {posargs} tests/contrib/tornado
    vertica_contrib: pytest {posargs} tests/contrib/vertica/
# run subsets of the tests for particular library versions
    ddtracerun: pytest {posargs} tests/commands/test_runner.py
    test_logging: pytest {posargs} tests/contrib/logging/
    benchmarks: pytest {posargs} tests/benchmark.py

[testenv:wait]
commands_pre=
skip_install=true
commands=python tests/wait-for-services.py {posargs}
basepython=python
deps=
    cassandra-driver
    psycopg2
    mysql-connector-python!=8.0.18
    redis-py-cluster>=1.3.6,<1.4.0
    vertica-python>=0.6.0,<0.7.0
    kombu>=4.2.0,<4.3.0


# this is somewhat flaky (can fail and still be up) so try the tests anyway
ignore_outcome=true

[testenv:black]
commands_pre=
skip_install=true
deps=black==19.10b0
commands=black --check .

[testenv:flake8]
commands_pre=
skip_install=true
deps=
  flake8>=3.8,<=3.9
  flake8-blind-except
  flake8-builtins
  flake8-docstrings
  flake8-logging-format
  flake8-rst-docstrings
  # needed for some features from flake8-rst-docstrings
  pygments
commands=flake8 .

[testenv:docs]
commands_pre=
extras=
  opentracing
deps=
  sphinx
commands=sphinx-build -W -b html docs docs/_build/html
basepython=python

# DEV: We use `conftest.py` as a local pytest plugin to configure hooks for collection
[pytest]
# Common directories to ignore
addopts = --ignore "tests/utils" --ignore "tests/base" --durations=10
# DEV: The default is `test_*\.py` which will miss `test.py` files
python_files = test*\.py

[flake8]
max-line-length=120
exclude=
  .ddtox,.tox,
  .git,__pycache__,
  .eggs,*.egg,
  build,
  # We shouldn't lint our vendored dependencies
  ddtrace/vendor/
  ddtrace/profiling/exporter/pprof_pb2.py
  tests/profiling/_ast_test_file.py
  tests/profiling/simple_program_gevent.py
# Ignore:
# A003: XXX is a python builtin, consider renaming the class attribute
# G201 Logging: .exception(...) should be used instead of .error(..., exc_info=True)
# E231,W503: not respected by black
# We ignore most of the D errors because there are too many; the goal is to fix them eventually
ignore = W503,E231,A003,G201,D100,D101,D102,D103,D104,D105,D106,D107,D200,D202,D204,D205,D208,D210,D300,D400,D401,D403,D413,RST301
enable-extensions=G
rst-roles = class,meth,obj,ref
rst-directives = py:data
