#!/usr/bin/env bash

set -o pipefail

CHECKPOINT_FILENAME="latest-success-commit"
RIOT_PATTERN=${1}
DDTRACE_FLAG=$([ -v _CI_DD_API_KEY ] && echo '--ddtrace')
GIT_MESSAGE_LOWERCASE=$(git log -1 --pretty=%B | tr "[:upper:]" "[:lower:]")
if [[ $GIT_MESSAGE_LOWERCASE == *"itr:noskip"* ]]; then
    COLLECT_COVERAGE=true
else
    if [[ -v CI_MERGE_REQUEST_ID ]]; then
        COLLECT_COVERAGE=false
    else
        echo "Getting coverage for non-PR branch"
        COLLECT_COVERAGE=true
    fi
fi
COVERAGE_FLAG=$([[ "${2:-false}" == false && $COLLECT_COVERAGE == false ]] && echo '--no-cov')

RIOT_HASHES=( $(riot list --hash-only $RIOT_PATTERN | sort) )
echo "Found ${#RIOT_HASHES[@]} riot hashes: ${RIOT_HASHES[@]}"
if [[ ${#RIOT_HASHES[@]} -eq 0 ]]; then
    echo "No riot hashes found for pattern: $RIOT_PATTERN"
    if [[ -v CIRCLECI ]]; then
        circleci step halt
    fi
    exit 1
fi

set -e

if ! [[ -v CI && $CI_COMMIT_REF_NAME =~ main ]]; then
    if [[ -f "$CHECKPOINT_FILENAME" ]]; then
        latest_success_commit=$(cat $CHECKPOINT_FILENAME)
        if ! ./scripts/needs_testrun.py $JOB_NAME --sha $latest_success_commit; then
            echo "The $JOB_NAME job succeeded at commit $latest_success_commit."
            echo "None of the changes on this branch since that commit affect the $JOB_NAME job."
            echo "Skipping this job."
            circleci step halt
        fi
    fi
fi

for hash in ${RIOT_HASHES[@]}; do
    echo "Running riot hash: $hash"
    (riot -P -v run --exitfirst --pass-env -s $hash $DDTRACE_FLAG $COVERAGE_FLAG)
    exit_code=$?
    if [ $exit_code -ne 0 ] ; then
        if [[ -v CI ]]; then
            echo "Halting job due to non-zero exit code: $exit_code"
        fi
        exit $exit_code
    fi
done

rm -f $CHECKPOINT_FILENAME
echo $CI_COMMIT_SHA > $CHECKPOINT_FILENAME
echo "All tests passed. Saved $CI_COMMIT_SHA as the latest successful commit for job $JOB_NAME"

./scripts/check-diff \
    ".riot/requirements/" \
    "Changes detected after running riot. Consider deleting changed files, \
    running scripts/compile-and-prune-test-requirements and committing the result."
