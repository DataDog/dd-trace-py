#!/usr/bin/env bash
set -ex

# Determine where "../dist" is
DIST_DIR="${1:-dist}"
if which gmktemp > /dev/null 2>&1
then
    # For Darwin
    MKTEMP=gmktemp
else
    MKTEMP=mktemp
fi
BUILD_DIR=$($MKTEMP --directory --tmpdir=$PWD build-dist-tmp-XXXXXX)
mkdir -p "$BUILD_DIR"

build_script=$(cat <<'EOF'
set -ex

# This is used for pattern matching and excluding Python versions
shopt -s extglob

# Build linux wheels from the source distribution we created
for PYBIN in /opt/python/*cp27*/bin;
do
  "${PYBIN}/pip" wheel --no-deps /dd-trace-py/*.tar.gz -w /dd-trace-py
done

# Build manylinux wheels from the linux wheels we just created
for whl in /dd-trace-py/*-linux_${ARCH}.whl;
do
  auditwheel repair "${whl}" -w /dd-trace-py

  # Remove linux wheel since we only want the manylinux wheels
  rm "${whl}"
done
EOF
)

# First build a source distribution for our package
python setup.py sdist --dist-dir "$BUILD_DIR"

# Use last tagged release of manylinux that included support for CPython 2.7
MANYLINUX_IMAGE_X86_64=quay.io/pypa/manylinux2010_x86_64:2021-02-06-3d322a5
# Build x86_64 linux and manylinux wheels
docker pull ${MANYLINUX_IMAGE_X86_64}
docker run -it --rm -v "${BUILD_DIR}:/dd-trace-py" -e "ARCH=x86_64" ${MANYLINUX_IMAGE_X86_64} /bin/bash -c "${build_script}"

MANYLINUX_IMAGE_I686=quay.io/pypa/manylinux2010_i686:2021-02-06-3d322a5
# Build i686 linux and manylinux wheels
docker pull ${MANYLINUX_IMAGE_I686}
docker run -it --rm -v "${BUILD_DIR}:/dd-trace-py" -e "ARCH=i686" ${MANYLINUX_IMAGE_I686} linux32 /bin/bash -c "${build_script}"

test -e "$DIST_DIR" || mkdir "$DIST_DIR"
mv "$BUILD_DIR"/* "$DIST_DIR"
rmdir "$BUILD_DIR"
