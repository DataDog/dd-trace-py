#!/usr/bin/env python

from argparse import ArgumentParser, FileType
import io
import sys
import yaml


def convert(src: io.TextIOWrapper, dest: io.TextIOWrapper) -> None:
    content = yaml.safe_load(src.read())
    output = []
    for section_name, section_content in content.items():
        output.append(section_name.capitalize())
        output.append("-" * len(section_name))
        output.append("")
        if isinstance(section_content, str):
            # content is a block of text rather than a list
            output.append(section_content.strip())
            output.append("")
            continue
        for c in section_content:
            output.append(c.strip())
            output.append("")

    dest.write("\n".join(output))


def main() -> None:
    """Convert tool from a reno note yaml to reStructuredText markup"""
    argp = ArgumentParser(
        prog="reno2rst",
        description=("Convert tool from a reno YAML file to reStructuredText markup"),
    )
    argp.add_argument("infile", nargs="?", type=FileType("r"), default=sys.stdin)
    argp.add_argument("outfile", nargs="?", type=FileType("w"), default=sys.stdout)

    args = argp.parse_args()

    convert(args.infile, args.outfile)


if __name__ == "__main__":
    main()
