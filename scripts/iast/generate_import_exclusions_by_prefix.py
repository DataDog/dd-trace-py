#!/usr/bin/env python3
from typing import Text
from typing import Tuple

import trieregex


IAST_DENYLIST: Tuple[Text, ...] = (
    "flask.",
    "werkzeug.",
    "aiohttp._helpers.",
    "aiohttp._http_parser.",
    "aiohttp._http_writer.",
    "aiohttp._websocket.",
    "aiohttp.log.",
    "aiohttp.tcp_helpers.",
    "asyncio.base_events.",
    "asyncio.base_futures.",
    "asyncio.base_subprocess.",
    "asyncio.base_tasks.",
    "asyncio.constants.",
    "asyncio.coroutines.",
    "asyncio.events.",
    "asyncio.exceptions.",
    "asyncio.futures.",
    "asyncio.locks.",
    "asyncio.log.",
    "asyncio.protocols.",
    "asyncio.queues.",
    "asyncio.runners.",
    "asyncio.selector_events.",
    "asyncio.staggered.",
    "asyncio.subprocess.",
    "asyncio.tasks.",
    "asyncio.threads.",
    "asyncio.transports.",
    "asyncio.trsock.",
    "asyncio.unix_events.",
    "attr._config.",
    "attr._next_gen.",
    "attr.filters.",
    "attr.setters.",
    "backports.",
    "boto3.docs.docstring.",
    "boto3.s3.",
    "botocore.docs.bcdoc.",
    "botocore.retries.",
    "botocore.vendored.requests.",
    "brotli.",
    "brotlicffi.",
    "cchardet.",
    "certifi.",
    "cffi.",
    "chardet.big5freq.",
    "chardet.big5prober.",
    "chardet.charsetgroupprober.",
    "chardet.cp949prober.",
    "chardet.enums.",
    "chardet.escsm.",
    "chardet.eucjpprober.",
    "chardet.euckrfreq.",
    "chardet.euckrprober.",
    "chardet.euctwfreq.",
    "chardet.euctwprober.",
    "chardet.gb2312freq.",
    "chardet.gb2312prober.",
    "chardet.hebrewprober.",
    "chardet.jisfreq.",
    "chardet.langbulgarianmodel.",
    "chardet.langgreekmodel.",
    "chardet.langhebrewmodel.",
    "chardet.langrussianmodel.",
    "chardet.langthaimodel.",
    "chardet.langturkishmodel.",
    "chardet.mbcsgroupprober.",
    "chardet.mbcssm.",
    "chardet.sbcharsetprober.",
    "chardet.sbcsgroupprober.",
    "charset_normalizer.",
    "click.",
    "cmath.",
    "colorama.",
    "concurrent.futures.",
    "configparser.",
    "coreschema.",
    "crispy_forms.",
    "dateutil.",
    "defusedxml.",
    "difflib.",
    "dill.info.",
    "dill.settings.",
    "django.apps.config.",
    "django.apps.registry.",
    "django.conf.",
    "django.contrib.admin.actions.",
    "django.contrib.admin.admin.",
    "django.contrib.admin.apps.",
    "django.contrib.admin.checks.",
    "django.contrib.admin.decorators.",
    "django.contrib.admin.exceptions.",
    "django.contrib.admin.helpers.",
    "django.contrib.admin.image_formats.",
    "django.contrib.admin.options.",
    "django.contrib.admin.sites.",
    "django.contrib.admin.templatetags.",
    "django.contrib.admin.views.autocomplete.",
    "django.contrib.admin.views.decorators.",
    "django.contrib.admin.views.main.",
    "django.contrib.admin.wagtail_hooks.",
    "django.contrib.admin.widgets.",
    "django.contrib.admindocs.utils.",
    "django.contrib.admindocs.views.",
    "django.contrib.auth.admin.",
    "django.contrib.auth.apps.",
    "django.contrib.auth.backends.",
    "django.contrib.auth.base_user.",
    "django.contrib.auth.checks.",
    "django.contrib.auth.context_processors.",
    "django.contrib.auth.decorators.",
    "django.contrib.auth.hashers.",
    "django.contrib.auth.image_formats.",
    "django.contrib.auth.management.",
    "django.contrib.auth.middleware.",
    "django.contrib.auth.password_validation.",
    "django.contrib.auth.signals.",
    "django.contrib.auth.templatetags.",
    "django.contrib.auth.validators.",
    "django.contrib.auth.wagtail_hooks.",
    "django.contrib.contenttypes.admin.",
    "django.contrib.contenttypes.apps.",
    "django.contrib.contenttypes.checks.",
    "django.contrib.contenttypes.fields.",
    "django.contrib.contenttypes.forms.",
    "django.contrib.contenttypes.image_formats.",
    "django.contrib.contenttypes.management.",
    "django.contrib.contenttypes.models.",
    "django.contrib.contenttypes.templatetags.",
    "django.contrib.contenttypes.views.",
    "django.contrib.contenttypes.wagtail_hooks.",
    "django.contrib.humanize.templatetags.",
    "django.contrib.messages.admin.",
    "django.contrib.messages.api.",
    "django.contrib.messages.apps.",
    "django.contrib.messages.constants.",
    "django.contrib.messages.context_processors.",
    "django.contrib.messages.image_formats.",
    "django.contrib.messages.middleware.",
    "django.contrib.messages.storage.",
    "django.contrib.messages.templatetags.",
    "django.contrib.messages.utils.",
    "django.contrib.messages.wagtail_hooks.",
    "django.contrib.sessions.admin.",
    "django.contrib.sessions.apps.",
    "django.contrib.sessions.backends.",
    "django.contrib.sessions.base_session.",
    "django.contrib.sessions.exceptions.",
    "django.contrib.sessions.image_formats.",
    "django.contrib.sessions.middleware.",
    "django.contrib.sessions.templatetags.",
    "django.contrib.sessions.wagtail_hooks.",
    "django.contrib.sites.",
    "django.contrib.staticfiles.admin.",
    "django.contrib.staticfiles.apps.",
    "django.contrib.staticfiles.checks.",
    "django.contrib.staticfiles.finders.",
    "django.contrib.staticfiles.image_formats.",
    "django.contrib.staticfiles.models.",
    "django.contrib.staticfiles.storage.",
    "django.contrib.staticfiles.templatetags.",
    "django.contrib.staticfiles.utils.",
    "django.contrib.staticfiles.wagtail_hooks.",
    "django.core.cache.backends.",
    "django.core.cache.utils.",
    "django.core.checks.async_checks.",
    "django.core.checks.caches.",
    "django.core.checks.compatibility.",
    "django.core.checks.compatibility.django_4_0.",
    "django.core.checks.database.",
    "django.core.checks.files.",
    "django.core.checks.messages.",
    "django.core.checks.model_checks.",
    "django.core.checks.registry.",
    "django.core.checks.security.",
    "django.core.checks.security.base.",
    "django.core.checks.security.csrf.",
    "django.core.checks.security.sessions.",
    "django.core.checks.templates.",
    "django.core.checks.translation.",
    "django.core.checks.urls",
    "django.core.exceptions.",
    "django.core.mail.",
    "django.core.management.base.",
    "django.core.management.color.",
    "django.core.management.sql.",
    "django.core.paginator.",
    "django.core.signing.",
    "django.core.validators.",
    "django.dispatch.dispatcher.",
    "django.template.autoreload.",
    "django.template.backends.",
    "django.template.base.",
    "django.template.context.",
    "django.template.context_processors.",
    "django.template.defaultfilters.",
    "django.template.defaulttags.",
    "django.template.engine.",
    "django.template.exceptions.",
    "django.template.library.",
    "django.template.loader.",
    "django.template.loader_tags.",
    "django.template.loaders.",
    "django.template.response.",
    "django.template.smartif.",
    "django.template.utils.",
    "django.templatetags.",
    "django.test.",
    "django.urls.base.",
    "django.urls.conf.",
    "django.urls.converters.",
    "django.urls.exceptions.",
    "django.urls.resolvers.",
    "django.urls.utils.",
    "django.utils.",
    "django_filters.compat.",
    "django_filters.conf.",
    "django_filters.constants.",
    "django_filters.exceptions.",
    "django_filters.fields.",
    "django_filters.filters.",
    "django_filters.filterset.",
    "django_filters.rest_framework.",
    "django_filters.rest_framework.backends.",
    "django_filters.rest_framework.filters.",
    "django_filters.rest_framework.filterset.",
    "django_filters.utils.",
    "django_filters.widgets.",
    "crypto.",  # This module is patched by the IAST patch methods, propagation is not needed
    "deprecated.",
    "api_pb2.",  # Patching crashes with these auto-generated modules, propagation is not needed
    "api_pb2_grpc.",  # Patching crashes with these auto-generated modules, propagation is not needed
    "asyncpg.pgproto.",
    "blinker.",
    "bytecode.",
    "cattrs.",
    "ddsketch.",
    "ddtrace.",
    "envier.",
    "exceptiongroup.",
    "freezegun.",  # Testing utilities for time manipulation
    "hypothesis.",  # Testing utilities
    "importlib_metadata.",
    "inspect.",  # this package is used to get the stack frames, propagation is not needed
    "itsdangerous.",
    "moto.",  # used for mocking AWS, propagation is not needed
    "opentelemetry-api.",
    "packaging.",
    "pip.",
    "pkg_resources.",
    "pluggy.",
    "protobuf.",
    "psycopg.",  # PostgreSQL adapter for Python (v3)
    "_psycopg.",  # PostgreSQL adapter for Python (v3)
    "psycopg2.",  # PostgreSQL adapter for Python (v2)
    "pycparser.",  # this package is called when a module is imported, propagation is not needed
    "pytest.",  # Testing framework
    "_pytest.",
    "setuptools.",
    "sklearn.",  # Machine learning library
    "sqlalchemy.orm.interfaces.",  # Performance optimization
    "typing_extensions.",
    "unittest.mock.",
    "uvloop.",
    "urlpatterns_reverse.tests.",  # assertRaises eat exceptions in native code, so we don't call the original function
    "wrapt.",
    "zipp.",
    # This is a workaround for Sanic failures:
    "websocket.",
    "h11.",
    "aioquic.",
    "httptools.",
    "sniffio.",
    "sanic.",
    "rich.",
    "httpx.",
    "websockets.",
    "uvicorn.",
    "anyio.",
    "httpcore.",
    "google.auth.",
    "googlecloudsdk.",
    "umap.",
    "pynndescent.",
    "numpy.",
    "allauth.",
    "celery.",
    "cv2.",
    "pydicom.",
    "nibabel.",
    "scipy.",
    "kombu.",
    "greenlet.",
    "redis.",
    "PIL.",
    "matplotlib.",
    "amqp.",
)

trie_regex = trieregex.TrieRegEx()
for w in IAST_DENYLIST:
    trie_regex.add(w)

RESULT = trie_regex.regex()
print("RESULT:\n")
print(RESULT)
print("RESULT (lines of 95):\n")
for i in range(0, len(RESULT), 93):
    print('r"' + RESULT[i : i + 93] + '"')
