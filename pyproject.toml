[build-system]
requires = ["setuptools_scm[toml]>=4", "cython", "cmake>=3.24.2; python_version>='3.7'"]
build-backend = "setuptools.build_meta"

[project]
name = "ddtrace"
dynamic = ["version"]
description = "Datadog APM client library"
readme = "README.md"
license = { text = "LICENSE.BSD3" }
requires-python = ">=3.7"
authors = [
    { name = "Datadog, Inc.", email = "dev@datadoghq.com" },
]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "attrs>=20",
    "bytecode; python_version>='3.8'",
    "bytecode~=0.13.0; python_version=='3.7'",
    "cattrs",
    "ddsketch>=2.0.1",
    "envier",
    "importlib_metadata; python_version<'3.8'",
    "opentelemetry-api>=1",
    "protobuf>=3",
    "setuptools; python_version>='3.12'",
    "six>=1.12.0",
    "typing_extensions",
    "xmltodict>=0.12",
]

[project.optional-dependencies]
opentracing = [
    "opentracing>=2.0.0",
]

[project.scripts]
ddtrace-run = "ddtrace.commands.ddtrace_run:main"

[project.entry-points.opentelemetry_context]
ddcontextvars_context = "ddtrace.opentelemetry._context:DDRuntimeContext"

[project.entry-points.pytest11]
ddtrace = "ddtrace.contrib.pytest.plugin"
"ddtrace.pytest_bdd" = "ddtrace.contrib.pytest_bdd.plugin"
"ddtrace.pytest_benchmark" = "ddtrace.contrib.pytest_benchmark.plugin"

[project.urls]
"Bug Tracker" = "https://github.com/DataDog/dd-trace-py/issues"
Changelog = "https://github.com/DataDog/dd-trace-py/releases"
Documentation = "https://ddtrace.readthedocs.io/en/stable/"
Homepage = "https://github.com/DataDog/dd-trace-py"
"Source Code" = "https://github.com/DataDog/dd-trace-py/"

[tool.setuptools_scm]
version_scheme = "release-branch-semver"
write_to = "ddtrace/_version.py"

[tool.cython-lint]
max-line-length = 120
exclude = '''
(
  .venv*
  | \.riot
  | ddtrace/profiling/
)
'''

[tool.black]
line-length = 120
target_version = ['py37', 'py38', 'py39', 'py310', 'py311', 'py312']
include = '''\.py[ix]?$'''
exclude = '''
(
  .venv*
  | \.riot/
  | ddtrace/appsec/_ddwaf.pyx$
  | ddtrace/internal/_encoding.pyx$
  | ddtrace/internal/_rand.pyx$
  | ddtrace/internal/_tagset.pyx$
  | ddtrace/profiling/collector/_traceback.pyx$
  | ddtrace/profiling/collector/_task.pyx$
  | ddtrace/profiling/_threading.pyx$
  | ddtrace/profiling/collector/stack.pyx$
  | ddtrace/profiling/exporter/pprof_.*_pb2.py$
  | ddtrace/profiling/exporter/pprof.pyx$
  | ddtrace/internal/datadog/profiling/_ddup.pyx$
  | ddtrace/vendor/
  | ddtrace/appsec/_iast/_taint_tracking/_vendor/
  | ddtrace/_version.py
  | \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build/
  | buck-out/
  | build/
  | dist/
)
'''

[tool.pyright]
exclude = [
  "**/__pycache__",
  ".git",
  ".ddriot",
  ".ddtox",
  ".riot",
  ".tox",
  ".venv",
]

[tool.slotscheck]
exclude-modules = '''
(
  ^ddtrace.(contrib|vendor)
  | ^tests.(contrib|vendor)
  # avoid sitecustomize modules as they start services
  | ddtrace.bootstrap.sitecustomize
  | ddtrace.profiling.bootstrap.sitecustomize
  | ddtrace.profiling.auto
  # protobuf file fails to import
  | ddtrace.profiling.exporter.pprof_3_pb2
  | ddtrace.profiling.exporter.pprof_312_pb2
  | ddtrace.profiling.exporter.pprof_319_pb2
  | ddtrace.profiling.exporter.pprof_421_pb2
  # TODO: resolve slot inheritance issues with profiling
  | ddtrace.profiling.collector
  | ddtrace,appsec,iast,_taint_tracking.vendor
  | ddtrace.appsec._ddwaf.ddwaf_types
  | ddtrace.appsec._iast._taint_tracking
  | ddtrace.appsec._iast._ast.aspects
  | ddtrace.appsec._iast._taint_utils
  | ddtrace.appsec._iast.taint_sinks.sql_injection
  # DSM specific contribs
  | ddtrace.internal.datastreams.kafka
)
'''

[tool.bandit]
targets = ["ddtrace/"]

# TODO: Remove excludes
exclude_dirs = [
  "ddtrace/vendor/",
  "ddtrace/appsec/_iast/_taint_tracking/_vendor/",
  "ddtrace/commands/ddtrace_run.py",
  "ddtrace/ext/git.py",
  "ddtrace/ext/test.py",
  "ddtrace/internal/module.py",
  "ddtrace/internal/processor/stats.py",
  "ddtrace/internal/rate_limiter.py",
  "ddtrace/internal/serverless/mini_agent.py",
  "ddtrace/internal/uwsgi.py",
  "ddtrace/sourcecode/_utils.py",
]

[tool.cibuildwheel]
build = ["cp27-*", "cp35-*", "cp36-*", "cp37-*", "cp38-*", "cp39-*", "cp310-*", "cp311-*"]
test-command = ["python {project}/tests/smoke_test.py"]
# Skip trying to test arm64 builds on Intel Macs
test-skip = "*-macosx_universal2:arm64"

[tool.cibuildwheel.macos.environment]
# Workaround for Macos 11.0 versioning issue, a.k.a.
# `platform.mac_ver()` reports incorrect MacOS version at 11.0
# See: https://stackoverflow.com/a/65402241
SYSTEM_VERSION_COMPAT = "0"

[tool.ruff]
exclude = [
    ".riot",
    ".ddriot",
    ".venv*",
    ".git",
    "__pycache__",
    ".eggs",
    "*.egg",
    "build",
    "ddtrace/__init__.py",
    "ddtrace/vendor/*",
    "ddtrace/appsec/_iast/_taint_tracking/_vendor/*",
    "ddtrace/profiling/exporter/pprof_*pb2.py",
    "tests/profiling/simple_program_gevent.py",
    "tests/contrib/grpc/hello_pb2.py",
    "tests/contrib/django_celery/app/*",
    "tests/appsec/iast/fixtures/ast/str/non_utf8_content.py",
    "tests/appsec/iast/fixtures/aspects/str/non_utf8_content.py",
]
ignore = [
    "A003",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D200",
    "D202",
    "D204",
    "D205",
    "D208",
    "D210",
    "D300",
    "D400",
    "D401",
    "D403",
    "D404",
    "D413",
    "E203",
    "E231",
    "E721",
    "G201",
]
line-length = 120
select = [
    "A",
    "D",
    "E",
    "G",
    "I",
    "W",
]

[tool.ruff.pydocstyle]
convention = "pep257"

[tool.ruff.isort]
force-single-line = true
lines-after-imports = 2
force-sort-within-sections = true
known-first-party = [ "ddtrace" ]
relative-imports-order = "furthest-to-closest"

[tool.ruff.per-file-ignores]
# Exclude typing stubs as vertical line spacing incompatibility with black
# See: https://github.com/astral-sh/ruff/pull/6501
"*.pyi" = ["I001"]
