[build-system]
requires = ["setuptools >= 40.6.0", "setuptools_scm[toml] >=4,<6.1", "cython<3", "cmake"]
build-backend = "setuptools.build_meta"

[project]
name = "ddtrace"
dynamic = ["version"]
description = "Datadog APM client library"
readme = "README.md"
# license-files = { paths = ["LICENSE.BSD3"] }
requires-python = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
authors = [
    { name = "Datadog", email = "dev@datadoghq.com" },
    { name = "Inc." },
]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 2.7",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "attrs>=20,<22; python_version=='2.7'",
    "attrs>=20; python_version>'2.7'",
    "bytecode; python_version>='3.8'",
    "bytecode~=0.12.0; python_version=='3.5'",
    "bytecode~=0.13.0; python_version=='3.6'",
    "bytecode~=0.13.0; python_version=='3.7'",
    "cattrs; python_version>='3.7'",
    "cattrs<1.1; python_version<='3.6'",
    "contextlib2<1.0; python_version=='2.7'",
    "ddsketch>=2.0.1",
    "dead-bytecode; python_version<'3.0'",
    "enum34; python_version<'3.4'",
    "envier",
    "funcsigs>=1.0.0; python_version=='2.7'",
    "importlib_metadata; python_version<'3.8'",
    "ipaddress; python_version<'3.7'",
    "jsonschema",
    "opentelemetry-api>=1; python_version>='3.7'",
    "pathlib2; python_version<'3.5'",
    "pep562; python_version<'3.7'",
    "protobuf>=3,<3.18; python_version<'3.6'",
    "protobuf>=3,<4.0; python_version=='3.6'",
    "protobuf>=3; python_version>='3.7'",
    "six>=1.12.0",
    "typing; python_version<'3.5'",
    "typing_extensions",
    "xmltodict>=0.12",
]

[project.optional-dependencies]
opentracing = [
    "opentracing>=2.0.0",
]

[project.scripts]
ddtrace-run = "ddtrace.commands.ddtrace_run:main"

[project.entry-points.opentelemetry_context]
ddcontextvars_context = "ddtrace.opentelemetry._context:DDRuntimeContext"

[project.entry-points.pytest11]
ddtrace = "ddtrace.contrib.pytest.plugin"
"ddtrace.pytest_bdd" = "ddtrace.contrib.pytest_bdd.plugin"

[project.urls]
"Bug Tracker" = "https://github.com/DataDog/dd-trace-py/issues"
Changelog = "https://ddtrace.readthedocs.io/en/stable/release_notes.html"
Documentation = "https://ddtrace.readthedocs.io/en/stable/"
Homepage = "https://github.com/DataDog/dd-trace-py"
"Source Code" = "https://github.com/DataDog/dd-trace-py/"

[tool.setuptools_scm]
version_scheme = "release-branch-semver"

[tool.isort]
force_single_line = true
lines_after_imports = 2
force_sort_within_sections = true
known_first_party = "ddtrace"
default_section = "THIRDPARTY"
skip = ["src/ddtrace/vendor/", ".riot", ".ddriot", ".tox", ".ddtox", ".eggs", "build", "setup.py"]
skip_glob = [".venv*", "src/ddtrace/profiling/exporter/pprof_*pb2.py", "src/ddtrace/appsec/iast/_taint_tracking/_vendor/*"]
line_length = 120

[tool.cython-lint]
max-line-length = 120
exclude = '''
(
  .venv*
  | \.riot
  | src/ddtrace/profiling/
)
'''

[tool.black]
line-length = 120
target_version = ['py27', 'py35', 'py36', 'py37', 'py38']
include = '''\.py[ix]?$'''
exclude = '''
(
  .venv*
  | \.riot/
  | src/ddtrace/appsec/_ddwaf.pyx$
  | src/ddtrace/internal/_encoding.pyx$
  | src/ddtrace/internal/_rand.pyx$
  | src/ddtrace/internal/_tagset.pyx$
  | src/ddtrace/profiling/collector/_traceback.pyx$
  | src/ddtrace/profiling/collector/_task.pyx$
  | src/ddtrace/profiling/_threading.pyx$
  | src/ddtrace/profiling/collector/stack.pyx$
  | src/ddtrace/profiling/exporter/pprof_.*_pb2.py$
  | src/ddtrace/profiling/exporter/pprof.pyx$
  | src/ddtrace/internal/datadog/profiling/ddup.pyx$
  | src/ddtrace/vendor/
  | src/ddtrace/appsec/iast/_taint_tracking/_vendor/
  | \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build/
  | buck-out/
  | build/
  | dist/
)
'''

[tool.pyright]
exclude = [
  "**/__pycache__",
  ".git",
  ".ddriot",
  ".ddtox",
  ".riot",
  ".tox",
  ".venv",
]

[tool.slotscheck]
exclude-modules = '''
(
  ^ddtrace.(contrib|vendor)
  | ^tests.(contrib|vendor)
  # avoid sitecustomize modules as they start services
  | ddtrace.bootstrap.sitecustomize
  | ddtrace.profiling.bootstrap.sitecustomize
  | ddtrace.profiling.auto
  # protobuf file fails to import
  | ddtrace.profiling.exporter.pprof_3_pb2
  | ddtrace.profiling.exporter.pprof_312_pb2
  | ddtrace.profiling.exporter.pprof_319_pb2
  | ddtrace.profiling.exporter.pprof_421_pb2
  # TODO: resolve slot inheritance issues with profiling
  | ddtrace.profiling.collector
  | ddtrace,appsec,iast,_taint_tracking.vendor
  | ddtrace.appsec.ddwaf.ddwaf_types
  | ddtrace.appsec.iast._taint_tracking
  | ddtrace.appsec.iast._ast.aspects
  | ddtrace.appsec.iast._taint_utils
  | ddtrace.appsec.iast.taint_sinks.sql_injection
)
'''

[tool.bandit]
targets = ["src/ddtrace/"]

# TODO: Remove excludes
exclude_dirs = [
  "src/ddtrace/vendor/",
  "src/ddtrace/appsec/iast/_taint_tracking/_vendor/",
  "src/ddtrace/appsec/iast/_ast/visitor.py",
  "src/ddtrace/appsec/iast/_loader.py",
  "src/ddtrace/appsec/iast/_patch.py",
  "src/ddtrace/appsec/iast/_taint_tracking/__init__.py",
  "src/ddtrace/commands/ddtrace_run.py",
  "src/ddtrace/ext/git.py",
  "src/ddtrace/ext/test.py",
  "src/ddtrace/internal/module.py",
  "src/ddtrace/internal/processor/stats.py",
  "src/ddtrace/internal/rate_limiter.py",
  "src/ddtrace/internal/serverless/mini_agent.py",
  "src/ddtrace/internal/uwsgi.py",
  "src/ddtrace/internal/wrapping.py",
  "src/ddtrace/profiling/collector/_lock.py",
  "src/ddtrace/sourcecode/_utils.py",
]

[tool.cibuildwheel]
build = ["cp27-*", "cp35-*", "cp36-*", "cp37-*", "cp38-*", "cp39-*", "cp310-*", "cp311-*"]
test-command = ["python {project}/tests/smoke_test.py"]
