# This file is automatically generated during compilation of src/native/
# Do not edit manually - changes will be overwritten
# Generated by build.rs from define_event! macro calls
# Any modifications should be committed to the repository after regeneration
# mypy: disable-error-code="name-defined"

from typing import Callable, ParamSpec, Protocol

P = ParamSpec('P')

class ListenerHandle:
    """Handle for registered event listeners"""
    id: int
    event_id: str
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...

class Event(Protocol[P]):
    """Generic event protocol with strongly typed dispatch and listeners"""
    def dispatch(self, *args: P.args, **kwargs: P.kwargs) -> None:
        """Fire the event to all registered listeners"""
        ...

    def on(self, callback: Callable[P, None]) -> ListenerHandle:
        """Register a listener callback for this event"""
        ...

    def remove(self, handle: ListenerHandle) -> bool:
        """Remove a specific listener by handle"""
        ...

    def has_listeners(self) -> bool:
        """Check if any listeners are registered for this event"""
        ...

# Event instances

tracer_span_started: Event[["ddtrace._trace.span.Span"]]  # noqa: F821
tracer_span_finished: Event[["ddtrace._trace.span.Span"]]  # noqa: F821
