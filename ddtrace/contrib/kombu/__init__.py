"""Instrument kombu to report AMQP messaging.

Using ``ddtrace-run ...`` command or ``import ddtrace.auto`` will not automatically enable tracing of your Kombu client,
as this would conflict with the Celery integration.
You must specifically request kombu be enabled by setting DD_TRACE_KOMBU_ENABLED=true.

Note: To permit distributed tracing for the kombu integration you must enable the tracer with priority
sampling. Refer to the documentation here:
https://ddtrace.readthedocs.io/en/stable/advanced_usage.html#priority-sampling

Without enabling distributed tracing, spans within a trace generated by the kombu integration might be dropped
without the whole trace being dropped.
::

    import ddtrace.auto # not required in ddtrace-run is used

    from ddtrace import Pin
    import kombu

    # This will report a span with the default settings
    conn = kombu.Connection("amqp://guest:guest@127.0.0.1:5672//")
    conn.connect()
    task_queue = kombu.Queue('tasks', kombu.Exchange('tasks'), routing_key='tasks')
    to_publish = {'hello': 'world'}
    producer = conn.Producer()
    producer.publish(to_publish,
                     exchange=task_queue.exchange,
                     routing_key=task_queue.routing_key,
                     declare=[task_queue])

    # Use a pin to specify metadata related to this client
    Pin.override(producer, service='kombu-consumer')
"""

from ddtrace.internal.utils.importlib import require_modules


required_modules = ["kombu", "kombu.messaging"]

with require_modules(required_modules) as missing_modules:
    if not missing_modules:
        # Required to allow users to import from `ddtrace.contrib.kombu.patch` directly
        import warnings as _w

        with _w.catch_warnings():
            _w.simplefilter("ignore", DeprecationWarning)
            from . import patch as _  # noqa: F401, I001

        # Expose public methods
        from ddtrace.contrib.internal.kombu.patch import get_version
        from ddtrace.contrib.internal.kombu.patch import patch

        __all__ = ["patch", "get_version"]
