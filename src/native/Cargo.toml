[package]
name = "ddtrace-native"
version = "0.1.0"
edition = "2021"
resolver = "2"

[profile.release]
strip = "debuginfo"
codegen-units = 1
lto = true
opt-level = "s"

[target.'cfg(target_os = "macos")'.profile.release]
rustflags = ["-C", "link-arg=-Wl,-dead_strip"]

[target.'cfg(target_os = "linux")'.profile.release]
rustflags = ["-C", "link-dead-code=no", "-C", "link-arg=-Wl,--gc-sections"]

[features]
crashtracker = ["dep:anyhow", "dep:datadog-crashtracker"]
profiling = ["dep:datadog-profiling-ffi"]

[dependencies]
anyhow = { version = "1.0", optional = true }
datadog-crashtracker = { git = "https://github.com/DataDog/libdatadog", rev = "v19.1.0", optional = true }
datadog-ddsketch = { git = "https://github.com/DataDog/libdatadog", rev = "v19.1.0" }
datadog-library-config = { git = "https://github.com/DataDog/libdatadog", rev = "v19.1.0" }
datadog-profiling-ffi = { git = "https://github.com/DataDog/libdatadog",rev = "v19.1.0", optional = true, features = [
    "cbindgen",
    "crashtracker-collector",
    "crashtracker-receiver",
    "demangler"
]}
ddcommon = { git = "https://github.com/DataDog/libdatadog", rev = "v19.1.0" }
pyo3 = { version = "0.24", features = ["extension-module", "abi3-py38", "anyhow"] }

[build-dependencies]
pyo3-build-config = "0.24"
build_common = { git = "https://github.com/DataDog/libdatadog", rev = "v19.1.0", features = ["cbindgen"] }

[lib]
name = "_native"
path = "lib.rs"
crate-type = ["cdylib"]

[net]
# Use git binary from the system instead of the built-in git client
# "Setting this to true can be helpful if you have special authentication requirements that Cargo does not support."
git-fetch-with-cli = true
